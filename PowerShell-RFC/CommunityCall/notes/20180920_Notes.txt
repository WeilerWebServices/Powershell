# PowerShell Core Community Call - September 20, 2018

## Agenda

* PowerShell Core 6.1 GA
    * what's landing in October 2018 Update / Server 2019
    * missing list of modules
* fundamentals/quality work in 6.2
    * will continue triaging community PR
* experimental flags
    * process for adding/removing them?
    * inactivity?
* DSC roadmap blog
* string cmdlet RFC

## Notes

* PowerShell Core 6.1 GA
    * [link to blogpost](https://blogs.msdn.microsoft.com/powershell/2018/09/13/announcing-powershell-core-6-1/)
    * 70% of cmdlets, ~65% of modules
    * The preview train that `6.1.0-rc` is on will be updated to `6.2.0-preview.1` when it is released
* PowerShell Core 6.2 GA
    * quality/fundamentals milestone
    * focus is on release automation
    * engineering team will backfill documentation
    * going forward, PRs will require documentation to merge
        * engineering will help out as much as possible, but community contributions are highly appreciated
    * [help contribute!](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md)
        * [contribute to PowerShell-Docs too!](https://github.com/PowerShell/PowerShell-Docs/blob/staging/CONTRIBUTING.md)
* experimental feature flags
    * need to define a criteria for accepting and expiring/deprecating experimental features
* [DSC roadmap blog](https://blogs.msdn.microsoft.com/powershell/2018/09/13/desired-state-configuration-dsc-planning-update-september-2018/)
    * 1300+ DSC resources in the PS Gallery
        * minor overlap due to phasing out of `xFoo` naming terminology
        * lots of these coming from independent repos in the community
    * "new DSC v2 platform"
        * being used in Azure services
        * slipped summer ETA for open sourcing this code
        * no new ETA today, keep your eyes peeled
    * Server 2019 DSC "v1" new features
        * pull server supports SQL server as a backend
        * can also tune Esent database perf
    * first security update for DSC
        * issues with temp configuration files
    * how to gauge the quality of DSC resources
        * base set of tests that get added to every community repo, including a badge for compliance
    * Michael to look for Server 2019 LCM version
* PowerShellGet 2.0 in PS Core 6.1.1?
    * in PS Core, it defaults to `CurrentUser` irrespective of whether you're elevated
    * technically a breaking change, may not make sense to ship in a servicing release
    * `-SkipPublisher -AllowClobber -AcceptLicense -AllowPrerelease` madness?
        * we would like to do *something* about this, but we're not exactly sure *what* to do or *when*
        * `-Force` is reinstalling when it doesn't need to
        * would be awesome to support basic `PSDepends` functionality in PowerShellGet
        * module manifest dependency chains break down with too many levels of depth, too many specific versions, and duplicate modules already installed on the box (w/ the wrong version)
        * specifying a PSRepository should possibly implicitly trust the repo
* Chocolatey discussion
    * Microsoft-official Chocolatey repo for Microsoft applications is still just a brainstorm idea
        * no plans to implement right now
    * explicit credentials are required for MSU installation over remoting
* string cmdlet RFC
    * set of cmdlets that would replace a lot of the string operators
    * PS Committee/Team will prioritize a cmdlet review and provide feedback back to Friedrich to help get this included in PS Core 6.2
    * look into `Join-String` conflict
* should ensure going forward that we mark bugs as `Issue-Bug`
    * e.g. https://github.com/powershell/powershell/issues/5983
* look through `Resolution-*` (especially `Resolution-Duplicate` and close old ones)