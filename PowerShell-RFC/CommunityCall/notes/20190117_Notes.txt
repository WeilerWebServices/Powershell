# PowerShell Community Call - January 17, 2019

## Notes

* PowerShell-Docs repo move postponed to next week (1/23)
    * Will be migrating from PowerShell GitHub org to MicrosoftDocs
    * only affects contributors, docs will remain in place on docs.microsoft.com
    * contributors should update their remotes
      (see [this blog post](https://blogs.msdn.microsoft.com/powershell/2019/01/07/the-powershell-docs-repo-is-moving/))
* PowerShellGet released an update a couple days ago
    * a few bug fixes, including removal of Gallery availability checks that impacted some folks
* PowerShell Core 6.1.2 released 2 days ago (1/15)
    * servicing release, make sure you update
* 6.2 release
    * Preview.4 coming out next week
        * includes ExperimentalFeature cmdlets, fuzzy command matching, perf fixes
    * will likely be last Preview release before our RC next month
    * the bar for contributions will be going up as we approach our RC
* after 6.2 (6.3+)
    * moving to .NET Core 3.0, first preview shipping after 6.2 GA in March
    * w/ 6 month release cadence, would GA ~September 2019
* support lifecycle
    * will likely be updating this in the future, keep your eyes peeled on aka.ms/pslifecycle
    * will likely align closer to .NET support lifecycle, includes a possible LTS at some point
* documentation hosted by Gallery (CAB/XML)
    * looking into company wide solution for this problem, would like to expose it to community as well
    * early days
* packaging a script as an application package with all its dependencies
    * hard problem, not something we've looked into lately
* Twitch livestreaming
    * Tyler has been live coding every Thursday at 10a at twitch.tv/TylerLeonhardt
    * also check out a new feed stood up by markekraus at twitch.tv/PowerShellLive
        * auto-hosts lots of different PS streamers in one channel
    * more and more PS livestreamers are popping up
    * reach out to Tyler on Twitter if you're interested in setting up your own channel
* PowerShell RFCs: "they seem a bit stale, what's the progress on that?"
    * stood up a new 1.5 hour weekly meeting to JUST review RFCs
    * recently closed on RFC0002 (taking longer than expected)
    * if you are ready to implement a feature and the RFC is stagnant, @mention Steve and Joey, and we'll see if we can "experimentally approve" so you can implement a PR behind a feature flag
* VS Code PS extension and Editor Services
    * (soon) we're releasing an update to VS Code extension
    * will also be releasing a preview extension solution
        * will include PSReadline support (will also require PowerShell 5.1)
        * this preview will be update more frequently than the stable extension
        * will just be named differently than the stable one
    * thanks to Bergmeister we now have Run/Debug Pester tests
* Cloud Shell
    * tracking module updates (e.g. Az)
    * a few minor things, like updating the MOTD
* PowerShell Core in Azure Functions
    * Currently being developed in [this repo](https://github.com/azure/azure-functions-powershell-worker)
    * Please reach out to Joey on Twitter if you're interested in the private preview