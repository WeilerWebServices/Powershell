# PowerShell Core Community Call - November 15, 2018

## Agenda

* documentation
* recent releases
* PowerShell RFCs
* 6.2 priorities
* new PM team member

## Notes

* documentation
    * PowerShell-Docs repo will be moved from PowerShell GitHub org to
      MicrosoftDocs GitHub org
        * GitHub redirects for a while, but update your Git remotes for when
          that redirection goes away
        * no ETA today except "soon"
        * will give us more CI/CD and authoring/publishing features
    * PowerShell Doc-a-thon
        * PowerShell Team and doc writers spent an entire day burning down
          doc debt
        * community is welcome to pick up documentation issues as well,
          beginning with `reference`/`Priority-High` that are unassigned issues
* recent releases
    * 6.1.1 and 6.0.5 servicing releases shipped this week
        * contains some security fixes
        * update ASAP
    * 6.2.0-preview.2 will likely ship this week
        * case-insensitive tab completion on macOS/Linux
        * experimental feature shipping to run entire pipeline on remote end
          in implicit remoting scenarios
        * `Get-ExperimentalFeature` used to find out about more experimental
          scenarios
    * `WindowsCompatibility` module shipped GA this week
        * Bruce is publishing blog today
        * [Gallery module](https://powershellgallery.com/packages/WindowsCompatibility)
          and [GitHub repository](https://github.com/powershell/WindowsCompatibility)
* PowerShell RFCs
    * drilling down RFC debt over the next few months
    * taking better notes on conversations
    * PS Team will be authoring more small RFCs
    * RFC process designed to be slow to give all stakeholders opportunity
      to provide input
    * experimental features help accelerate that process,
      we may ask some community PR submissions to hide between feature flags,
      with an RFC approval as the switch to take it out of experimental
* Community Call
    * analyzing new technologies to migrate the Community Call
      (e.g. Teams, Discord, etc.)
* 6.2 Priorities
    * automated release pipeline
        * incurring large cost of building/testing/publishing release packages
        * this cost compounds as our supported branches grow (6.0.x, 6.1.x, 6.2.x)
        * taking a larger dependency on Azure DevOps as it matures
        * we'd like to generalize a lot of this automation so that other projects
          can adopt the same patterns, practices, and tooling
        * we release on ~14 platforms (9 Linux distros, 10 Windows distros, etc.)
        * beginning with high-volume platforms/versions based on telemetry
    * we're going to continue merging community PRs
    * some small work from PS Team
    * `preview.3` will have an experimental feature for abbreviation expansion
        * fuzzy expansion may come in the future as well
    * ScriptAnalzyer will have new features to help with building modules
      against PowerShell Core and PowerShell Standard
    * question: "are Out-GridView and other GUI tools coming back?"
        * short-term: "in Windows, yes, with .NET Core 3.0"
* new PM team member: Sydney Smith
    * main areas of focus
        * PowerShell Gallery / PowerShellGet
        * tooling: Editor Services, vscode-powershell, PSScriptAnalyzer
    * looking for feedback on the best way to communicate roadmap of these areas
    * question: "are we looking to improve PowerShellGet annoyances"
        * yes, especially around install/update
* PowerShell Core Support in Azure Functions
    * reach out to me if you're interested in trying it out
    * [Ignite talk](https://myignite.techcommunity.microsoft.com/sessions/65888)
      on Azure Automation and Azure Functions
    * Aleksandar: "disable "Deploy to Azure Automation" for `az` until it works in AA"
* question: "how are we thinking about the trade-off between performance
  and breaking changes"
    * litmus test
        * how much value does the change provide
        * to what extent does the change negatively impact the community?
