# PowerShell Core Community Call - August 16, 2018

## Agenda

* Release of the RC
* PS Core Cmdlet Coverage on Windows
* Get-* returns $null or non-terminating

## Notes

* Release of 6.1.0-RC should come in this week (by EOD Friday)
    * Assume that any open PRs are not going to be merged for 6.1.0,
      they'll have to go into 6.2.0
    * If you feel strongly your PR needs to be in 6.1.0 for some reason,
      cc @SteveL-MSFT and @joeyaiello in the PR
* Targeting the end of the month for the GA of 6.1.0
* 1900+ (I found more after the call!) cmdlets are marked as compatible in the next iteration of Windows 10
https://docs.microsoft.com/en-us/powershell/gallery/concepts/item-manifest-affecting-ui
* Any way to mark a module as compatible with just Windows, or Windows and Linux
* Why not build modules that abstract "universal" concepts (e.g. scheduled tasks)
  on both Windows and Linux
    * Difficult to merge layers of abstraction
    * Would be awesome to see an RFC of how a universal cron/schedtask module might look
        * https://github.com/PowerShell/PowerShell/issues/7541
    * Let's define top scenarios that we think are useful to be universal
    * Should these be owned/driven by PS Team, or should they
        * Darwin: give us examples, help the community drive
    * Mark: make things pluggable, tell distros/versions to implement interfaces
* Smaller and larger PowerShell packages?
    * People agree it would be useful to have composable PowerShell distributions
    * We would like to release a minimal Docker instance that others can fork and grow
* Scenarios around cross-repository dependencies that would be useful
    * E.g. Customizations on Chocolatey packages
      where both internal PS and Chocolatey repos are trusted
    * One request for a PS module for deploying internal Nuget/PSGallery repos
    * Can we have a trusted repository with rubberstamped components?
        * Looking into validating/trusting namespaces with the PS Gallery,
          would require new features in PS Gallery
        * Alternate proposal: new repository that's fully trusted,
          works with existing PS repository semantics
* PowerShell Gallery UI refresh is not final
* Get-* returns non-terminating error when value doesn't exist?
    * Discussion happening here: https://github.com/PowerShell/PowerShell/pull/7434
    * Annoying to have to handle the error
    * Realistically, many Get-* cmdlets should have a Test-* (e.g. Test-Module)
* ConPTY will make OpenSSH better! https://blogs.msdn.microsoft.com/commandline/2018/08/02/windows-command-line-introducing-the-windows-pseudo-console-conpty/