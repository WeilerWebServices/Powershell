# PowerShell Core Community Call

## Action Items

* Joey: move everyone to a Teams call

## Agenda

* Recent/Upcoming Releases
* Future branding/releases
    * .NET Core 3.0
    * PSSA rules
    * Support lifecycle
* Sydney: proposed RFC
* Blog updates
* Time for Q&A

## Notes

* Just shipped 6.1.3 as a servicing update
* 6.2.0-RC should be released next week
    * Planned final release pending any problems with the RC will be in March
    * Still based on .NET Core 2.1
* Non-goal: doing a new release of PowerShell Core that doesn't care about backwards compatibility
* With .NET Core 3.0, we'll have more of what was more available in .NET Framework
    * GUI Windows APIs (WinForms and WPF)
    * Managed C++
    * More Windows-specific APIs
* After we move to 3.0, we'll be going through a compatibility exercise
    * Initial pass will be against inbox Windows modules
    * After that, we'll start looking at other first-party modules
        * O365, Azure AD, long tail, etc.
    * Desire to look at popular community modules
* Almost finished with PS Script Analyzer compatibility rules
    * These rules will use compatibility catalogs to inform users about what might not be available in any given environment
    * Mix and match OS, versions of .NET, versions of PowerShell, etc.
* Remoting from Linux to Windows
    * Joey still owes a remoting matrix for more details
    * This will include a link to a community effort to make remoting from Linux using Kerberos easier
* Support lifecycle will likely snap to .NET Core's support lifecycle
    * .NET Core 3.0 is non-LTS
    * Some .NET Core 3.x in the future will be LTS, and so will the corresponding PowerShell
* Proposed new telemetry
    * We use telemetry to prioritize where we focus our time
        * Today, this is especially in regards to which platforms, distros, and versions are important
        * We'd like to use it to understand more, e.g. usage of experimental features
    * Privacy and performance are the top priorities in our implementation
    * Also want to make sure that our telemetry is valuable to the community in addition to Microsoft
        * To that end, we'll make our data available in a public PowerBI dashboard
    * Will be publishing an RFC with our proposal, please provide comments
    * Also thinking about giving module/extension authors the ability to easily implement their own telemetry
* Blog moved to https://devblogs.microsoft.com/powershell
    * Redirects are in place from the old MSDN blog
    * Only thing not migrated were comments
* Conferences coming up
    * MVP Summit
    * PowerShell + DevOps Global Summit
    * PSConfEU
    * PSConfAsia
* We're using the `6.3-consider` milestone to place work that we're considering for the next release
    * No committments yet!
    * If your favorite work isn't marked, make sure to comment and @mention @SteveL-MSFT