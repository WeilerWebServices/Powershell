<Type Name="EnableWSManCredSSPCommand" FullName="Microsoft.WSMan.Management.EnableWSManCredSSPCommand">
  <TypeSignature Language="C#" Value="public class EnableWSManCredSSPCommand : Microsoft.WSMan.Management.WSManCredSSPCommandBase, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EnableWSManCredSSPCommand extends Microsoft.WSMan.Management.WSManCredSSPCommandBase implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.WSMan.Management.EnableWSManCredSSPCommand" />
  <TypeSignature Language="VB.NET" Value="Public Class EnableWSManCredSSPCommand&#xA;Inherits WSManCredSSPCommandBase&#xA;Implements IDisposable" />
  <TypeSignature Language="F#" Value="type EnableWSManCredSSPCommand = class&#xA;    inherit WSManCredSSPCommandBase&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.WSMan.Management</AssemblyName>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.WSMan.Management.WSManCredSSPCommandBase</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Management.Automation.Cmdlet("Enable", "WSManCredSSP", HelpUri="https://go.microsoft.com/fwlink/?LinkId=141442")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
             Enables CredSSP authentication on the client. CredSSP authentication enables
             an application to delegate the user's credentials from the client to the
             server, hence allowing the user to perform management operations that access
             a second hop.
             This cmdlet performs the following:
            
             On the client:
             1. Enables WSMan local configuration on client to enable CredSSP
             2. Sets CredSSP policy AllowFreshCredentials to wsman/Delegate. This policy
             allows delegating explicit credentials to a server when server
             authentication is achieved via a trusted X509 certificate or Kerberos
             </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EnableWSManCredSSPCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.WSMan.Management.EnableWSManCredSSPCommand.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.WSMan.Management</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginProcessing">
      <MemberSignature Language="C#" Value="protected override void BeginProcessing ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void BeginProcessing() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.WSMan.Management.EnableWSManCredSSPCommand.BeginProcessing" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub BeginProcessing ()" />
      <MemberSignature Language="F#" Value="override this.BeginProcessing : unit -&gt; unit" Usage="enableWSManCredSSPCommand.BeginProcessing " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.WSMan.Management</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            BeginProcessing method.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DelegateComputer">
      <MemberSignature Language="C#" Value="public string[] DelegateComputer { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] DelegateComputer" />
      <MemberSignature Language="DocId" Value="P:Microsoft.WSMan.Management.EnableWSManCredSSPCommand.DelegateComputer" />
      <MemberSignature Language="VB.NET" Value="Public Property DelegateComputer As String()" />
      <MemberSignature Language="F#" Value="member this.DelegateComputer : string[] with get, set" Usage="Microsoft.WSMan.Management.EnableWSManCredSSPCommand.DelegateComputer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.WSMan.Management</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Management.Automation.Parameter(Position=1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Management.Automation.ValidateNotNullOrEmpty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            delegate parameter
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.WSMan.Management.EnableWSManCredSSPCommand.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="enableWSManCredSSPCommand.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.WSMan.Management</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            public dispose method
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose (Microsoft.WSMan.Management.IWSManSession sessionObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Dispose(class Microsoft.WSMan.Management.IWSManSession sessionObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.WSMan.Management.EnableWSManCredSSPCommand.Dispose(Microsoft.WSMan.Management.IWSManSession)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose (sessionObject As IWSManSession)" />
      <MemberSignature Language="F#" Value="member this.Dispose : Microsoft.WSMan.Management.IWSManSession -&gt; unit" Usage="enableWSManCredSSPCommand.Dispose sessionObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.WSMan.Management</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sessionObject" Type="Microsoft.WSMan.Management.IWSManSession" />
      </Parameters>
      <Docs>
        <param name="sessionObject">To be added.</param>
        <summary>
            public dispose method
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Force">
      <MemberSignature Language="C#" Value="public System.Management.Automation.SwitchParameter Force { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Management.Automation.SwitchParameter Force" />
      <MemberSignature Language="DocId" Value="P:Microsoft.WSMan.Management.EnableWSManCredSSPCommand.Force" />
      <MemberSignature Language="VB.NET" Value="Public Property Force As SwitchParameter" />
      <MemberSignature Language="F#" Value="member this.Force : System.Management.Automation.SwitchParameter with get, set" Usage="Microsoft.WSMan.Management.EnableWSManCredSSPCommand.Force" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.WSMan.Management</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Management.Automation.Parameter</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Management.Automation.SwitchParameter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Property that sets force parameter.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>