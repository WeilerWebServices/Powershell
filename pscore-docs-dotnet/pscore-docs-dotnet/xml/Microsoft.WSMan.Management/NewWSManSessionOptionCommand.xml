<Type Name="NewWSManSessionOptionCommand" FullName="Microsoft.WSMan.Management.NewWSManSessionOptionCommand">
  <TypeSignature Language="C#" Value="public class NewWSManSessionOptionCommand : System.Management.Automation.PSCmdlet" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit NewWSManSessionOptionCommand extends System.Management.Automation.PSCmdlet" />
  <TypeSignature Language="DocId" Value="T:Microsoft.WSMan.Management.NewWSManSessionOptionCommand" />
  <TypeSignature Language="VB.NET" Value="Public Class NewWSManSessionOptionCommand&#xA;Inherits PSCmdlet" />
  <TypeSignature Language="F#" Value="type NewWSManSessionOptionCommand = class&#xA;    inherit PSCmdlet" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.WSMan.Management</AssemblyName>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Management.Automation.PSCmdlet</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Management.Automation.Cmdlet("New", "WSManSessionOption", HelpUri="https://go.microsoft.com/fwlink/?LinkId=141449")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            Creates a WSMan Session option hashtable which can be passed into WSMan
            cmdlets:
            Get-WSManInstance
            Set-WSManInstance
            Invoke-WSManAction
            Connect-WSMan
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NewWSManSessionOptionCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.WSMan.Management.NewWSManSessionOptionCommand.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.WSMan.Management</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginProcessing">
      <MemberSignature Language="C#" Value="protected override void BeginProcessing ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void BeginProcessing() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.WSMan.Management.NewWSManSessionOptionCommand.BeginProcessing" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub BeginProcessing ()" />
      <MemberSignature Language="F#" Value="override this.BeginProcessing : unit -&gt; unit" Usage="newWSManSessionOptionCommand.BeginProcessing " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.WSMan.Management</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            BeginProcessing method.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NoEncryption">
      <MemberSignature Language="C#" Value="public System.Management.Automation.SwitchParameter NoEncryption { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Management.Automation.SwitchParameter NoEncryption" />
      <MemberSignature Language="DocId" Value="P:Microsoft.WSMan.Management.NewWSManSessionOptionCommand.NoEncryption" />
      <MemberSignature Language="VB.NET" Value="Public Property NoEncryption As SwitchParameter" />
      <MemberSignature Language="F#" Value="member this.NoEncryption : System.Management.Automation.SwitchParameter with get, set" Usage="Microsoft.WSMan.Management.NewWSManSessionOptionCommand.NoEncryption" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.WSMan.Management</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Management.Automation.Parameter</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Management.Automation.SwitchParameter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The following is the definition of the input parameter "UnEncrypted".
            Specifies that no encryption will be used when doing remote operations over
            http. Unencrypted traffic is not allowed by default and must be enabled in
            the local configuration
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OperationTimeout">
      <MemberSignature Language="C#" Value="public int OperationTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 OperationTimeout" />
      <MemberSignature Language="DocId" Value="P:Microsoft.WSMan.Management.NewWSManSessionOptionCommand.OperationTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property OperationTimeout As Integer" />
      <MemberSignature Language="F#" Value="member this.OperationTimeout : int with get, set" Usage="Microsoft.WSMan.Management.NewWSManSessionOptionCommand.OperationTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.WSMan.Management</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Management.Automation.Alias(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Management.Automation.Parameter</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Management.Automation.ValidateRange(Mono.Cecil.CustomAttributeArgument, Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The following is the definition of the input parameter "Timeout".
            Defines the timeout in ms for the wsman operation
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProxyAccessType">
      <MemberSignature Language="C#" Value="public Microsoft.WSMan.Management.ProxyAccessType ProxyAccessType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.WSMan.Management.ProxyAccessType ProxyAccessType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.WSMan.Management.NewWSManSessionOptionCommand.ProxyAccessType" />
      <MemberSignature Language="VB.NET" Value="Public Property ProxyAccessType As ProxyAccessType" />
      <MemberSignature Language="F#" Value="member this.ProxyAccessType : Microsoft.WSMan.Management.ProxyAccessType with get, set" Usage="Microsoft.WSMan.Management.NewWSManSessionOptionCommand.ProxyAccessType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.WSMan.Management</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Management.Automation.Parameter</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Management.Automation.ValidateNotNullOrEmpty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.WSMan.Management.ProxyAccessType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary />
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProxyAuthentication">
      <MemberSignature Language="C#" Value="public Microsoft.WSMan.Management.ProxyAuthentication ProxyAuthentication { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.WSMan.Management.ProxyAuthentication ProxyAuthentication" />
      <MemberSignature Language="DocId" Value="P:Microsoft.WSMan.Management.NewWSManSessionOptionCommand.ProxyAuthentication" />
      <MemberSignature Language="VB.NET" Value="Public Property ProxyAuthentication As ProxyAuthentication" />
      <MemberSignature Language="F#" Value="member this.ProxyAuthentication : Microsoft.WSMan.Management.ProxyAuthentication with get, set" Usage="Microsoft.WSMan.Management.NewWSManSessionOptionCommand.ProxyAuthentication" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.WSMan.Management</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Management.Automation.Parameter</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Management.Automation.ValidateNotNullOrEmpty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.WSMan.Management.ProxyAuthentication</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The following is the definition of the input parameter "ProxyAuthentication".
            This parameter takes a set of authentication methods the user can select
            from.  The available options should be as follows:
            - Negotiate: Use the default authentication (ad defined by the underlying
            protocol) for establishing a remote connection.
            - Basic:  Use basic authentication for establishing a remote connection
            - Digest: Use Digest authentication for establishing a remote connection
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProxyCredential">
      <MemberSignature Language="C#" Value="public System.Management.Automation.PSCredential ProxyCredential { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Management.Automation.PSCredential ProxyCredential" />
      <MemberSignature Language="DocId" Value="P:Microsoft.WSMan.Management.NewWSManSessionOptionCommand.ProxyCredential" />
      <MemberSignature Language="VB.NET" Value="Public Property ProxyCredential As PSCredential" />
      <MemberSignature Language="F#" Value="member this.ProxyCredential : System.Management.Automation.PSCredential with get, set" Usage="Microsoft.WSMan.Management.NewWSManSessionOptionCommand.ProxyCredential" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.WSMan.Management</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Management.Automation.Credential</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Management.Automation.Parameter</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Management.Automation.ValidateNotNullOrEmpty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Management.Automation.PSCredential</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The following is the definition of the input parameter "ProxyCredential".
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SkipCACheck">
      <MemberSignature Language="C#" Value="public System.Management.Automation.SwitchParameter SkipCACheck { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Management.Automation.SwitchParameter SkipCACheck" />
      <MemberSignature Language="DocId" Value="P:Microsoft.WSMan.Management.NewWSManSessionOptionCommand.SkipCACheck" />
      <MemberSignature Language="VB.NET" Value="Public Property SkipCACheck As SwitchParameter" />
      <MemberSignature Language="F#" Value="member this.SkipCACheck : System.Management.Automation.SwitchParameter with get, set" Usage="Microsoft.WSMan.Management.NewWSManSessionOptionCommand.SkipCACheck" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.WSMan.Management</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Management.Automation.Parameter</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Management.Automation.SwitchParameter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The following is the definition of the input parameter "SkipCACheck".
            When connecting over HTTPS, the client does not validate that the server
            certificate is signed by a trusted certificate authority (CA). Use only when
            the remote computer is trusted by other means, for example, if the remote
            computer is part of a network that is physically secure and isolated or the
            remote computer is listed as a trusted host in WinRM configuration
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SkipCNCheck">
      <MemberSignature Language="C#" Value="public System.Management.Automation.SwitchParameter SkipCNCheck { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Management.Automation.SwitchParameter SkipCNCheck" />
      <MemberSignature Language="DocId" Value="P:Microsoft.WSMan.Management.NewWSManSessionOptionCommand.SkipCNCheck" />
      <MemberSignature Language="VB.NET" Value="Public Property SkipCNCheck As SwitchParameter" />
      <MemberSignature Language="F#" Value="member this.SkipCNCheck : System.Management.Automation.SwitchParameter with get, set" Usage="Microsoft.WSMan.Management.NewWSManSessionOptionCommand.SkipCNCheck" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.WSMan.Management</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Management.Automation.Parameter</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Management.Automation.SwitchParameter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The following is the definition of the input parameter "SkipCNCheck".
            Indicates that certificate common name (CN) of the server need not match the
            hostname of the server. Used only in remote operations using https. This
            option should only be used for trusted machines
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SkipRevocationCheck">
      <MemberSignature Language="C#" Value="public System.Management.Automation.SwitchParameter SkipRevocationCheck { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Management.Automation.SwitchParameter SkipRevocationCheck" />
      <MemberSignature Language="DocId" Value="P:Microsoft.WSMan.Management.NewWSManSessionOptionCommand.SkipRevocationCheck" />
      <MemberSignature Language="VB.NET" Value="Public Property SkipRevocationCheck As SwitchParameter" />
      <MemberSignature Language="F#" Value="member this.SkipRevocationCheck : System.Management.Automation.SwitchParameter with get, set" Usage="Microsoft.WSMan.Management.NewWSManSessionOptionCommand.SkipRevocationCheck" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.WSMan.Management</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Management.Automation.Parameter</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Management.Automation.SwitchParameter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The following is the definition of the input parameter "SkipRevocation".
            Indicates that certificate common name (CN) of the server need not match the
            hostname of the server. Used only in remote operations using https. This
            option should only be used for trusted machines
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SPNPort">
      <MemberSignature Language="C#" Value="public int SPNPort { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SPNPort" />
      <MemberSignature Language="DocId" Value="P:Microsoft.WSMan.Management.NewWSManSessionOptionCommand.SPNPort" />
      <MemberSignature Language="VB.NET" Value="Public Property SPNPort As Integer" />
      <MemberSignature Language="F#" Value="member this.SPNPort : int with get, set" Usage="Microsoft.WSMan.Management.NewWSManSessionOptionCommand.SPNPort" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.WSMan.Management</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Management.Automation.Parameter</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Management.Automation.ValidateRange(Mono.Cecil.CustomAttributeArgument, Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The following is the definition of the input parameter "SPNPort".
            Appends port number to the connection Service Principal Name SPN of the
            remote server.
            SPN is used when authentication mechanism is Kerberos or Negotiate
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UseUTF16">
      <MemberSignature Language="C#" Value="public System.Management.Automation.SwitchParameter UseUTF16 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Management.Automation.SwitchParameter UseUTF16" />
      <MemberSignature Language="DocId" Value="P:Microsoft.WSMan.Management.NewWSManSessionOptionCommand.UseUTF16" />
      <MemberSignature Language="VB.NET" Value="Public Property UseUTF16 As SwitchParameter" />
      <MemberSignature Language="F#" Value="member this.UseUTF16 : System.Management.Automation.SwitchParameter with get, set" Usage="Microsoft.WSMan.Management.NewWSManSessionOptionCommand.UseUTF16" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.WSMan.Management</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Management.Automation.Parameter</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Management.Automation.SwitchParameter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The following is the definition of the input parameter "UTF16".
            Indicates the request is encoded in UTF16 format rather than UTF8 format;
            UTF8 is the default.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>