<Type Name="IWSManEx" FullName="Microsoft.WSMan.Management.IWSManEx">
  <TypeSignature Language="C#" Value="public interface IWSManEx" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IWSManEx" />
  <TypeSignature Language="DocId" Value="T:Microsoft.WSMan.Management.IWSManEx" />
  <TypeSignature Language="VB.NET" Value="Public Interface IWSManEx" />
  <TypeSignature Language="F#" Value="type IWSManEx = interface" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.WSMan.Management</AssemblyName>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("2D53BDAA-798E-49E6-A1AA-74D01256F411")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4304)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <para>
        <c>IWSManEx</c> interface.</para>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="CommandLine">
      <MemberSignature Language="C#" Value="public string CommandLine { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CommandLine" />
      <MemberSignature Language="DocId" Value="P:Microsoft.WSMan.Management.IWSManEx.CommandLine" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CommandLine As String" />
      <MemberSignature Language="F#" Value="member this.CommandLine : string" Usage="Microsoft.WSMan.Management.IWSManEx.CommandLine" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.WSMan.Management</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(3)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary />
        <value />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateConnectionOptions">
      <MemberSignature Language="C#" Value="public object CreateConnectionOptions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object CreateConnectionOptions() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.WSMan.Management.IWSManEx.CreateConnectionOptions" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateConnectionOptions () As Object" />
      <MemberSignature Language="F#" Value="abstract member CreateConnectionOptions : unit -&gt; obj" Usage="iWSManEx.CreateConnectionOptions " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.WSMan.Management</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <para>
            <c>CreateConnectionOptions</c> method of <c>IWSManEx</c> interface.</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para>An original IDL definition of <c>CreateConnectionOptions</c> method was the following:  <c>HRESULT CreateConnectionOptions ([out, retval] IDispatch** ReturnValue)</c>;</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateResourceLocator">
      <MemberSignature Language="C#" Value="public object CreateResourceLocator (string strResourceLocator);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object CreateResourceLocator(string strResourceLocator) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.WSMan.Management.IWSManEx.CreateResourceLocator(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateResourceLocator (strResourceLocator As String) As Object" />
      <MemberSignature Language="F#" Value="abstract member CreateResourceLocator : string -&gt; obj" Usage="iWSManEx.CreateResourceLocator strResourceLocator" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.WSMan.Management</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(5)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="strResourceLocator" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="strResourceLocator">To be added.</param>
        <summary>
          <para>
            <c>CreateResourceLocator</c> method of <c>IWSManEx</c> interface.</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para>An original IDL definition of <c>CreateResourceLocator</c> method was the following:  <c>HRESULT CreateResourceLocator ([optional, defaultvalue("")] BSTR strResourceLocator, [out, retval] IDispatch** ReturnValue)</c>;</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateSession">
      <MemberSignature Language="C#" Value="public object CreateSession (string connection, int flags, object connectionOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object CreateSession(string connection, int32 flags, object connectionOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.WSMan.Management.IWSManEx.CreateSession(System.String,System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateSession (connection As String, flags As Integer, connectionOptions As Object) As Object" />
      <MemberSignature Language="F#" Value="abstract member CreateSession : string * int * obj -&gt; obj" Usage="iWSManEx.CreateSession (connection, flags, connectionOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.WSMan.Management</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="System.String" />
        <Parameter Name="flags" Type="System.Int32" />
        <Parameter Name="connectionOptions" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="connection">To be added.</param>
        <param name="flags">To be added.</param>
        <param name="connectionOptions">To be added.</param>
        <summary>
          <para>
            <c>CreateSession</c> method of <c>IWSManEx</c> interface.</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para>An original IDL definition of <c>CreateSession</c> method was the following:  <c>HRESULT CreateSession ([optional, defaultvalue("")] BSTR connection, [optional, defaultvalue(0)] long flags, [optional] IDispatch* connectionOptions, [out, retval] IDispatch** ReturnValue)</c>;</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnumerationFlagAssociatedInstance">
      <MemberSignature Language="C#" Value="public int EnumerationFlagAssociatedInstance ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 EnumerationFlagAssociatedInstance() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.WSMan.Management.IWSManEx.EnumerationFlagAssociatedInstance" />
      <MemberSignature Language="VB.NET" Value="Public Function EnumerationFlagAssociatedInstance () As Integer" />
      <MemberSignature Language="F#" Value="abstract member EnumerationFlagAssociatedInstance : unit -&gt; int" Usage="iWSManEx.EnumerationFlagAssociatedInstance " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.WSMan.Management</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(29)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <para>
            <c>CommandLine</c> property of <c>IWSManEx</c> interface.</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para>An original IDL definition of <c>CommandLine</c> property was the following:  <c>BSTR CommandLine</c>;</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnumerationFlagAssociationInstance">
      <MemberSignature Language="C#" Value="public int EnumerationFlagAssociationInstance ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 EnumerationFlagAssociationInstance() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.WSMan.Management.IWSManEx.EnumerationFlagAssociationInstance" />
      <MemberSignature Language="VB.NET" Value="Public Function EnumerationFlagAssociationInstance () As Integer" />
      <MemberSignature Language="F#" Value="abstract member EnumerationFlagAssociationInstance : unit -&gt; int" Usage="iWSManEx.EnumerationFlagAssociationInstance " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.WSMan.Management</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(28)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <para>
            <c>CommandLine</c> property of <c>IWSManEx</c> interface.</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para>An original IDL definition of <c>CommandLine</c> property was the following:  <c>BSTR CommandLine</c>;</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnumerationFlagHierarchyDeep">
      <MemberSignature Language="C#" Value="public int EnumerationFlagHierarchyDeep ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 EnumerationFlagHierarchyDeep() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.WSMan.Management.IWSManEx.EnumerationFlagHierarchyDeep" />
      <MemberSignature Language="VB.NET" Value="Public Function EnumerationFlagHierarchyDeep () As Integer" />
      <MemberSignature Language="F#" Value="abstract member EnumerationFlagHierarchyDeep : unit -&gt; int" Usage="iWSManEx.EnumerationFlagHierarchyDeep " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.WSMan.Management</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(21)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <para>
            <c>EnumerationFlagHierarchyDeep</c> method of <c>IWSManEx</c> interface.</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para>An original IDL definition of <c>EnumerationFlagHierarchyDeep</c> method was the following:  <c>HRESULT EnumerationFlagHierarchyDeep ([out, retval] long* ReturnValue)</c>;</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnumerationFlagHierarchyDeepBasePropsOnly">
      <MemberSignature Language="C#" Value="public int EnumerationFlagHierarchyDeepBasePropsOnly ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 EnumerationFlagHierarchyDeepBasePropsOnly() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.WSMan.Management.IWSManEx.EnumerationFlagHierarchyDeepBasePropsOnly" />
      <MemberSignature Language="VB.NET" Value="Public Function EnumerationFlagHierarchyDeepBasePropsOnly () As Integer" />
      <MemberSignature Language="F#" Value="abstract member EnumerationFlagHierarchyDeepBasePropsOnly : unit -&gt; int" Usage="iWSManEx.EnumerationFlagHierarchyDeepBasePropsOnly " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.WSMan.Management</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(23)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <para>
            <c>EnumerationFlagHierarchyDeepBasePropsOnly</c> method of <c>IWSManEx</c> interface.</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para>An original IDL definition of <c>EnumerationFlagHierarchyDeepBasePropsOnly</c> method was the following:  <c>HRESULT EnumerationFlagHierarchyDeepBasePropsOnly ([out, retval] long* ReturnValue)</c>;</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnumerationFlagHierarchyShallow">
      <MemberSignature Language="C#" Value="public int EnumerationFlagHierarchyShallow ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 EnumerationFlagHierarchyShallow() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.WSMan.Management.IWSManEx.EnumerationFlagHierarchyShallow" />
      <MemberSignature Language="VB.NET" Value="Public Function EnumerationFlagHierarchyShallow () As Integer" />
      <MemberSignature Language="F#" Value="abstract member EnumerationFlagHierarchyShallow : unit -&gt; int" Usage="iWSManEx.EnumerationFlagHierarchyShallow " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.WSMan.Management</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(22)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <para>
            <c>EnumerationFlagHierarchyShallow</c> method of <c>IWSManEx</c> interface.</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para>An original IDL definition of <c>EnumerationFlagHierarchyShallow</c> method was the following:  <c>HRESULT EnumerationFlagHierarchyShallow ([out, retval] long* ReturnValue)</c>;</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnumerationFlagNonXmlText">
      <MemberSignature Language="C#" Value="public int EnumerationFlagNonXmlText ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 EnumerationFlagNonXmlText() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.WSMan.Management.IWSManEx.EnumerationFlagNonXmlText" />
      <MemberSignature Language="VB.NET" Value="Public Function EnumerationFlagNonXmlText () As Integer" />
      <MemberSignature Language="F#" Value="abstract member EnumerationFlagNonXmlText : unit -&gt; int" Usage="iWSManEx.EnumerationFlagNonXmlText " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.WSMan.Management</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(17)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <para>
            <c>EnumerationFlagNonXmlText</c> method of <c>IWSManEx</c> interface.</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para>An original IDL definition of <c>EnumerationFlagNonXmlText</c> method was the following:  <c>HRESULT EnumerationFlagNonXmlText ([out, retval] long* ReturnValue)</c>;</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnumerationFlagReturnEPR">
      <MemberSignature Language="C#" Value="public int EnumerationFlagReturnEPR ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 EnumerationFlagReturnEPR() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.WSMan.Management.IWSManEx.EnumerationFlagReturnEPR" />
      <MemberSignature Language="VB.NET" Value="Public Function EnumerationFlagReturnEPR () As Integer" />
      <MemberSignature Language="F#" Value="abstract member EnumerationFlagReturnEPR : unit -&gt; int" Usage="iWSManEx.EnumerationFlagReturnEPR " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.WSMan.Management</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(18)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <para>
            <c>EnumerationFlagReturnEPR</c> method of <c>IWSManEx</c> interface.</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para>An original IDL definition of <c>EnumerationFlagReturnEPR</c> method was the following:  <c>HRESULT EnumerationFlagReturnEPR ([out, retval] long* ReturnValue)</c>;</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnumerationFlagReturnObject">
      <MemberSignature Language="C#" Value="public int EnumerationFlagReturnObject ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 EnumerationFlagReturnObject() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.WSMan.Management.IWSManEx.EnumerationFlagReturnObject" />
      <MemberSignature Language="VB.NET" Value="Public Function EnumerationFlagReturnObject () As Integer" />
      <MemberSignature Language="F#" Value="abstract member EnumerationFlagReturnObject : unit -&gt; int" Usage="iWSManEx.EnumerationFlagReturnObject " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.WSMan.Management</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(24)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <para>
            <c>EnumerationFlagReturnObject</c> method of <c>IWSManEx</c> interface.</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para>An original IDL definition of <c>EnumerationFlagReturnObject</c> method was the following:  <c>HRESULT EnumerationFlagReturnObject ([out, retval] long* ReturnValue)</c>;</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnumerationFlagReturnObjectAndEPR">
      <MemberSignature Language="C#" Value="public int EnumerationFlagReturnObjectAndEPR ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 EnumerationFlagReturnObjectAndEPR() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.WSMan.Management.IWSManEx.EnumerationFlagReturnObjectAndEPR" />
      <MemberSignature Language="VB.NET" Value="Public Function EnumerationFlagReturnObjectAndEPR () As Integer" />
      <MemberSignature Language="F#" Value="abstract member EnumerationFlagReturnObjectAndEPR : unit -&gt; int" Usage="iWSManEx.EnumerationFlagReturnObjectAndEPR " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.WSMan.Management</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(19)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <para>
            <c>EnumerationFlagReturnObjectAndEPR</c> method of <c>IWSManEx</c> interface.</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para>An original IDL definition of <c>EnumerationFlagReturnObjectAndEPR</c> method was the following:  <c>HRESULT EnumerationFlagReturnObjectAndEPR ([out, retval] long* ReturnValue)</c>;</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Error">
      <MemberSignature Language="C#" Value="public string Error { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Error" />
      <MemberSignature Language="DocId" Value="P:Microsoft.WSMan.Management.IWSManEx.Error" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Error As String" />
      <MemberSignature Language="F#" Value="member this.Error : string" Usage="Microsoft.WSMan.Management.IWSManEx.Error" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.WSMan.Management</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(4)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>
            <c>Error</c> property of <c>IWSManEx</c> interface.</para>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>An original IDL definition of <c>Error</c> property was the following:  <c>BSTR Error</c>;</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetErrorMessage">
      <MemberSignature Language="C#" Value="public string GetErrorMessage (uint errorNumber);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetErrorMessage(unsigned int32 errorNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.WSMan.Management.IWSManEx.GetErrorMessage(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetErrorMessage (errorNumber As UInteger) As String" />
      <MemberSignature Language="F#" Value="abstract member GetErrorMessage : uint32 -&gt; string" Usage="iWSManEx.GetErrorMessage errorNumber" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.WSMan.Management</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(20)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="errorNumber" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="errorNumber">To be added.</param>
        <summary>
          <para>
            <c>GetErrorMessage</c> method of <c>IWSManEx</c> interface.</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para>An original IDL definition of <c>GetErrorMessage</c> method was the following:  <c>HRESULT GetErrorMessage (unsigned long errorNumber, [out, retval] BSTR* ReturnValue)</c>;</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIDsOfNames">
      <MemberSignature Language="C#" Value="public object GetIDsOfNames ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetIDsOfNames() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.WSMan.Management.IWSManEx.GetIDsOfNames" />
      <MemberSignature Language="VB.NET" Value="Public Function GetIDsOfNames () As Object" />
      <MemberSignature Language="F#" Value="abstract member GetIDsOfNames : unit -&gt; obj" Usage="iWSManEx.GetIDsOfNames " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.WSMan.Management</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTypeInfo">
      <MemberSignature Language="C#" Value="public object GetTypeInfo ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetTypeInfo() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.WSMan.Management.IWSManEx.GetTypeInfo" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTypeInfo () As Object" />
      <MemberSignature Language="F#" Value="abstract member GetTypeInfo : unit -&gt; obj" Usage="iWSManEx.GetTypeInfo " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.WSMan.Management</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTypeInfoCount">
      <MemberSignature Language="C#" Value="public object GetTypeInfoCount ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetTypeInfoCount() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.WSMan.Management.IWSManEx.GetTypeInfoCount" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTypeInfoCount () As Object" />
      <MemberSignature Language="F#" Value="abstract member GetTypeInfoCount : unit -&gt; obj" Usage="iWSManEx.GetTypeInfoCount " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.WSMan.Management</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public object Invoke ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Invoke() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.WSMan.Management.IWSManEx.Invoke" />
      <MemberSignature Language="VB.NET" Value="Public Function Invoke () As Object" />
      <MemberSignature Language="F#" Value="abstract member Invoke : unit -&gt; obj" Usage="iWSManEx.Invoke " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.WSMan.Management</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SessionFlagCredUsernamePassword">
      <MemberSignature Language="C#" Value="public int SessionFlagCredUsernamePassword ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 SessionFlagCredUsernamePassword() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.WSMan.Management.IWSManEx.SessionFlagCredUsernamePassword" />
      <MemberSignature Language="VB.NET" Value="Public Function SessionFlagCredUsernamePassword () As Integer" />
      <MemberSignature Language="F#" Value="abstract member SessionFlagCredUsernamePassword : unit -&gt; int" Usage="iWSManEx.SessionFlagCredUsernamePassword " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.WSMan.Management</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(7)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <para>
            <c>SessionFlagCredUsernamePassword</c> method of <c>IWSManEx</c> interface.</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para>An original IDL definition of <c>SessionFlagCredUsernamePassword</c> method was the following:  <c>HRESULT SessionFlagCredUsernamePassword ([out, retval] long* ReturnValue)</c>;</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SessionFlagEnableSPNServerPort">
      <MemberSignature Language="C#" Value="public int SessionFlagEnableSPNServerPort ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 SessionFlagEnableSPNServerPort() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.WSMan.Management.IWSManEx.SessionFlagEnableSPNServerPort" />
      <MemberSignature Language="VB.NET" Value="Public Function SessionFlagEnableSPNServerPort () As Integer" />
      <MemberSignature Language="F#" Value="abstract member SessionFlagEnableSPNServerPort : unit -&gt; int" Usage="iWSManEx.SessionFlagEnableSPNServerPort " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.WSMan.Management</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(15)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <para>
            <c>SessionFlagEnableSPNServerPort</c> method of <c>IWSManEx</c> interface.</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para>An original IDL definition of <c>SessionFlagEnableSPNServerPort</c> method was the following:  <c>HRESULT SessionFlagEnableSPNServerPort ([out, retval] long* ReturnValue)</c>;</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SessionFlagNoEncryption">
      <MemberSignature Language="C#" Value="public int SessionFlagNoEncryption ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 SessionFlagNoEncryption() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.WSMan.Management.IWSManEx.SessionFlagNoEncryption" />
      <MemberSignature Language="VB.NET" Value="Public Function SessionFlagNoEncryption () As Integer" />
      <MemberSignature Language="F#" Value="abstract member SessionFlagNoEncryption : unit -&gt; int" Usage="iWSManEx.SessionFlagNoEncryption " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.WSMan.Management</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(14)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <para>
            <c>SessionFlagNoEncryption</c> method of <c>IWSManEx</c> interface.</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para>An original IDL definition of <c>SessionFlagNoEncryption</c> method was the following:  <c>HRESULT SessionFlagNoEncryption ([out, retval] long* ReturnValue)</c>;</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SessionFlagSkipCACheck">
      <MemberSignature Language="C#" Value="public int SessionFlagSkipCACheck ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 SessionFlagSkipCACheck() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.WSMan.Management.IWSManEx.SessionFlagSkipCACheck" />
      <MemberSignature Language="VB.NET" Value="Public Function SessionFlagSkipCACheck () As Integer" />
      <MemberSignature Language="F#" Value="abstract member SessionFlagSkipCACheck : unit -&gt; int" Usage="iWSManEx.SessionFlagSkipCACheck " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.WSMan.Management</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(8)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <para>
            <c>SessionFlagSkipCACheck</c> method of <c>IWSManEx</c> interface.</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para>An original IDL definition of <c>SessionFlagSkipCACheck</c> method was the following:  <c>HRESULT SessionFlagSkipCACheck ([out, retval] long* ReturnValue)</c>;</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SessionFlagSkipCNCheck">
      <MemberSignature Language="C#" Value="public int SessionFlagSkipCNCheck ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 SessionFlagSkipCNCheck() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.WSMan.Management.IWSManEx.SessionFlagSkipCNCheck" />
      <MemberSignature Language="VB.NET" Value="Public Function SessionFlagSkipCNCheck () As Integer" />
      <MemberSignature Language="F#" Value="abstract member SessionFlagSkipCNCheck : unit -&gt; int" Usage="iWSManEx.SessionFlagSkipCNCheck " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.WSMan.Management</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(9)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <para>
            <c>SessionFlagSkipCNCheck</c> method of <c>IWSManEx</c> interface.</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para>An original IDL definition of <c>SessionFlagSkipCNCheck</c> method was the following:  <c>HRESULT SessionFlagSkipCNCheck ([out, retval] long* ReturnValue)</c>;</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SessionFlagUseBasic">
      <MemberSignature Language="C#" Value="public int SessionFlagUseBasic ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 SessionFlagUseBasic() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.WSMan.Management.IWSManEx.SessionFlagUseBasic" />
      <MemberSignature Language="VB.NET" Value="Public Function SessionFlagUseBasic () As Integer" />
      <MemberSignature Language="F#" Value="abstract member SessionFlagUseBasic : unit -&gt; int" Usage="iWSManEx.SessionFlagUseBasic " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.WSMan.Management</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(12)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <para>
            <c>SessionFlagUseBasic</c> method of <c>IWSManEx</c> interface.</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para>An original IDL definition of <c>SessionFlagUseBasic</c> method was the following:  <c>HRESULT SessionFlagUseBasic ([out, retval] long* ReturnValue)</c>;</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SessionFlagUseDigest">
      <MemberSignature Language="C#" Value="public int SessionFlagUseDigest ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 SessionFlagUseDigest() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.WSMan.Management.IWSManEx.SessionFlagUseDigest" />
      <MemberSignature Language="VB.NET" Value="Public Function SessionFlagUseDigest () As Integer" />
      <MemberSignature Language="F#" Value="abstract member SessionFlagUseDigest : unit -&gt; int" Usage="iWSManEx.SessionFlagUseDigest " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.WSMan.Management</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(10)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <para>
            <c>SessionFlagUseDigest</c> method of <c>IWSManEx</c> interface.</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para>An original IDL definition of <c>SessionFlagUseDigest</c> method was the following:  <c>HRESULT SessionFlagUseDigest ([out, retval] long* ReturnValue)</c>;</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SessionFlagUseKerberos">
      <MemberSignature Language="C#" Value="public int SessionFlagUseKerberos ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 SessionFlagUseKerberos() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.WSMan.Management.IWSManEx.SessionFlagUseKerberos" />
      <MemberSignature Language="VB.NET" Value="Public Function SessionFlagUseKerberos () As Integer" />
      <MemberSignature Language="F#" Value="abstract member SessionFlagUseKerberos : unit -&gt; int" Usage="iWSManEx.SessionFlagUseKerberos " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.WSMan.Management</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(13)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <para>
            <c>SessionFlagUseKerberos</c> method of <c>IWSManEx</c> interface.</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para>An original IDL definition of <c>SessionFlagUseKerberos</c> method was the following:  <c>HRESULT SessionFlagUseKerberos ([out, retval] long* ReturnValue)</c>;</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SessionFlagUseNegotiate">
      <MemberSignature Language="C#" Value="public int SessionFlagUseNegotiate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 SessionFlagUseNegotiate() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.WSMan.Management.IWSManEx.SessionFlagUseNegotiate" />
      <MemberSignature Language="VB.NET" Value="Public Function SessionFlagUseNegotiate () As Integer" />
      <MemberSignature Language="F#" Value="abstract member SessionFlagUseNegotiate : unit -&gt; int" Usage="iWSManEx.SessionFlagUseNegotiate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.WSMan.Management</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(11)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <para>
            <c>SessionFlagUseNegotiate</c> method of <c>IWSManEx</c> interface.</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para>An original IDL definition of <c>SessionFlagUseNegotiate</c> method was the following:  <c>HRESULT SessionFlagUseNegotiate ([out, retval] long* ReturnValue)</c>;</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SessionFlagUseNoAuthentication">
      <MemberSignature Language="C#" Value="public int SessionFlagUseNoAuthentication ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 SessionFlagUseNoAuthentication() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.WSMan.Management.IWSManEx.SessionFlagUseNoAuthentication" />
      <MemberSignature Language="VB.NET" Value="Public Function SessionFlagUseNoAuthentication () As Integer" />
      <MemberSignature Language="F#" Value="abstract member SessionFlagUseNoAuthentication : unit -&gt; int" Usage="iWSManEx.SessionFlagUseNoAuthentication " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.WSMan.Management</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <para>
            <c>SessionFlagUseNoAuthentication</c> method of <c>IWSManEx</c> interface.</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para>An original IDL definition of <c>SessionFlagUseNoAuthentication</c> method was the following:  <c>HRESULT SessionFlagUseNoAuthentication ([out, retval] long* ReturnValue)</c>;</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SessionFlagUTF8">
      <MemberSignature Language="C#" Value="public int SessionFlagUTF8 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 SessionFlagUTF8() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.WSMan.Management.IWSManEx.SessionFlagUTF8" />
      <MemberSignature Language="VB.NET" Value="Public Function SessionFlagUTF8 () As Integer" />
      <MemberSignature Language="F#" Value="abstract member SessionFlagUTF8 : unit -&gt; int" Usage="iWSManEx.SessionFlagUTF8 " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.WSMan.Management</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(6)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <para>
            <c>SessionFlagUTF8</c> method of <c>IWSManEx</c> interface.</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para>An original IDL definition of <c>SessionFlagUTF8</c> method was the following:  <c>HRESULT SessionFlagUTF8 ([out, retval] long* ReturnValue)</c>;</para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>