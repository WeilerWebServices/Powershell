<Type Name="GetWSManCredSSPCommand" FullName="Microsoft.WSMan.Management.GetWSManCredSSPCommand">
  <TypeSignature Language="C#" Value="public class GetWSManCredSSPCommand : System.Management.Automation.PSCmdlet, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit GetWSManCredSSPCommand extends System.Management.Automation.PSCmdlet implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.WSMan.Management.GetWSManCredSSPCommand" />
  <TypeSignature Language="VB.NET" Value="Public Class GetWSManCredSSPCommand&#xA;Inherits PSCmdlet&#xA;Implements IDisposable" />
  <TypeSignature Language="F#" Value="type GetWSManCredSSPCommand = class&#xA;    inherit PSCmdlet&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.WSMan.Management</AssemblyName>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Management.Automation.PSCmdlet</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Management.Automation.Cmdlet("Get", "WSManCredSSP", HelpUri="https://go.microsoft.com/fwlink/?LinkId=141443")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            Gets the CredSSP related configuration on the client. CredSSP authentication
            enables an application to delegate the user's credentials from the client to
            the server, hence allowing the user to perform management operations that
            access a second hop.
            This cmdlet performs the following:
            1. Gets the configuration for WSMan policy on client to enable/disable
            CredSSP
            2. Gets the configuration information for the CredSSP policy
            AllowFreshCredentials . This policy allows delegating explicit credentials
            to a server when server authentication is achieved via a trusted X509
            certificate or Kerberos
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GetWSManCredSSPCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.WSMan.Management.GetWSManCredSSPCommand.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.WSMan.Management</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginProcessing">
      <MemberSignature Language="C#" Value="protected override void BeginProcessing ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void BeginProcessing() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.WSMan.Management.GetWSManCredSSPCommand.BeginProcessing" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub BeginProcessing ()" />
      <MemberSignature Language="F#" Value="override this.BeginProcessing : unit -&gt; unit" Usage="getWSManCredSSPCommand.BeginProcessing " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.WSMan.Management</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Method to begin processing.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.WSMan.Management.GetWSManCredSSPCommand.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="getWSManCredSSPCommand.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.WSMan.Management</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            public dispose method
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose (Microsoft.WSMan.Management.IWSManSession sessionObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Dispose(class Microsoft.WSMan.Management.IWSManSession sessionObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.WSMan.Management.GetWSManCredSSPCommand.Dispose(Microsoft.WSMan.Management.IWSManSession)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose (sessionObject As IWSManSession)" />
      <MemberSignature Language="F#" Value="member this.Dispose : Microsoft.WSMan.Management.IWSManSession -&gt; unit" Usage="getWSManCredSSPCommand.Dispose sessionObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.WSMan.Management</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sessionObject" Type="Microsoft.WSMan.Management.IWSManSession" />
      </Parameters>
      <Docs>
        <param name="sessionObject">To be added.</param>
        <summary>
            public dispose method
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>