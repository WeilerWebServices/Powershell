<Type Name="CodeMethodData" FullName="System.Management.Automation.Runspaces.CodeMethodData">
  <TypeSignature Language="C#" Value="public sealed class CodeMethodData : System.Management.Automation.Runspaces.TypeMemberData" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit CodeMethodData extends System.Management.Automation.Runspaces.TypeMemberData" />
  <TypeSignature Language="DocId" Value="T:System.Management.Automation.Runspaces.CodeMethodData" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class CodeMethodData&#xA;Inherits TypeMemberData" />
  <TypeSignature Language="F#" Value="type CodeMethodData = class&#xA;    inherit TypeMemberData" />
  <AssemblyInfo>
    <AssemblyName>System.Management.Automation</AssemblyName>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Management.Automation.Runspaces.TypeMemberData</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerDisplay("CodeMethod: {Name,nq}")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            CodeMethodData represents a CodeMethodData definition
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CodeMethodData (string name, System.Reflection.MethodInfo methodToCall);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, class System.Reflection.MethodInfo methodToCall) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Automation.Runspaces.CodeMethodData.#ctor(System.String,System.Reflection.MethodInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, methodToCall As MethodInfo)" />
      <MemberSignature Language="F#" Value="new System.Management.Automation.Runspaces.CodeMethodData : string * System.Reflection.MethodInfo -&gt; System.Management.Automation.Runspaces.CodeMethodData" Usage="new System.Management.Automation.Runspaces.CodeMethodData (name, methodToCall)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="methodToCall" Type="System.Reflection.MethodInfo" />
      </Parameters>
      <Docs>
        <param name="name"></param>
        <param name="methodToCall"></param>
        <summary>
            CodeMethodData constructor
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CodeReference">
      <MemberSignature Language="C#" Value="public System.Reflection.MethodInfo CodeReference { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.MethodInfo CodeReference" />
      <MemberSignature Language="DocId" Value="P:System.Management.Automation.Runspaces.CodeMethodData.CodeReference" />
      <MemberSignature Language="VB.NET" Value="Public Property CodeReference As MethodInfo" />
      <MemberSignature Language="F#" Value="member this.CodeReference : System.Reflection.MethodInfo with get, set" Usage="System.Management.Automation.Runspaces.CodeMethodData.CodeReference" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The code reference
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>