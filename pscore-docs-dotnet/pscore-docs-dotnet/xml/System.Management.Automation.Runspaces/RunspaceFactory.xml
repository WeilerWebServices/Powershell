<Type Name="RunspaceFactory" FullName="System.Management.Automation.Runspaces.RunspaceFactory">
  <TypeSignature Language="C#" Value="public static class RunspaceFactory" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed RunspaceFactory extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Management.Automation.Runspaces.RunspaceFactory" />
  <TypeSignature Language="VB.NET" Value="Public Class RunspaceFactory" />
  <TypeSignature Language="F#" Value="type RunspaceFactory = class" />
  <AssemblyInfo>
    <AssemblyName>System.Management.Automation</AssemblyName>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Defines a factory class for creating Runspace objects.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="CreateOutOfProcessRunspace">
      <MemberSignature Language="C#" Value="public static System.Management.Automation.Runspaces.Runspace CreateOutOfProcessRunspace (System.Management.Automation.Runspaces.TypeTable typeTable);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Management.Automation.Runspaces.Runspace CreateOutOfProcessRunspace(class System.Management.Automation.Runspaces.TypeTable typeTable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Automation.Runspaces.RunspaceFactory.CreateOutOfProcessRunspace(System.Management.Automation.Runspaces.TypeTable)" />
      <MemberSignature Language="F#" Value="static member CreateOutOfProcessRunspace : System.Management.Automation.Runspaces.TypeTable -&gt; System.Management.Automation.Runspaces.Runspace" Usage="System.Management.Automation.Runspaces.RunspaceFactory.CreateOutOfProcessRunspace typeTable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Runspaces.Runspace</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeTable" Type="System.Management.Automation.Runspaces.TypeTable" />
      </Parameters>
      <Docs>
        <param name="typeTable"></param>
        <summary />
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateOutOfProcessRunspace">
      <MemberSignature Language="C#" Value="public static System.Management.Automation.Runspaces.Runspace CreateOutOfProcessRunspace (System.Management.Automation.Runspaces.TypeTable typeTable, System.Management.Automation.Runspaces.PowerShellProcessInstance processInstance);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Management.Automation.Runspaces.Runspace CreateOutOfProcessRunspace(class System.Management.Automation.Runspaces.TypeTable typeTable, class System.Management.Automation.Runspaces.PowerShellProcessInstance processInstance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Automation.Runspaces.RunspaceFactory.CreateOutOfProcessRunspace(System.Management.Automation.Runspaces.TypeTable,System.Management.Automation.Runspaces.PowerShellProcessInstance)" />
      <MemberSignature Language="F#" Value="static member CreateOutOfProcessRunspace : System.Management.Automation.Runspaces.TypeTable * System.Management.Automation.Runspaces.PowerShellProcessInstance -&gt; System.Management.Automation.Runspaces.Runspace" Usage="System.Management.Automation.Runspaces.RunspaceFactory.CreateOutOfProcessRunspace (typeTable, processInstance)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Runspaces.Runspace</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeTable" Type="System.Management.Automation.Runspaces.TypeTable" />
        <Parameter Name="processInstance" Type="System.Management.Automation.Runspaces.PowerShellProcessInstance" />
      </Parameters>
      <Docs>
        <param name="typeTable"></param>
        <param name="processInstance"></param>
        <summary />
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateRunspace">
      <MemberSignature Language="C#" Value="public static System.Management.Automation.Runspaces.Runspace CreateRunspace ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Management.Automation.Runspaces.Runspace CreateRunspace() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Automation.Runspaces.RunspaceFactory.CreateRunspace" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateRunspace () As Runspace" />
      <MemberSignature Language="F#" Value="static member CreateRunspace : unit -&gt; System.Management.Automation.Runspaces.Runspace" Usage="System.Management.Automation.Runspaces.RunspaceFactory.CreateRunspace " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Runspaces.Runspace</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Creates a runspace using host of type <see cref="T:Microsoft.PowerShell.DefaultHost" />.
            </summary>
        <returns>
            A runspace object.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateRunspace">
      <MemberSignature Language="C#" Value="public static System.Management.Automation.Runspaces.Runspace CreateRunspace (System.Management.Automation.Host.PSHost host);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Management.Automation.Runspaces.Runspace CreateRunspace(class System.Management.Automation.Host.PSHost host) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Automation.Runspaces.RunspaceFactory.CreateRunspace(System.Management.Automation.Host.PSHost)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateRunspace (host As PSHost) As Runspace" />
      <MemberSignature Language="F#" Value="static member CreateRunspace : System.Management.Automation.Host.PSHost -&gt; System.Management.Automation.Runspaces.Runspace" Usage="System.Management.Automation.Runspaces.RunspaceFactory.CreateRunspace host" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Runspaces.Runspace</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="host" Type="System.Management.Automation.Host.PSHost" />
      </Parameters>
      <Docs>
        <param name="host">
            The explicit PSHost implementation.
            </param>
        <summary>
            Creates a runspace using specified host. This runspace is created using the
            configuration information from EntryAssembly.
            </summary>
        <returns>
            A runspace object
            </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
            Thrown when host is null.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateRunspace">
      <MemberSignature Language="C#" Value="public static System.Management.Automation.Runspaces.Runspace CreateRunspace (System.Management.Automation.Runspaces.InitialSessionState initialSessionState);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Management.Automation.Runspaces.Runspace CreateRunspace(class System.Management.Automation.Runspaces.InitialSessionState initialSessionState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Automation.Runspaces.RunspaceFactory.CreateRunspace(System.Management.Automation.Runspaces.InitialSessionState)" />
      <MemberSignature Language="F#" Value="static member CreateRunspace : System.Management.Automation.Runspaces.InitialSessionState -&gt; System.Management.Automation.Runspaces.Runspace" Usage="System.Management.Automation.Runspaces.RunspaceFactory.CreateRunspace initialSessionState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Runspaces.Runspace</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="initialSessionState" Type="System.Management.Automation.Runspaces.InitialSessionState" />
      </Parameters>
      <Docs>
        <param name="initialSessionState">
            InitialSessionState information for the runspace.
            </param>
        <summary>
            Creates a runspace using <see cref="T:Microsoft.PowerShell.DefaultHost" /></summary>
        <returns>
            A runspace object
            </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
            Thrown when initialSessionState is null
            </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateRunspace">
      <MemberSignature Language="C#" Value="public static System.Management.Automation.Runspaces.Runspace CreateRunspace (System.Management.Automation.Runspaces.RunspaceConnectionInfo connectionInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Management.Automation.Runspaces.Runspace CreateRunspace(class System.Management.Automation.Runspaces.RunspaceConnectionInfo connectionInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Automation.Runspaces.RunspaceFactory.CreateRunspace(System.Management.Automation.Runspaces.RunspaceConnectionInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateRunspace (connectionInfo As RunspaceConnectionInfo) As Runspace" />
      <MemberSignature Language="F#" Value="static member CreateRunspace : System.Management.Automation.Runspaces.RunspaceConnectionInfo -&gt; System.Management.Automation.Runspaces.Runspace" Usage="System.Management.Automation.Runspaces.RunspaceFactory.CreateRunspace connectionInfo" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Runspaces.Runspace</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connectionInfo" Type="System.Management.Automation.Runspaces.RunspaceConnectionInfo" />
      </Parameters>
      <Docs>
        <param name="connectionInfo"></param>
        <summary />
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateRunspace">
      <MemberSignature Language="C#" Value="public static System.Management.Automation.Runspaces.Runspace CreateRunspace (System.Management.Automation.Host.PSHost host, System.Management.Automation.Runspaces.InitialSessionState initialSessionState);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Management.Automation.Runspaces.Runspace CreateRunspace(class System.Management.Automation.Host.PSHost host, class System.Management.Automation.Runspaces.InitialSessionState initialSessionState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Automation.Runspaces.RunspaceFactory.CreateRunspace(System.Management.Automation.Host.PSHost,System.Management.Automation.Runspaces.InitialSessionState)" />
      <MemberSignature Language="F#" Value="static member CreateRunspace : System.Management.Automation.Host.PSHost * System.Management.Automation.Runspaces.InitialSessionState -&gt; System.Management.Automation.Runspaces.Runspace" Usage="System.Management.Automation.Runspaces.RunspaceFactory.CreateRunspace (host, initialSessionState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Runspaces.Runspace</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="host" Type="System.Management.Automation.Host.PSHost" />
        <Parameter Name="initialSessionState" Type="System.Management.Automation.Runspaces.InitialSessionState" />
      </Parameters>
      <Docs>
        <param name="host">
            Host implementation for runspace.
            </param>
        <param name="initialSessionState">
            InitialSessionState information for the runspace.
            </param>
        <summary>
            Creates a runspace using specified PSHost and InitialSessionState
            </summary>
        <returns>
            A runspace object
            </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
            Thrown when initialSessionState is null
            </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateRunspace">
      <MemberSignature Language="C#" Value="public static System.Management.Automation.Runspaces.Runspace CreateRunspace (System.Management.Automation.Host.PSHost host, System.Management.Automation.Runspaces.RunspaceConnectionInfo connectionInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Management.Automation.Runspaces.Runspace CreateRunspace(class System.Management.Automation.Host.PSHost host, class System.Management.Automation.Runspaces.RunspaceConnectionInfo connectionInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Automation.Runspaces.RunspaceFactory.CreateRunspace(System.Management.Automation.Host.PSHost,System.Management.Automation.Runspaces.RunspaceConnectionInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateRunspace (host As PSHost, connectionInfo As RunspaceConnectionInfo) As Runspace" />
      <MemberSignature Language="F#" Value="static member CreateRunspace : System.Management.Automation.Host.PSHost * System.Management.Automation.Runspaces.RunspaceConnectionInfo -&gt; System.Management.Automation.Runspaces.Runspace" Usage="System.Management.Automation.Runspaces.RunspaceFactory.CreateRunspace (host, connectionInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Runspaces.Runspace</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="host" Type="System.Management.Automation.Host.PSHost" />
        <Parameter Name="connectionInfo" Type="System.Management.Automation.Runspaces.RunspaceConnectionInfo" />
      </Parameters>
      <Docs>
        <param name="host"></param>
        <param name="connectionInfo"></param>
        <summary />
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateRunspace">
      <MemberSignature Language="C#" Value="public static System.Management.Automation.Runspaces.Runspace CreateRunspace (System.Management.Automation.Runspaces.RunspaceConnectionInfo connectionInfo, System.Management.Automation.Host.PSHost host, System.Management.Automation.Runspaces.TypeTable typeTable);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Management.Automation.Runspaces.Runspace CreateRunspace(class System.Management.Automation.Runspaces.RunspaceConnectionInfo connectionInfo, class System.Management.Automation.Host.PSHost host, class System.Management.Automation.Runspaces.TypeTable typeTable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Automation.Runspaces.RunspaceFactory.CreateRunspace(System.Management.Automation.Runspaces.RunspaceConnectionInfo,System.Management.Automation.Host.PSHost,System.Management.Automation.Runspaces.TypeTable)" />
      <MemberSignature Language="F#" Value="static member CreateRunspace : System.Management.Automation.Runspaces.RunspaceConnectionInfo * System.Management.Automation.Host.PSHost * System.Management.Automation.Runspaces.TypeTable -&gt; System.Management.Automation.Runspaces.Runspace" Usage="System.Management.Automation.Runspaces.RunspaceFactory.CreateRunspace (connectionInfo, host, typeTable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Runspaces.Runspace</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connectionInfo" Type="System.Management.Automation.Runspaces.RunspaceConnectionInfo" />
        <Parameter Name="host" Type="System.Management.Automation.Host.PSHost" />
        <Parameter Name="typeTable" Type="System.Management.Automation.Runspaces.TypeTable" />
      </Parameters>
      <Docs>
        <param name="connectionInfo"></param>
        <param name="host"></param>
        <param name="typeTable">
             The TypeTable to use while deserializing/serializing remote objects.
             TypeTable has the following information used by serializer:
               1. SerializationMethod
               2. SerializationDepth
               3. SpecificSerializationProperties
             TypeTable has the following information used by deserializer:
               1. TargetTypeForDeserialization
               2. TypeConverter
             </param>
        <summary />
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateRunspace">
      <MemberSignature Language="C#" Value="public static System.Management.Automation.Runspaces.Runspace CreateRunspace (System.Management.Automation.Runspaces.RunspaceConnectionInfo connectionInfo, System.Management.Automation.Host.PSHost host, System.Management.Automation.Runspaces.TypeTable typeTable, System.Management.Automation.PSPrimitiveDictionary applicationArguments);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Management.Automation.Runspaces.Runspace CreateRunspace(class System.Management.Automation.Runspaces.RunspaceConnectionInfo connectionInfo, class System.Management.Automation.Host.PSHost host, class System.Management.Automation.Runspaces.TypeTable typeTable, class System.Management.Automation.PSPrimitiveDictionary applicationArguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Automation.Runspaces.RunspaceFactory.CreateRunspace(System.Management.Automation.Runspaces.RunspaceConnectionInfo,System.Management.Automation.Host.PSHost,System.Management.Automation.Runspaces.TypeTable,System.Management.Automation.PSPrimitiveDictionary)" />
      <MemberSignature Language="F#" Value="static member CreateRunspace : System.Management.Automation.Runspaces.RunspaceConnectionInfo * System.Management.Automation.Host.PSHost * System.Management.Automation.Runspaces.TypeTable * System.Management.Automation.PSPrimitiveDictionary -&gt; System.Management.Automation.Runspaces.Runspace" Usage="System.Management.Automation.Runspaces.RunspaceFactory.CreateRunspace (connectionInfo, host, typeTable, applicationArguments)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Runspaces.Runspace</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connectionInfo" Type="System.Management.Automation.Runspaces.RunspaceConnectionInfo" />
        <Parameter Name="host" Type="System.Management.Automation.Host.PSHost" />
        <Parameter Name="typeTable" Type="System.Management.Automation.Runspaces.TypeTable" />
        <Parameter Name="applicationArguments" Type="System.Management.Automation.PSPrimitiveDictionary" />
      </Parameters>
      <Docs>
        <param name="connectionInfo"></param>
        <param name="host"></param>
        <param name="typeTable">
             The TypeTable to use while deserializing/serializing remote objects.
             TypeTable has the following information used by serializer:
               1. SerializationMethod
               2. SerializationDepth
               3. SpecificSerializationProperties
             TypeTable has the following information used by deserializer:
               1. TargetTypeForDeserialization
               2. TypeConverter
             </param>
        <param name="applicationArguments">
             Application arguments the server can see in <see cref="P:System.Management.Automation.Remoting.PSSenderInfo.ApplicationArguments" /></param>
        <summary />
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateRunspace">
      <MemberSignature Language="C#" Value="public static System.Management.Automation.Runspaces.Runspace CreateRunspace (System.Management.Automation.Runspaces.RunspaceConnectionInfo connectionInfo, System.Management.Automation.Host.PSHost host, System.Management.Automation.Runspaces.TypeTable typeTable, System.Management.Automation.PSPrimitiveDictionary applicationArguments, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Management.Automation.Runspaces.Runspace CreateRunspace(class System.Management.Automation.Runspaces.RunspaceConnectionInfo connectionInfo, class System.Management.Automation.Host.PSHost host, class System.Management.Automation.Runspaces.TypeTable typeTable, class System.Management.Automation.PSPrimitiveDictionary applicationArguments, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Automation.Runspaces.RunspaceFactory.CreateRunspace(System.Management.Automation.Runspaces.RunspaceConnectionInfo,System.Management.Automation.Host.PSHost,System.Management.Automation.Runspaces.TypeTable,System.Management.Automation.PSPrimitiveDictionary,System.String)" />
      <MemberSignature Language="F#" Value="static member CreateRunspace : System.Management.Automation.Runspaces.RunspaceConnectionInfo * System.Management.Automation.Host.PSHost * System.Management.Automation.Runspaces.TypeTable * System.Management.Automation.PSPrimitiveDictionary * string -&gt; System.Management.Automation.Runspaces.Runspace" Usage="System.Management.Automation.Runspaces.RunspaceFactory.CreateRunspace (connectionInfo, host, typeTable, applicationArguments, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Runspaces.Runspace</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connectionInfo" Type="System.Management.Automation.Runspaces.RunspaceConnectionInfo" />
        <Parameter Name="host" Type="System.Management.Automation.Host.PSHost" />
        <Parameter Name="typeTable" Type="System.Management.Automation.Runspaces.TypeTable" />
        <Parameter Name="applicationArguments" Type="System.Management.Automation.PSPrimitiveDictionary" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="connectionInfo"></param>
        <param name="host"></param>
        <param name="typeTable">
             The TypeTable to use while deserializing/serializing remote objects.
             TypeTable has the following information used by serializer:
               1. SerializationMethod
               2. SerializationDepth
               3. SpecificSerializationProperties
             TypeTable has the following information used by deserializer:
               1. TargetTypeForDeserialization
               2. TypeConverter
             </param>
        <param name="applicationArguments">
             Application arguments the server can see in <see cref="P:System.Management.Automation.Remoting.PSSenderInfo.ApplicationArguments" /></param>
        <param name="name">Name for remote runspace.</param>
        <summary />
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateRunspacePool">
      <MemberSignature Language="C#" Value="public static System.Management.Automation.Runspaces.RunspacePool CreateRunspacePool ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Management.Automation.Runspaces.RunspacePool CreateRunspacePool() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Automation.Runspaces.RunspaceFactory.CreateRunspacePool" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateRunspacePool () As RunspacePool" />
      <MemberSignature Language="F#" Value="static member CreateRunspacePool : unit -&gt; System.Management.Automation.Runspaces.RunspacePool" Usage="System.Management.Automation.Runspaces.RunspaceFactory.CreateRunspacePool " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Runspaces.RunspacePool</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Creates a RunspacePool with MaxRunspaces 1 and MinRunspaces 1.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateRunspacePool">
      <MemberSignature Language="C#" Value="public static System.Management.Automation.Runspaces.RunspacePool CreateRunspacePool (System.Management.Automation.Runspaces.InitialSessionState initialSessionState);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Management.Automation.Runspaces.RunspacePool CreateRunspacePool(class System.Management.Automation.Runspaces.InitialSessionState initialSessionState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Automation.Runspaces.RunspaceFactory.CreateRunspacePool(System.Management.Automation.Runspaces.InitialSessionState)" />
      <MemberSignature Language="F#" Value="static member CreateRunspacePool : System.Management.Automation.Runspaces.InitialSessionState -&gt; System.Management.Automation.Runspaces.RunspacePool" Usage="System.Management.Automation.Runspaces.RunspaceFactory.CreateRunspacePool initialSessionState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Runspaces.RunspacePool</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="initialSessionState" Type="System.Management.Automation.Runspaces.InitialSessionState" />
      </Parameters>
      <Docs>
        <param name="initialSessionState">
            initialSessionState to use when creating a new
            Runspace in the pool.
            </param>
        <summary>
            Creates a RunspacePool using the supplied <paramref name="initialSessionState" />.
            The minimum runspaces size is set to 1. The maximum runspaces size is
            set to 1.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
            InitialSessionState is null.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateRunspacePool">
      <MemberSignature Language="C#" Value="public static System.Management.Automation.Runspaces.RunspacePool CreateRunspacePool (int minRunspaces, int maxRunspaces);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Management.Automation.Runspaces.RunspacePool CreateRunspacePool(int32 minRunspaces, int32 maxRunspaces) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Automation.Runspaces.RunspaceFactory.CreateRunspacePool(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateRunspacePool (minRunspaces As Integer, maxRunspaces As Integer) As RunspacePool" />
      <MemberSignature Language="F#" Value="static member CreateRunspacePool : int * int -&gt; System.Management.Automation.Runspaces.RunspacePool" Usage="System.Management.Automation.Runspaces.RunspaceFactory.CreateRunspacePool (minRunspaces, maxRunspaces)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Runspaces.RunspacePool</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="minRunspaces" Type="System.Int32" />
        <Parameter Name="maxRunspaces" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="minRunspaces">
            The minimum number of Runspaces that exist in this
            pool. Should be greater than or equal to 1.
            </param>
        <param name="maxRunspaces">
            The maximum number of Runspaces that can exist in this
            pool. Should be greater than or equal to 1.
            </param>
        <summary>
            Creates a RunspacePool
            <paramref name="maxRunspaces" />
            limits the number of Runspaces that can exist in this
            pool. The minimum pool size is set to <paramref name="minPoolSoze" />.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
            Maximum runspaces is less than 1.
            Minimum runspaces is less than 1.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateRunspacePool">
      <MemberSignature Language="C#" Value="public static System.Management.Automation.Runspaces.RunspacePool CreateRunspacePool (int minRunspaces, int maxRunspaces, System.Management.Automation.Host.PSHost host);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Management.Automation.Runspaces.RunspacePool CreateRunspacePool(int32 minRunspaces, int32 maxRunspaces, class System.Management.Automation.Host.PSHost host) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Automation.Runspaces.RunspaceFactory.CreateRunspacePool(System.Int32,System.Int32,System.Management.Automation.Host.PSHost)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateRunspacePool (minRunspaces As Integer, maxRunspaces As Integer, host As PSHost) As RunspacePool" />
      <MemberSignature Language="F#" Value="static member CreateRunspacePool : int * int * System.Management.Automation.Host.PSHost -&gt; System.Management.Automation.Runspaces.RunspacePool" Usage="System.Management.Automation.Runspaces.RunspaceFactory.CreateRunspacePool (minRunspaces, maxRunspaces, host)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Runspaces.RunspacePool</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="minRunspaces" Type="System.Int32" />
        <Parameter Name="maxRunspaces" Type="System.Int32" />
        <Parameter Name="host" Type="System.Management.Automation.Host.PSHost" />
      </Parameters>
      <Docs>
        <param name="minRunspaces">
            The minimum number of Runspaces that can exist in this pool.
            Should be greater than or equal to 1.
            </param>
        <param name="maxRunspaces">
            The maximum number of Runspaces that can exist in this pool.
            Should be greater than or equal to 1.
            </param>
        <param name="host">
            The explicit PSHost implementation.
            </param>
        <summary>
            Creates a RunspacePool using the supplied <paramref name="host" />,
            <paramref name="minRunspaces" /> and <paramref name="maxRunspaces" /></summary>
        <returns>
            A local runspacepool instance.
            </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="host" /> is null.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateRunspacePool">
      <MemberSignature Language="C#" Value="public static System.Management.Automation.Runspaces.RunspacePool CreateRunspacePool (int minRunspaces, int maxRunspaces, System.Management.Automation.Runspaces.RunspaceConnectionInfo connectionInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Management.Automation.Runspaces.RunspacePool CreateRunspacePool(int32 minRunspaces, int32 maxRunspaces, class System.Management.Automation.Runspaces.RunspaceConnectionInfo connectionInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Automation.Runspaces.RunspaceFactory.CreateRunspacePool(System.Int32,System.Int32,System.Management.Automation.Runspaces.RunspaceConnectionInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateRunspacePool (minRunspaces As Integer, maxRunspaces As Integer, connectionInfo As RunspaceConnectionInfo) As RunspacePool" />
      <MemberSignature Language="F#" Value="static member CreateRunspacePool : int * int * System.Management.Automation.Runspaces.RunspaceConnectionInfo -&gt; System.Management.Automation.Runspaces.RunspacePool" Usage="System.Management.Automation.Runspaces.RunspaceFactory.CreateRunspacePool (minRunspaces, maxRunspaces, connectionInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Runspaces.RunspacePool</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="minRunspaces" Type="System.Int32" />
        <Parameter Name="maxRunspaces" Type="System.Int32" />
        <Parameter Name="connectionInfo" Type="System.Management.Automation.Runspaces.RunspaceConnectionInfo" />
      </Parameters>
      <Docs>
        <param name="minRunspaces">
            The minimum number of Runspace that should exist in this
            pool. Should be greater than 1.
            </param>
        <param name="maxRunspaces">
            The maximum number of Runspaces that can exist in this
            pool. Should be greater than or equal to 1.
            </param>
        <param name="connectionInfo">RunspaceConnectionInfo object describing
            the remote computer on which this runspace pool needs to be
            created</param>
        <summary>
            Creates a RunspacePool
            on the specified remote computer.
            <paramref name="maxRunspaces" />
            limits the number of Runspaces that can exist in this
            pool. The minimum pool size is set to
            <paramref name="minPoolSoze" />.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
            Maximum Pool size is less than 1.
            Minimum Pool size is less than 1.
            </exception>
        <exception cref="T:System.ArgumentNullException">
            connectionInfo is null</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateRunspacePool">
      <MemberSignature Language="C#" Value="public static System.Management.Automation.Runspaces.RunspacePool CreateRunspacePool (int minRunspaces, int maxRunspaces, System.Management.Automation.Runspaces.InitialSessionState initialSessionState, System.Management.Automation.Host.PSHost host);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Management.Automation.Runspaces.RunspacePool CreateRunspacePool(int32 minRunspaces, int32 maxRunspaces, class System.Management.Automation.Runspaces.InitialSessionState initialSessionState, class System.Management.Automation.Host.PSHost host) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Automation.Runspaces.RunspaceFactory.CreateRunspacePool(System.Int32,System.Int32,System.Management.Automation.Runspaces.InitialSessionState,System.Management.Automation.Host.PSHost)" />
      <MemberSignature Language="F#" Value="static member CreateRunspacePool : int * int * System.Management.Automation.Runspaces.InitialSessionState * System.Management.Automation.Host.PSHost -&gt; System.Management.Automation.Runspaces.RunspacePool" Usage="System.Management.Automation.Runspaces.RunspaceFactory.CreateRunspacePool (minRunspaces, maxRunspaces, initialSessionState, host)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Runspaces.RunspacePool</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="minRunspaces" Type="System.Int32" />
        <Parameter Name="maxRunspaces" Type="System.Int32" />
        <Parameter Name="initialSessionState" Type="System.Management.Automation.Runspaces.InitialSessionState" />
        <Parameter Name="host" Type="System.Management.Automation.Host.PSHost" />
      </Parameters>
      <Docs>
        <param name="minRunspaces">
            The minimum number of Runspaces that can exist in this pool.
            Should be greater than or equal to 1.
            </param>
        <param name="maxRunspaces">
            The maximum number of Runspaces that can exist in this pool.
            Should be greater than or equal to 1.
            </param>
        <param name="initialSessionState">
            initialSessionState to use when creating a new Runspace in the
            pool.
            </param>
        <param name="host">
            The explicit PSHost implementation.
            </param>
        <summary>
            Creates a RunspacePool using the supplied <paramref name="initialSessionState" />,
            <paramref name="minRunspaces" /> and <paramref name="maxRunspaces" /></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="initialSessionState" /> is null.
            <paramref name="host" /> is null.
            </exception>
        <exception cref="T:System.ArgumentException">
            Maximum runspaces is less than 1.
            Minimum runspaces is less than 1.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateRunspacePool">
      <MemberSignature Language="C#" Value="public static System.Management.Automation.Runspaces.RunspacePool CreateRunspacePool (int minRunspaces, int maxRunspaces, System.Management.Automation.Runspaces.RunspaceConnectionInfo connectionInfo, System.Management.Automation.Host.PSHost host);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Management.Automation.Runspaces.RunspacePool CreateRunspacePool(int32 minRunspaces, int32 maxRunspaces, class System.Management.Automation.Runspaces.RunspaceConnectionInfo connectionInfo, class System.Management.Automation.Host.PSHost host) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Automation.Runspaces.RunspaceFactory.CreateRunspacePool(System.Int32,System.Int32,System.Management.Automation.Runspaces.RunspaceConnectionInfo,System.Management.Automation.Host.PSHost)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateRunspacePool (minRunspaces As Integer, maxRunspaces As Integer, connectionInfo As RunspaceConnectionInfo, host As PSHost) As RunspacePool" />
      <MemberSignature Language="F#" Value="static member CreateRunspacePool : int * int * System.Management.Automation.Runspaces.RunspaceConnectionInfo * System.Management.Automation.Host.PSHost -&gt; System.Management.Automation.Runspaces.RunspacePool" Usage="System.Management.Automation.Runspaces.RunspaceFactory.CreateRunspacePool (minRunspaces, maxRunspaces, connectionInfo, host)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Runspaces.RunspacePool</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="minRunspaces" Type="System.Int32" />
        <Parameter Name="maxRunspaces" Type="System.Int32" />
        <Parameter Name="connectionInfo" Type="System.Management.Automation.Runspaces.RunspaceConnectionInfo" />
        <Parameter Name="host" Type="System.Management.Automation.Host.PSHost" />
      </Parameters>
      <Docs>
        <param name="minRunspaces">
            The minimum number of Runspace that should exist in this
            pool. Should be greater than 1.
            </param>
        <param name="maxRunspaces">
            The maximum number of Runspaces that can exist in this
            pool. Should be greater than or equal to 1.
            </param>
        <param name="connectionInfo">RunspaceConnectionInfo object describing
            the remote computer on which this runspace pool needs to be
            created</param>
        <param name="host">Host associated with this
            runspace pool</param>
        <summary>
            Creates a RunspacePool
            on the specified remote runspace computer.
            <paramref name="maxRunspaces" />
            limits the number of Runspaces that can exist in this
            pool. The minimum pool size is set to
            <paramref name="minPoolSoze" />.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
            Maximum Pool size is less than 1.
            Minimum Pool size is less than 1.
            </exception>
        <exception cref="T:System.ArgumentNullException">
            connectionInfo is null</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateRunspacePool">
      <MemberSignature Language="C#" Value="public static System.Management.Automation.Runspaces.RunspacePool CreateRunspacePool (int minRunspaces, int maxRunspaces, System.Management.Automation.Runspaces.RunspaceConnectionInfo connectionInfo, System.Management.Automation.Host.PSHost host, System.Management.Automation.Runspaces.TypeTable typeTable);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Management.Automation.Runspaces.RunspacePool CreateRunspacePool(int32 minRunspaces, int32 maxRunspaces, class System.Management.Automation.Runspaces.RunspaceConnectionInfo connectionInfo, class System.Management.Automation.Host.PSHost host, class System.Management.Automation.Runspaces.TypeTable typeTable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Automation.Runspaces.RunspaceFactory.CreateRunspacePool(System.Int32,System.Int32,System.Management.Automation.Runspaces.RunspaceConnectionInfo,System.Management.Automation.Host.PSHost,System.Management.Automation.Runspaces.TypeTable)" />
      <MemberSignature Language="F#" Value="static member CreateRunspacePool : int * int * System.Management.Automation.Runspaces.RunspaceConnectionInfo * System.Management.Automation.Host.PSHost * System.Management.Automation.Runspaces.TypeTable -&gt; System.Management.Automation.Runspaces.RunspacePool" Usage="System.Management.Automation.Runspaces.RunspaceFactory.CreateRunspacePool (minRunspaces, maxRunspaces, connectionInfo, host, typeTable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Runspaces.RunspacePool</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="minRunspaces" Type="System.Int32" />
        <Parameter Name="maxRunspaces" Type="System.Int32" />
        <Parameter Name="connectionInfo" Type="System.Management.Automation.Runspaces.RunspaceConnectionInfo" />
        <Parameter Name="host" Type="System.Management.Automation.Host.PSHost" />
        <Parameter Name="typeTable" Type="System.Management.Automation.Runspaces.TypeTable" />
      </Parameters>
      <Docs>
        <param name="minRunspaces">
             The minimum number of Runspace that should exist in this
             pool. Should be greater than 1.
             </param>
        <param name="maxRunspaces">
             The maximum number of Runspaces that can exist in this
             pool. Should be greater than or equal to 1.
             </param>
        <param name="connectionInfo">RunspaceConnectionInfo object describing
             the remote computer on which this runspace pool needs to be
             created</param>
        <param name="host">Host associated with this
             runspace pool</param>
        <param name="typeTable">
             The TypeTable to use while deserializing/serializing remote objects.
             TypeTable has the following information used by serializer:
               1. SerializationMethod
               2. SerializationDepth
               3. SpecificSerializationProperties
             TypeTable has the following information used by deserializer:
               1. TargetTypeForDeserialization
               2. TypeConverter
            
             If <paramref name="typeTable" /> is null no custom serialization/deserialization
             can be done. Default PowerShell behavior will be used in this case.
             </param>
        <summary>
             Creates a RunspacePool
             on the specified remote runspace computer.
             <paramref name="maxRunspaces" />
             limits the number of Runspaces that can exist in this
             pool. The minimum pool size is set to
             <paramref name="minPoolSoze" />.
             </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
             Maximum Pool size is less than 1.
             Minimum Pool size is less than 1.
             </exception>
        <exception cref="T:System.ArgumentNullException">
             connectionInfo is null</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateRunspacePool">
      <MemberSignature Language="C#" Value="public static System.Management.Automation.Runspaces.RunspacePool CreateRunspacePool (int minRunspaces, int maxRunspaces, System.Management.Automation.Runspaces.RunspaceConnectionInfo connectionInfo, System.Management.Automation.Host.PSHost host, System.Management.Automation.Runspaces.TypeTable typeTable, System.Management.Automation.PSPrimitiveDictionary applicationArguments);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Management.Automation.Runspaces.RunspacePool CreateRunspacePool(int32 minRunspaces, int32 maxRunspaces, class System.Management.Automation.Runspaces.RunspaceConnectionInfo connectionInfo, class System.Management.Automation.Host.PSHost host, class System.Management.Automation.Runspaces.TypeTable typeTable, class System.Management.Automation.PSPrimitiveDictionary applicationArguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Automation.Runspaces.RunspaceFactory.CreateRunspacePool(System.Int32,System.Int32,System.Management.Automation.Runspaces.RunspaceConnectionInfo,System.Management.Automation.Host.PSHost,System.Management.Automation.Runspaces.TypeTable,System.Management.Automation.PSPrimitiveDictionary)" />
      <MemberSignature Language="F#" Value="static member CreateRunspacePool : int * int * System.Management.Automation.Runspaces.RunspaceConnectionInfo * System.Management.Automation.Host.PSHost * System.Management.Automation.Runspaces.TypeTable * System.Management.Automation.PSPrimitiveDictionary -&gt; System.Management.Automation.Runspaces.RunspacePool" Usage="System.Management.Automation.Runspaces.RunspaceFactory.CreateRunspacePool (minRunspaces, maxRunspaces, connectionInfo, host, typeTable, applicationArguments)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Runspaces.RunspacePool</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="minRunspaces" Type="System.Int32" />
        <Parameter Name="maxRunspaces" Type="System.Int32" />
        <Parameter Name="connectionInfo" Type="System.Management.Automation.Runspaces.RunspaceConnectionInfo" />
        <Parameter Name="host" Type="System.Management.Automation.Host.PSHost" />
        <Parameter Name="typeTable" Type="System.Management.Automation.Runspaces.TypeTable" />
        <Parameter Name="applicationArguments" Type="System.Management.Automation.PSPrimitiveDictionary" />
      </Parameters>
      <Docs>
        <param name="minRunspaces">
             The minimum number of Runspace that should exist in this
             pool. Should be greater than 1.
             </param>
        <param name="maxRunspaces">
             The maximum number of Runspaces that can exist in this
             pool. Should be greater than or equal to 1.
             </param>
        <param name="connectionInfo">RunspaceConnectionInfo object describing
             the remote computer on which this runspace pool needs to be
             created</param>
        <param name="host">Host associated with this
             runspace pool</param>
        <param name="typeTable">
             The TypeTable to use while deserializing/serializing remote objects.
             TypeTable has the following information used by serializer:
               1. SerializationMethod
               2. SerializationDepth
               3. SpecificSerializationProperties
             TypeTable has the following information used by deserializer:
               1. TargetTypeForDeserialization
               2. TypeConverter
            
             If <paramref name="typeTable" /> is null no custom serialization/deserialization
             can be done. Default PowerShell behavior will be used in this case.
             </param>
        <param name="applicationArguments">
             Application arguments the server can see in <see cref="P:System.Management.Automation.Remoting.PSSenderInfo.ApplicationArguments" /></param>
        <summary>
             Creates a RunspacePool
             on the specified remote runspace computer.
             <paramref name="maxRunspaces" />
             limits the number of Runspaces that can exist in this
             pool. The minimum pool size is set to
             <paramref name="minPoolSoze" />.
             </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
             Maximum Pool size is less than 1.
             Minimum Pool size is less than 1.
             </exception>
        <exception cref="T:System.ArgumentNullException">
             connectionInfo is null</exception>
      </Docs>
    </Member>
  </Members>
</Type>