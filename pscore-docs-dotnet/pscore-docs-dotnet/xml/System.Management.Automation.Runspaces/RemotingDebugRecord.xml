<Type Name="RemotingDebugRecord" FullName="System.Management.Automation.Runspaces.RemotingDebugRecord">
  <TypeSignature Language="C#" Value="public class RemotingDebugRecord : System.Management.Automation.DebugRecord" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RemotingDebugRecord extends System.Management.Automation.DebugRecord" />
  <TypeSignature Language="DocId" Value="T:System.Management.Automation.Runspaces.RemotingDebugRecord" />
  <TypeSignature Language="VB.NET" Value="Public Class RemotingDebugRecord&#xA;Inherits DebugRecord" />
  <TypeSignature Language="F#" Value="type RemotingDebugRecord = class&#xA;    inherit DebugRecord" />
  <AssemblyInfo>
    <AssemblyName>System.Management.Automation</AssemblyName>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Management.Automation.DebugRecord</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.Serialization.DataContract</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            Debug record containing origin information
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RemotingDebugRecord (string message, System.Management.Automation.Remoting.OriginInfo originInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, class System.Management.Automation.Remoting.OriginInfo originInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Automation.Runspaces.RemotingDebugRecord.#ctor(System.String,System.Management.Automation.Remoting.OriginInfo)" />
      <MemberSignature Language="F#" Value="new System.Management.Automation.Runspaces.RemotingDebugRecord : string * System.Management.Automation.Remoting.OriginInfo -&gt; System.Management.Automation.Runspaces.RemotingDebugRecord" Usage="new System.Management.Automation.Runspaces.RemotingDebugRecord (message, originInfo)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="originInfo" Type="System.Management.Automation.Remoting.OriginInfo" />
      </Parameters>
      <Docs>
        <param name="message">The debug message that is wrapped</param>
        <param name="originInfo">The origin information</param>
        <summary>
            Constructor
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OriginInfo">
      <MemberSignature Language="C#" Value="public System.Management.Automation.Remoting.OriginInfo OriginInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Management.Automation.Remoting.OriginInfo OriginInfo" />
      <MemberSignature Language="DocId" Value="P:System.Management.Automation.Runspaces.RemotingDebugRecord.OriginInfo" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OriginInfo As OriginInfo" />
      <MemberSignature Language="F#" Value="member this.OriginInfo : System.Management.Automation.Remoting.OriginInfo" Usage="System.Management.Automation.Runspaces.RemotingDebugRecord.OriginInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Remoting.OriginInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Contains the origin information
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>