<Type Name="IArgumentCompleter" FullName="System.Management.Automation.IArgumentCompleter">
  <TypeSignature Language="C#" Value="public interface IArgumentCompleter" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IArgumentCompleter" />
  <TypeSignature Language="DocId" Value="T:System.Management.Automation.IArgumentCompleter" />
  <TypeSignature Language="VB.NET" Value="Public Interface IArgumentCompleter" />
  <TypeSignature Language="F#" Value="type IArgumentCompleter = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Management.Automation</AssemblyName>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
            A type specified by the <see cref="T:System.Management.Automation.ArgumentCompleterAttribute" /> must implement this interface.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="CompleteArgument">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Management.Automation.CompletionResult&gt; CompleteArgument (string commandName, string parameterName, string wordToComplete, System.Management.Automation.Language.CommandAst commandAst, System.Collections.IDictionary fakeBoundParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.Management.Automation.CompletionResult&gt; CompleteArgument(string commandName, string parameterName, string wordToComplete, class System.Management.Automation.Language.CommandAst commandAst, class System.Collections.IDictionary fakeBoundParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Automation.IArgumentCompleter.CompleteArgument(System.String,System.String,System.String,System.Management.Automation.Language.CommandAst,System.Collections.IDictionary)" />
      <MemberSignature Language="F#" Value="abstract member CompleteArgument : string * string * string * System.Management.Automation.Language.CommandAst * System.Collections.IDictionary -&gt; seq&lt;System.Management.Automation.CompletionResult&gt;" Usage="iArgumentCompleter.CompleteArgument (commandName, parameterName, wordToComplete, commandAst, fakeBoundParameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Management.Automation.CompletionResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandName" Type="System.String" />
        <Parameter Name="parameterName" Type="System.String" />
        <Parameter Name="wordToComplete" Type="System.String" />
        <Parameter Name="commandAst" Type="System.Management.Automation.Language.CommandAst" />
        <Parameter Name="fakeBoundParameters" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="commandName">The name of the command that needs argument completion.</param>
        <param name="parameterName">The name of the parameter that needs argument completion.</param>
        <param name="wordToComplete">The (possibly empty) word being completed.</param>
        <param name="commandAst">The command ast in case it is needed for completion.</param>
        <param name="fakeBoundParameters">
            This parameter is similar to $PSBoundParameters, except that sometimes PowerShell cannot or
            will not attempt to evaluate an argument, in which case you may need to use <paramref name="commandAst" />.
            </param>
        <summary>
            Implementations of this function are called by PowerShell to complete arguments.
            </summary>
        <returns>
            A collection of completion results, most like with <see cref="P:System.Management.Automation.CompletionResult.ResultType" /> set to
            <see cref="F:System.Management.Automation.CompletionResultType.ParameterValue" />.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>