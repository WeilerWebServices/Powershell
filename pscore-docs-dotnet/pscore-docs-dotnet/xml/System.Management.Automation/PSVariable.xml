<Type Name="PSVariable" FullName="System.Management.Automation.PSVariable">
  <TypeSignature Language="C#" Value="public class PSVariable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PSVariable extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Management.Automation.PSVariable" />
  <TypeSignature Language="VB.NET" Value="Public Class PSVariable" />
  <TypeSignature Language="F#" Value="type PSVariable = class&#xA;    interface IHasSessionStateEntryVisibility" />
  <AssemblyInfo>
    <AssemblyName>System.Management.Automation</AssemblyName>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Represents a variable in the PowerShell language.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PSVariable (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Automation.PSVariable.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String)" />
      <MemberSignature Language="F#" Value="new System.Management.Automation.PSVariable : string -&gt; System.Management.Automation.PSVariable" Usage="new System.Management.Automation.PSVariable name" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
             The name of the variable.
             </param>
        <summary>
             Constructs a variable with the given name.
             </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
             If <paramref name="name" /> is null or empty.
             </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PSVariable (string name, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Automation.PSVariable.#ctor(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, value As Object)" />
      <MemberSignature Language="F#" Value="new System.Management.Automation.PSVariable : string * obj -&gt; System.Management.Automation.PSVariable" Usage="new System.Management.Automation.PSVariable (name, value)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="name">
             The name of the variable.
             </param>
        <param name="value">
             The value of the variable.
             </param>
        <summary>
             Constructs a variable with the given name, and value.
             </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
             If <paramref name="name" /> is null or empty.
             </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PSVariable (string name, object value, System.Management.Automation.ScopedItemOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, object value, valuetype System.Management.Automation.ScopedItemOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Automation.PSVariable.#ctor(System.String,System.Object,System.Management.Automation.ScopedItemOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, value As Object, options As ScopedItemOptions)" />
      <MemberSignature Language="F#" Value="new System.Management.Automation.PSVariable : string * obj * System.Management.Automation.ScopedItemOptions -&gt; System.Management.Automation.PSVariable" Usage="new System.Management.Automation.PSVariable (name, value, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="options" Type="System.Management.Automation.ScopedItemOptions" />
      </Parameters>
      <Docs>
        <param name="name">
             The name of the variable.
             </param>
        <param name="value">
             The value of the variable.
             </param>
        <param name="options">
             The constraints of the variable. Note, variables can only be made constant
             in the constructor.
             </param>
        <summary>
             Constructs a variable with the given name, value, and options.
             </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
             If <paramref name="name" /> is null or empty.
             </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PSVariable (string name, object value, System.Management.Automation.ScopedItemOptions options, System.Collections.ObjectModel.Collection&lt;Attribute&gt; attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, object value, valuetype System.Management.Automation.ScopedItemOptions options, class System.Collections.ObjectModel.Collection`1&lt;class System.Attribute&gt; attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Automation.PSVariable.#ctor(System.String,System.Object,System.Management.Automation.ScopedItemOptions,System.Collections.ObjectModel.Collection{System.Attribute})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, value As Object, options As ScopedItemOptions, attributes As Collection(Of Attribute))" />
      <MemberSignature Language="F#" Value="new System.Management.Automation.PSVariable : string * obj * System.Management.Automation.ScopedItemOptions * System.Collections.ObjectModel.Collection&lt;Attribute&gt; -&gt; System.Management.Automation.PSVariable" Usage="new System.Management.Automation.PSVariable (name, value, options, attributes)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="options" Type="System.Management.Automation.ScopedItemOptions" />
        <Parameter Name="attributes" Type="System.Collections.ObjectModel.Collection&lt;System.Attribute&gt;" />
      </Parameters>
      <Docs>
        <param name="name">
             The name of the variable.
             </param>
        <param name="value">
             The value of the variable.
             </param>
        <param name="options">
             The constraints of the variable. Note, variables can only be made constant
             in the constructor.
             </param>
        <param name="attributes">
             The attributes for the variable. ValidateArgumentsAttribute and derived types
             will be used to validate a value before setting it.
             </param>
        <summary>
             Constructs a variable with the given name, value, options, and attributes
             </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
             If <paramref name="name" /> is null or empty.
             </exception>
        <exception cref="T:System.Management.Automation.ValidationMetadataException">
             If the validation metadata identified in <paramref name="attributes" />
             throws an exception.
             </exception>
      </Docs>
    </Member>
    <Member MemberName="Attributes">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;Attribute&gt; Attributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.Collection`1&lt;class System.Attribute&gt; Attributes" />
      <MemberSignature Language="DocId" Value="P:System.Management.Automation.PSVariable.Attributes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Attributes As Collection(Of Attribute)" />
      <MemberSignature Language="F#" Value="member this.Attributes : System.Collections.ObjectModel.Collection&lt;Attribute&gt;" Usage="System.Management.Automation.PSVariable.Attributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.Attribute&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
             Gets the collection that contains the attributes for the variable.
             </summary>
        <value>To be added.</value>
        <remarks>
             To add or remove attributes, get the collection and then add or remove
             attributes to that collection.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="Description">
      <MemberSignature Language="C#" Value="public virtual string Description { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Description" />
      <MemberSignature Language="DocId" Value="P:System.Management.Automation.PSVariable.Description" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Description As String" />
      <MemberSignature Language="F#" Value="member this.Description : string with get, set" Usage="System.Management.Automation.PSVariable.Description" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the description of the variable.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsValidValue">
      <MemberSignature Language="C#" Value="public virtual bool IsValidValue (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsValidValue(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Automation.PSVariable.IsValidValue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsValidValue (value As Object) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member IsValidValue : obj -&gt; bool&#xA;override this.IsValidValue : obj -&gt; bool" Usage="pSVariable.IsValidValue value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
             value which needs to be checked
             </param>
        <summary>
             Checks if the given value meets the validation attribute constraints on the PSVariable.
             </summary>
        <returns>To be added.</returns>
        <remarks>
             If <paramref name="value" /> is null or if no attributes are set, then
             the value is deemed valid.
             </remarks>
        <exception cref="T:System.Management.Automation.ValidationMetadataException">
             If the validation metadata throws an exception.
             </exception>
      </Docs>
    </Member>
    <Member MemberName="Module">
      <MemberSignature Language="C#" Value="public System.Management.Automation.PSModuleInfo Module { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Management.Automation.PSModuleInfo Module" />
      <MemberSignature Language="DocId" Value="P:System.Management.Automation.PSVariable.Module" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Module As PSModuleInfo" />
      <MemberSignature Language="F#" Value="member this.Module : System.Management.Automation.PSModuleInfo" Usage="System.Management.Automation.PSVariable.Module" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.PSModuleInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The module where this variable was defined.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ModuleName">
      <MemberSignature Language="C#" Value="public string ModuleName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ModuleName" />
      <MemberSignature Language="DocId" Value="P:System.Management.Automation.PSVariable.ModuleName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ModuleName As String" />
      <MemberSignature Language="F#" Value="member this.ModuleName : string" Usage="System.Management.Automation.PSVariable.ModuleName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The name of the module that defined this variable.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Management.Automation.PSVariable.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Management.Automation.PSVariable.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the name of the variable.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Options">
      <MemberSignature Language="C#" Value="public virtual System.Management.Automation.ScopedItemOptions Options { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Management.Automation.ScopedItemOptions Options" />
      <MemberSignature Language="DocId" Value="P:System.Management.Automation.PSVariable.Options" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Options As ScopedItemOptions" />
      <MemberSignature Language="F#" Value="member this.Options : System.Management.Automation.ScopedItemOptions with get, set" Usage="System.Management.Automation.PSVariable.Options" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.ScopedItemOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
             Gets or sets the scope options on the variable.
             </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Management.Automation.SessionStateUnauthorizedAccessException">
             Upon set, if the variable is constant or if <paramref name="value" />
             contains the constant flag.
             </exception>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public virtual object Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Value" />
      <MemberSignature Language="DocId" Value="P:System.Management.Automation.PSVariable.Value" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Value As Object" />
      <MemberSignature Language="F#" Value="member this.Value : obj with get, set" Usage="System.Management.Automation.PSVariable.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
             Gets or sets the value of the variable
             </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Management.Automation.SessionStateUnauthorizedAccessException">
             If the variable is read-only or constant upon call to set.
             </exception>
        <exception cref="T:System.Management.Automation.ValidationMetadataException">
          <paramref name="value" /> is not valid according to one or more
             of the attributes of this shell variable.
             </exception>
      </Docs>
    </Member>
    <Member MemberName="Visibility">
      <MemberSignature Language="C#" Value="public System.Management.Automation.SessionStateEntryVisibility Visibility { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Management.Automation.SessionStateEntryVisibility Visibility" />
      <MemberSignature Language="DocId" Value="P:System.Management.Automation.PSVariable.Visibility" />
      <MemberSignature Language="VB.NET" Value="Public Property Visibility As SessionStateEntryVisibility" />
      <MemberSignature Language="F#" Value="member this.Visibility : System.Management.Automation.SessionStateEntryVisibility with get, set" Usage="System.Management.Automation.PSVariable.Visibility" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Management.Automation.IHasSessionStateEntryVisibility.Visibility</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.SessionStateEntryVisibility</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            If true, then this variable is visible outside the runspace.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>