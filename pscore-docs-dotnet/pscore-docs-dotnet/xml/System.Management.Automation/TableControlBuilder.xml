<Type Name="TableControlBuilder" FullName="System.Management.Automation.TableControlBuilder">
  <TypeSignature Language="C#" Value="public sealed class TableControlBuilder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit TableControlBuilder extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Management.Automation.TableControlBuilder" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class TableControlBuilder" />
  <TypeSignature Language="F#" Value="type TableControlBuilder = class" />
  <AssemblyInfo>
    <AssemblyName>System.Management.Automation</AssemblyName>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>A helper class for defining table controls</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AddHeader">
      <MemberSignature Language="C#" Value="public System.Management.Automation.TableControlBuilder AddHeader (System.Management.Automation.Alignment alignment = System.Management.Automation.Alignment.Undefined, int width = 0, string label = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Management.Automation.TableControlBuilder AddHeader(valuetype System.Management.Automation.Alignment alignment, int32 width, string label) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Automation.TableControlBuilder.AddHeader(System.Management.Automation.Alignment,System.Int32,System.String)" />
      <MemberSignature Language="F#" Value="member this.AddHeader : System.Management.Automation.Alignment * int * string -&gt; System.Management.Automation.TableControlBuilder" Usage="tableControlBuilder.AddHeader (alignment, width, label)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.TableControlBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="alignment" Type="System.Management.Automation.Alignment" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="label" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="alignment">To be added.</param>
        <param name="width">To be added.</param>
        <param name="label">To be added.</param>
        <summary>Add a header</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndTable">
      <MemberSignature Language="C#" Value="public System.Management.Automation.TableControl EndTable ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Management.Automation.TableControl EndTable() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Automation.TableControlBuilder.EndTable" />
      <MemberSignature Language="VB.NET" Value="Public Function EndTable () As TableControl" />
      <MemberSignature Language="F#" Value="member this.EndTable : unit -&gt; System.Management.Automation.TableControl" Usage="tableControlBuilder.EndTable " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.TableControl</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Complete a table definition</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupByProperty">
      <MemberSignature Language="C#" Value="public System.Management.Automation.TableControlBuilder GroupByProperty (string property, System.Management.Automation.CustomControl customControl = null, string label = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Management.Automation.TableControlBuilder GroupByProperty(string property, class System.Management.Automation.CustomControl customControl, string label) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Automation.TableControlBuilder.GroupByProperty(System.String,System.Management.Automation.CustomControl,System.String)" />
      <MemberSignature Language="F#" Value="member this.GroupByProperty : string * System.Management.Automation.CustomControl * string -&gt; System.Management.Automation.TableControlBuilder" Usage="tableControlBuilder.GroupByProperty (property, customControl, label)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.TableControlBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.String" />
        <Parameter Name="customControl" Type="System.Management.Automation.CustomControl" />
        <Parameter Name="label" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="property">To be added.</param>
        <param name="customControl">To be added.</param>
        <param name="label">To be added.</param>
        <summary>Group instances by the property name with an optional label.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupByScriptBlock">
      <MemberSignature Language="C#" Value="public System.Management.Automation.TableControlBuilder GroupByScriptBlock (string scriptBlock, System.Management.Automation.CustomControl customControl = null, string label = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Management.Automation.TableControlBuilder GroupByScriptBlock(string scriptBlock, class System.Management.Automation.CustomControl customControl, string label) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Automation.TableControlBuilder.GroupByScriptBlock(System.String,System.Management.Automation.CustomControl,System.String)" />
      <MemberSignature Language="F#" Value="member this.GroupByScriptBlock : string * System.Management.Automation.CustomControl * string -&gt; System.Management.Automation.TableControlBuilder" Usage="tableControlBuilder.GroupByScriptBlock (scriptBlock, customControl, label)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.TableControlBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scriptBlock" Type="System.String" />
        <Parameter Name="customControl" Type="System.Management.Automation.CustomControl" />
        <Parameter Name="label" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="scriptBlock">To be added.</param>
        <param name="customControl">To be added.</param>
        <param name="label">To be added.</param>
        <summary>Group instances by the script block expression with an optional label.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartRowDefinition">
      <MemberSignature Language="C#" Value="public System.Management.Automation.TableRowDefinitionBuilder StartRowDefinition (bool wrap = false, System.Collections.Generic.IEnumerable&lt;string&gt; entrySelectedByType = null, System.Collections.Generic.IEnumerable&lt;System.Management.Automation.DisplayEntry&gt; entrySelectedByCondition = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Management.Automation.TableRowDefinitionBuilder StartRowDefinition(bool wrap, class System.Collections.Generic.IEnumerable`1&lt;string&gt; entrySelectedByType, class System.Collections.Generic.IEnumerable`1&lt;class System.Management.Automation.DisplayEntry&gt; entrySelectedByCondition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Automation.TableControlBuilder.StartRowDefinition(System.Boolean,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.Management.Automation.DisplayEntry})" />
      <MemberSignature Language="VB.NET" Value="Public Function StartRowDefinition (Optional wrap As Boolean = false, Optional entrySelectedByType As IEnumerable(Of String) = null, Optional entrySelectedByCondition As IEnumerable(Of DisplayEntry) = null) As TableRowDefinitionBuilder" />
      <MemberSignature Language="F#" Value="member this.StartRowDefinition : bool * seq&lt;string&gt; * seq&lt;System.Management.Automation.DisplayEntry&gt; -&gt; System.Management.Automation.TableRowDefinitionBuilder" Usage="tableControlBuilder.StartRowDefinition (wrap, entrySelectedByType, entrySelectedByCondition)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.TableRowDefinitionBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="wrap" Type="System.Boolean" />
        <Parameter Name="entrySelectedByType" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="entrySelectedByCondition" Type="System.Collections.Generic.IEnumerable&lt;System.Management.Automation.DisplayEntry&gt;" />
      </Parameters>
      <Docs>
        <param name="wrap">To be added.</param>
        <param name="entrySelectedByType">To be added.</param>
        <param name="entrySelectedByCondition">To be added.</param>
        <summary>Add a header</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>