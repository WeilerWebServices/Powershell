<Type Name="AliasAttribute" FullName="System.Management.Automation.AliasAttribute">
  <TypeSignature Language="C#" Value="public sealed class AliasAttribute : System.Management.Automation.Internal.ParsingBaseAttribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit AliasAttribute extends System.Management.Automation.Internal.ParsingBaseAttribute" />
  <TypeSignature Language="DocId" Value="T:System.Management.Automation.AliasAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class AliasAttribute&#xA;Inherits ParsingBaseAttribute" />
  <TypeSignature Language="F#" Value="type AliasAttribute = class&#xA;    inherit ParsingBaseAttribute" />
  <AssemblyInfo>
    <AssemblyName>System.Management.Automation</AssemblyName>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Management.Automation.Internal.ParsingBaseAttribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Property | System.AttributeTargets.Field, AllowMultiple=false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            Declares an alternative name for a parameter
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AliasAttribute (params string[] aliasNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string[] aliasNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Automation.AliasAttribute.#ctor(System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (ParamArray aliasNames As String())" />
      <MemberSignature Language="F#" Value="new System.Management.Automation.AliasAttribute : string[] -&gt; System.Management.Automation.AliasAttribute" Usage="new System.Management.Automation.AliasAttribute aliasNames" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="aliasNames" Type="System.String[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="aliasNames">The name for this alias</param>
        <summary>
            Initializes a new instance of the AliasAttribute class
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">for invalid arguments</exception>
      </Docs>
    </Member>
    <Member MemberName="AliasNames">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;string&gt; AliasNames { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;string&gt; AliasNames" />
      <MemberSignature Language="DocId" Value="P:System.Management.Automation.AliasAttribute.AliasNames" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AliasNames As IList(Of String)" />
      <MemberSignature Language="F#" Value="member this.AliasNames : System.Collections.Generic.IList&lt;string&gt;" Usage="System.Management.Automation.AliasAttribute.AliasNames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the alias names passed to the constructor
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>