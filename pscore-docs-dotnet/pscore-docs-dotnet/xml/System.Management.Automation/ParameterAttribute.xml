<Type Name="ParameterAttribute" FullName="System.Management.Automation.ParameterAttribute">
  <TypeSignature Language="C#" Value="public sealed class ParameterAttribute : System.Management.Automation.Internal.ParsingBaseAttribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ParameterAttribute extends System.Management.Automation.Internal.ParsingBaseAttribute" />
  <TypeSignature Language="DocId" Value="T:System.Management.Automation.ParameterAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ParameterAttribute&#xA;Inherits ParsingBaseAttribute" />
  <TypeSignature Language="F#" Value="type ParameterAttribute = class&#xA;    inherit ParsingBaseAttribute" />
  <AssemblyInfo>
    <AssemblyName>System.Management.Automation</AssemblyName>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Management.Automation.Internal.ParsingBaseAttribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Property | System.AttributeTargets.Field, AllowMultiple=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            Identifies parameters to Cmdlets
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ParameterAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Automation.ParameterAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Initializes a new instance of the ParameterAttribute class
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AllParameterSets">
      <MemberSignature Language="C#" Value="public const string AllParameterSets;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string AllParameterSets" />
      <MemberSignature Language="DocId" Value="F:System.Management.Automation.ParameterAttribute.AllParameterSets" />
      <MemberSignature Language="VB.NET" Value="Public Const AllParameterSets As String " />
      <MemberSignature Language="F#" Value="val mutable AllParameterSets : string" Usage="System.Management.Automation.ParameterAttribute.AllParameterSets" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            ParameterSetName referring to all ParameterSets
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DontShow">
      <MemberSignature Language="C#" Value="public bool DontShow { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DontShow" />
      <MemberSignature Language="DocId" Value="P:System.Management.Automation.ParameterAttribute.DontShow" />
      <MemberSignature Language="VB.NET" Value="Public Property DontShow As Boolean" />
      <MemberSignature Language="F#" Value="member this.DontShow : bool with get, set" Usage="System.Management.Automation.ParameterAttribute.DontShow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Indicates that this parameter should not be shown to the user in this like intellisense
            This is primarily to be used in functions that are implementing the logic for dynamic keywords.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HelpMessage">
      <MemberSignature Language="C#" Value="public string HelpMessage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HelpMessage" />
      <MemberSignature Language="DocId" Value="P:System.Management.Automation.ParameterAttribute.HelpMessage" />
      <MemberSignature Language="VB.NET" Value="Public Property HelpMessage As String" />
      <MemberSignature Language="F#" Value="member this.HelpMessage : string with get, set" Usage="System.Management.Automation.ParameterAttribute.HelpMessage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets and sets a short description for this parameter, suitable for presentation as a tool tip.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">for a null or empty value when setting</exception>
      </Docs>
    </Member>
    <Member MemberName="HelpMessageBaseName">
      <MemberSignature Language="C#" Value="public string HelpMessageBaseName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HelpMessageBaseName" />
      <MemberSignature Language="DocId" Value="P:System.Management.Automation.ParameterAttribute.HelpMessageBaseName" />
      <MemberSignature Language="VB.NET" Value="Public Property HelpMessageBaseName As String" />
      <MemberSignature Language="F#" Value="member this.HelpMessageBaseName : string with get, set" Usage="System.Management.Automation.ParameterAttribute.HelpMessageBaseName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets and sets the base name of the resource for a help message. When this field is specified,
            HelpMessageResourceId must also be specified.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">for a null or empty value when setting</exception>
      </Docs>
    </Member>
    <Member MemberName="HelpMessageResourceId">
      <MemberSignature Language="C#" Value="public string HelpMessageResourceId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HelpMessageResourceId" />
      <MemberSignature Language="DocId" Value="P:System.Management.Automation.ParameterAttribute.HelpMessageResourceId" />
      <MemberSignature Language="VB.NET" Value="Public Property HelpMessageResourceId As String" />
      <MemberSignature Language="F#" Value="member this.HelpMessageResourceId : string with get, set" Usage="System.Management.Automation.ParameterAttribute.HelpMessageResourceId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets and sets the Id of the resource for a help message. When this field is specified,
            HelpMessageBaseName must also be specified.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">for a null or empty value when setting</exception>
      </Docs>
    </Member>
    <Member MemberName="Mandatory">
      <MemberSignature Language="C#" Value="public bool Mandatory { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Mandatory" />
      <MemberSignature Language="DocId" Value="P:System.Management.Automation.ParameterAttribute.Mandatory" />
      <MemberSignature Language="VB.NET" Value="Public Property Mandatory As Boolean" />
      <MemberSignature Language="F#" Value="member this.Mandatory : bool with get, set" Usage="System.Management.Automation.ParameterAttribute.Mandatory" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets and sets a flag specifying if this parameter is Mandatory. When
            it is not specified, false is assumed and the parameter is considered optional.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParameterSetName">
      <MemberSignature Language="C#" Value="public string ParameterSetName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ParameterSetName" />
      <MemberSignature Language="DocId" Value="P:System.Management.Automation.ParameterAttribute.ParameterSetName" />
      <MemberSignature Language="VB.NET" Value="Public Property ParameterSetName As String" />
      <MemberSignature Language="F#" Value="member this.ParameterSetName : string with get, set" Usage="System.Management.Automation.ParameterAttribute.ParameterSetName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets and sets the name of the parameter set this parameter belongs to. When
            it is not specified ParameterAttribute.AllParameterSets is assumed.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Position">
      <MemberSignature Language="C#" Value="public int Position { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Position" />
      <MemberSignature Language="DocId" Value="P:System.Management.Automation.ParameterAttribute.Position" />
      <MemberSignature Language="VB.NET" Value="Public Property Position As Integer" />
      <MemberSignature Language="F#" Value="member this.Position : int with get, set" Usage="System.Management.Automation.ParameterAttribute.Position" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets and sets the parameter position. If not set, the parameter is named.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValueFromPipeline">
      <MemberSignature Language="C#" Value="public bool ValueFromPipeline { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ValueFromPipeline" />
      <MemberSignature Language="DocId" Value="P:System.Management.Automation.ParameterAttribute.ValueFromPipeline" />
      <MemberSignature Language="VB.NET" Value="Public Property ValueFromPipeline As Boolean" />
      <MemberSignature Language="F#" Value="member this.ValueFromPipeline : bool with get, set" Usage="System.Management.Automation.ParameterAttribute.ValueFromPipeline" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets and sets a flag that specifies that this parameter can take values
            from the incoming pipeline object. When it is not specified, false is assumed.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValueFromPipelineByPropertyName">
      <MemberSignature Language="C#" Value="public bool ValueFromPipelineByPropertyName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ValueFromPipelineByPropertyName" />
      <MemberSignature Language="DocId" Value="P:System.Management.Automation.ParameterAttribute.ValueFromPipelineByPropertyName" />
      <MemberSignature Language="VB.NET" Value="Public Property ValueFromPipelineByPropertyName As Boolean" />
      <MemberSignature Language="F#" Value="member this.ValueFromPipelineByPropertyName : bool with get, set" Usage="System.Management.Automation.ParameterAttribute.ValueFromPipelineByPropertyName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets and sets a flag that specifies that this parameter can take values from a property
            in the incoming pipeline object with the same name as the parameter. When it
            is not specified, false is assumed.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValueFromRemainingArguments">
      <MemberSignature Language="C#" Value="public bool ValueFromRemainingArguments { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ValueFromRemainingArguments" />
      <MemberSignature Language="DocId" Value="P:System.Management.Automation.ParameterAttribute.ValueFromRemainingArguments" />
      <MemberSignature Language="VB.NET" Value="Public Property ValueFromRemainingArguments As Boolean" />
      <MemberSignature Language="F#" Value="member this.ValueFromRemainingArguments : bool with get, set" Usage="System.Management.Automation.ParameterAttribute.ValueFromRemainingArguments" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets and sets a flag that specifies that the remaining command line parameters
            should be associated with this parameter in the form of an array. When it
            is not specified, false is assumed.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>