<Type Name="SplitOptions" FullName="System.Management.Automation.SplitOptions">
  <TypeSignature Language="C#" Value="public enum SplitOptions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed SplitOptions extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Management.Automation.SplitOptions" />
  <TypeSignature Language="VB.NET" Value="Public Enum SplitOptions" />
  <TypeSignature Language="F#" Value="type SplitOptions = " />
  <AssemblyInfo>
    <AssemblyName>System.Management.Automation</AssemblyName>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName>System.Flags</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            A enum corresponding to the options on the -split operator.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="CultureInvariant">
      <MemberSignature Language="C#" Value="CultureInvariant" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Management.Automation.SplitOptions CultureInvariant = int32(4)" />
      <MemberSignature Language="DocId" Value="F:System.Management.Automation.SplitOptions.CultureInvariant" />
      <MemberSignature Language="VB.NET" Value="CultureInvariant" />
      <MemberSignature Language="F#" Value="CultureInvariant = 4" Usage="System.Management.Automation.SplitOptions.CultureInvariant" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.SplitOptions</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary>
            CultureInvariant: Ignores cultural differences in language when evaluating the delimiter.
            Valid only with RegexMatch.
            </summary>
      </Docs>
    </Member>
    <Member MemberName="ExplicitCapture">
      <MemberSignature Language="C#" Value="ExplicitCapture" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Management.Automation.SplitOptions ExplicitCapture = int32(128)" />
      <MemberSignature Language="DocId" Value="F:System.Management.Automation.SplitOptions.ExplicitCapture" />
      <MemberSignature Language="VB.NET" Value="ExplicitCapture" />
      <MemberSignature Language="F#" Value="ExplicitCapture = 128" Usage="System.Management.Automation.SplitOptions.ExplicitCapture" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.SplitOptions</ReturnType>
      </ReturnValue>
      <MemberValue>128</MemberValue>
      <Docs>
        <summary>
            Ignores non-named match groups, so that only explicit capture groups
            are returned in the result list.
            </summary>
      </Docs>
    </Member>
    <Member MemberName="IgnoreCase">
      <MemberSignature Language="C#" Value="IgnoreCase" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Management.Automation.SplitOptions IgnoreCase = int32(64)" />
      <MemberSignature Language="DocId" Value="F:System.Management.Automation.SplitOptions.IgnoreCase" />
      <MemberSignature Language="VB.NET" Value="IgnoreCase" />
      <MemberSignature Language="F#" Value="IgnoreCase = 64" Usage="System.Management.Automation.SplitOptions.IgnoreCase" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.SplitOptions</ReturnType>
      </ReturnValue>
      <MemberValue>64</MemberValue>
      <Docs>
        <summary>
            Forces case-insensitive matching, even if -cSplit is specified.
            </summary>
      </Docs>
    </Member>
    <Member MemberName="IgnorePatternWhitespace">
      <MemberSignature Language="C#" Value="IgnorePatternWhitespace" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Management.Automation.SplitOptions IgnorePatternWhitespace = int32(8)" />
      <MemberSignature Language="DocId" Value="F:System.Management.Automation.SplitOptions.IgnorePatternWhitespace" />
      <MemberSignature Language="VB.NET" Value="IgnorePatternWhitespace" />
      <MemberSignature Language="F#" Value="IgnorePatternWhitespace = 8" Usage="System.Management.Automation.SplitOptions.IgnorePatternWhitespace" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.SplitOptions</ReturnType>
      </ReturnValue>
      <MemberValue>8</MemberValue>
      <Docs>
        <summary>
            Ignores unescaped whitespace and comments marked with #.
            Valid only with RegexMatch.
            </summary>
      </Docs>
    </Member>
    <Member MemberName="Multiline">
      <MemberSignature Language="C#" Value="Multiline" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Management.Automation.SplitOptions Multiline = int32(16)" />
      <MemberSignature Language="DocId" Value="F:System.Management.Automation.SplitOptions.Multiline" />
      <MemberSignature Language="VB.NET" Value="Multiline" />
      <MemberSignature Language="F#" Value="Multiline = 16" Usage="System.Management.Automation.SplitOptions.Multiline" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.SplitOptions</ReturnType>
      </ReturnValue>
      <MemberValue>16</MemberValue>
      <Docs>
        <summary>
            Regex multiline mode, which recognizes the start and end of lines,
            as well as the start and end of strings.
            Valid only with RegexMatch.
            Singleline is the default.
            </summary>
      </Docs>
    </Member>
    <Member MemberName="RegexMatch">
      <MemberSignature Language="C#" Value="RegexMatch" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Management.Automation.SplitOptions RegexMatch = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Management.Automation.SplitOptions.RegexMatch" />
      <MemberSignature Language="VB.NET" Value="RegexMatch" />
      <MemberSignature Language="F#" Value="RegexMatch = 2" Usage="System.Management.Automation.SplitOptions.RegexMatch" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.SplitOptions</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>
            Use regular expression matching to evaluate the delimiter.
            This is the default behavior. Cannot be used with SimpleMatch.
            </summary>
      </Docs>
    </Member>
    <Member MemberName="SimpleMatch">
      <MemberSignature Language="C#" Value="SimpleMatch" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Management.Automation.SplitOptions SimpleMatch = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Management.Automation.SplitOptions.SimpleMatch" />
      <MemberSignature Language="VB.NET" Value="SimpleMatch" />
      <MemberSignature Language="F#" Value="SimpleMatch = 1" Usage="System.Management.Automation.SplitOptions.SimpleMatch" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.SplitOptions</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>
            Use simple string comparison when evaluating the delimiter.
            Cannot be used with RegexMatch.
            </summary>
      </Docs>
    </Member>
    <Member MemberName="Singleline">
      <MemberSignature Language="C#" Value="Singleline" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Management.Automation.SplitOptions Singleline = int32(32)" />
      <MemberSignature Language="DocId" Value="F:System.Management.Automation.SplitOptions.Singleline" />
      <MemberSignature Language="VB.NET" Value="Singleline" />
      <MemberSignature Language="F#" Value="Singleline = 32" Usage="System.Management.Automation.SplitOptions.Singleline" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.SplitOptions</ReturnType>
      </ReturnValue>
      <MemberValue>32</MemberValue>
      <Docs>
        <summary>
            Regex Singleline mode, which recognizes only the start and end of strings.
            Valid only with RegexMatch.
            Singleline is the default.
            </summary>
      </Docs>
    </Member>
  </Members>
</Type>