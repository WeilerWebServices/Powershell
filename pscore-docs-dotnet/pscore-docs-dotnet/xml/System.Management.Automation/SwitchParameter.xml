<Type Name="SwitchParameter" FullName="System.Management.Automation.SwitchParameter">
  <TypeSignature Language="C#" Value="public struct SwitchParameter" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit SwitchParameter extends System.ValueType" />
  <TypeSignature Language="DocId" Value="T:System.Management.Automation.SwitchParameter" />
  <TypeSignature Language="VB.NET" Value="Public Structure SwitchParameter" />
  <TypeSignature Language="F#" Value="type SwitchParameter = struct" />
  <AssemblyInfo>
    <AssemblyName>System.Management.Automation</AssemblyName>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Type used to define a parameter on a cmdlet script of function that
            can only be used as a switch.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SwitchParameter (bool isPresent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool isPresent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Automation.SwitchParameter.#ctor(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (isPresent As Boolean)" />
      <MemberSignature Language="F#" Value="new System.Management.Automation.SwitchParameter : bool -&gt; System.Management.Automation.SwitchParameter" Usage="new System.Management.Automation.SwitchParameter isPresent" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="isPresent" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="isPresent">
            If true, it indicates that the switch is present, flase otherwise.
            </param>
        <summary>
            Construct a SwitchParameter instance with a particular value.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Automation.SwitchParameter.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="switchParameter.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">An object to compare against</param>
        <summary>
            Compare this switch parameter to another object.
            </summary>
        <returns>True if the objects are the same value.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Automation.SwitchParameter.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="switchParameter.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Returns the hash code for this switch parameter.
            </summary>
        <returns>The hash code for this cobject.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPresent">
      <MemberSignature Language="C#" Value="public bool IsPresent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPresent" />
      <MemberSignature Language="DocId" Value="P:System.Management.Automation.SwitchParameter.IsPresent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsPresent As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsPresent : bool" Usage="System.Management.Automation.SwitchParameter.IsPresent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Returns true if the parameter was specified on the command line, false otherwise.
            </summary>
        <value>True if the parameter was specified, false otherwise</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (bool first, System.Management.Automation.SwitchParameter second);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(bool first, valuetype System.Management.Automation.SwitchParameter second) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Automation.SwitchParameter.op_Equality(System.Boolean,System.Management.Automation.SwitchParameter)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (first As Boolean, second As SwitchParameter) As Boolean" />
      <MemberSignature Language="F#" Value="static member ( = ) : bool * System.Management.Automation.SwitchParameter -&gt; bool" Usage="first = second" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="first" Type="System.Boolean" />
        <Parameter Name="second" Type="System.Management.Automation.SwitchParameter" />
      </Parameters>
      <Docs>
        <param name="first">first object to compare</param>
        <param name="second">second object to compare</param>
        <summary>
            Implement the == operator for bool and switch parameters
            </summary>
        <returns>True if they are the same</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Management.Automation.SwitchParameter first, bool second);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Management.Automation.SwitchParameter first, bool second) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Automation.SwitchParameter.op_Equality(System.Management.Automation.SwitchParameter,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (first As SwitchParameter, second As Boolean) As Boolean" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.Management.Automation.SwitchParameter * bool -&gt; bool" Usage="first = second" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="first" Type="System.Management.Automation.SwitchParameter" />
        <Parameter Name="second" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="first">first object to compare</param>
        <param name="second">second object to compare</param>
        <summary>
            Implement the == operator for switch parameters and booleans.
            </summary>
        <returns>True if they are the same</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Management.Automation.SwitchParameter first, System.Management.Automation.SwitchParameter second);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Management.Automation.SwitchParameter first, valuetype System.Management.Automation.SwitchParameter second) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Automation.SwitchParameter.op_Equality(System.Management.Automation.SwitchParameter,System.Management.Automation.SwitchParameter)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (first As SwitchParameter, second As SwitchParameter) As Boolean" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.Management.Automation.SwitchParameter * System.Management.Automation.SwitchParameter -&gt; bool" Usage="first = second" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="first" Type="System.Management.Automation.SwitchParameter" />
        <Parameter Name="second" Type="System.Management.Automation.SwitchParameter" />
      </Parameters>
      <Docs>
        <param name="first">first object to compare</param>
        <param name="second">second object to compare</param>
        <summary>
            Implement the == operator for switch parameters objects.
            </summary>
        <returns>True if they are the same</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator System.Management.Automation.SwitchParameter (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Management.Automation.SwitchParameter op_Implicit(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Automation.SwitchParameter.op_Implicit(System.Boolean)~System.Management.Automation.SwitchParameter" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (value As Boolean) As SwitchParameter" />
      <MemberSignature Language="F#" Value="static member op_Implicit : bool -&gt; System.Management.Automation.SwitchParameter" Usage="System.Management.Automation.SwitchParameter.op_Implicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.SwitchParameter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">The bool to convert to SwitchParameter</param>
        <summary>
            Implicit cast operator for casting bool to SwitchParameter.
            </summary>
        <returns>The corresponding boolean value.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator bool (System.Management.Automation.SwitchParameter switchParameter);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Implicit(valuetype System.Management.Automation.SwitchParameter switchParameter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Automation.SwitchParameter.op_Implicit(System.Management.Automation.SwitchParameter)~System.Boolean" />
      <MemberSignature Language="F#" Value="static member op_Implicit : System.Management.Automation.SwitchParameter -&gt; bool" Usage="System.Management.Automation.SwitchParameter.op_Implicit switchParameter" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="switchParameter" Type="System.Management.Automation.SwitchParameter" />
      </Parameters>
      <Docs>
        <param name="switchParameter">The SwitchParameter object to convert to bool</param>
        <summary>
            Implicit cast operator for casting SwitchParameter to bool.
            </summary>
        <returns>The corresponding boolean value.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (bool first, System.Management.Automation.SwitchParameter second);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(bool first, valuetype System.Management.Automation.SwitchParameter second) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Automation.SwitchParameter.op_Inequality(System.Boolean,System.Management.Automation.SwitchParameter)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (first As Boolean, second As SwitchParameter) As Boolean" />
      <MemberSignature Language="F#" Value="static member op_Inequality : bool * System.Management.Automation.SwitchParameter -&gt; bool" Usage="System.Management.Automation.SwitchParameter.op_Inequality (first, second)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="first" Type="System.Boolean" />
        <Parameter Name="second" Type="System.Management.Automation.SwitchParameter" />
      </Parameters>
      <Docs>
        <param name="first">first object to compare</param>
        <param name="second">second object to compare</param>
        <summary>
            Implement the != operator for bool and switch parameters
            </summary>
        <returns>True if they are different</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Management.Automation.SwitchParameter first, bool second);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Management.Automation.SwitchParameter first, bool second) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Automation.SwitchParameter.op_Inequality(System.Management.Automation.SwitchParameter,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (first As SwitchParameter, second As Boolean) As Boolean" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.Management.Automation.SwitchParameter * bool -&gt; bool" Usage="System.Management.Automation.SwitchParameter.op_Inequality (first, second)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="first" Type="System.Management.Automation.SwitchParameter" />
        <Parameter Name="second" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="first">first object to compare</param>
        <param name="second">second object to compare</param>
        <summary>
            Implement the != operator for switch parameters and booleans.
            </summary>
        <returns>True if they are different</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Management.Automation.SwitchParameter first, System.Management.Automation.SwitchParameter second);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Management.Automation.SwitchParameter first, valuetype System.Management.Automation.SwitchParameter second) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Automation.SwitchParameter.op_Inequality(System.Management.Automation.SwitchParameter,System.Management.Automation.SwitchParameter)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (first As SwitchParameter, second As SwitchParameter) As Boolean" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.Management.Automation.SwitchParameter * System.Management.Automation.SwitchParameter -&gt; bool" Usage="System.Management.Automation.SwitchParameter.op_Inequality (first, second)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="first" Type="System.Management.Automation.SwitchParameter" />
        <Parameter Name="second" Type="System.Management.Automation.SwitchParameter" />
      </Parameters>
      <Docs>
        <param name="first">first object to compare</param>
        <param name="second">second object to compare</param>
        <summary>
            Implement the != operator for switch parameters
            </summary>
        <returns>True if they are different</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Present">
      <MemberSignature Language="C#" Value="public static System.Management.Automation.SwitchParameter Present { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Management.Automation.SwitchParameter Present" />
      <MemberSignature Language="DocId" Value="P:System.Management.Automation.SwitchParameter.Present" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Present As SwitchParameter" />
      <MemberSignature Language="F#" Value="member this.Present : System.Management.Automation.SwitchParameter" Usage="System.Management.Automation.SwitchParameter.Present" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.SwitchParameter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Static method that returns a instance of SwitchParameter that indicates that it is present.
            </summary>
        <value>An instance of a switch parameter that will convert to true in a boolean context</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToBool">
      <MemberSignature Language="C#" Value="public bool ToBool ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ToBool() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Automation.SwitchParameter.ToBool" />
      <MemberSignature Language="VB.NET" Value="Public Function ToBool () As Boolean" />
      <MemberSignature Language="F#" Value="member this.ToBool : unit -&gt; bool" Usage="switchParameter.ToBool " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Explicit method to convert a SwitchParameter to a boolean value.
            </summary>
        <returns>The boolean equivalent of the SwitchParameter</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Automation.SwitchParameter.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="switchParameter.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Returns the string representation for this object
            </summary>
        <returns>The string for this object.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>