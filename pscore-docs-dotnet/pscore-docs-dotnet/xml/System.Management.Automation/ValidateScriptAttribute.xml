<Type Name="ValidateScriptAttribute" FullName="System.Management.Automation.ValidateScriptAttribute">
  <TypeSignature Language="C#" Value="public sealed class ValidateScriptAttribute : System.Management.Automation.ValidateEnumeratedArgumentsAttribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ValidateScriptAttribute extends System.Management.Automation.ValidateEnumeratedArgumentsAttribute" />
  <TypeSignature Language="DocId" Value="T:System.Management.Automation.ValidateScriptAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ValidateScriptAttribute&#xA;Inherits ValidateEnumeratedArgumentsAttribute" />
  <TypeSignature Language="F#" Value="type ValidateScriptAttribute = class&#xA;    inherit ValidateEnumeratedArgumentsAttribute" />
  <AssemblyInfo>
    <AssemblyName>System.Management.Automation</AssemblyName>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Management.Automation.ValidateEnumeratedArgumentsAttribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Class for validating against a script block.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ValidateScriptAttribute (System.Management.Automation.ScriptBlock scriptBlock);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Management.Automation.ScriptBlock scriptBlock) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Automation.ValidateScriptAttribute.#ctor(System.Management.Automation.ScriptBlock)" />
      <MemberSignature Language="F#" Value="new System.Management.Automation.ValidateScriptAttribute : System.Management.Automation.ScriptBlock -&gt; System.Management.Automation.ValidateScriptAttribute" Usage="new System.Management.Automation.ValidateScriptAttribute scriptBlock" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="scriptBlock" Type="System.Management.Automation.ScriptBlock" />
      </Parameters>
      <Docs>
        <param name="scriptBlock">Scriptblock to match</param>
        <summary>
            Initializes a new instance of the ValidateScriptBlockAttribute class
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">for invalid arguments</exception>
      </Docs>
    </Member>
    <Member MemberName="ErrorMessage">
      <MemberSignature Language="C#" Value="public string ErrorMessage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ErrorMessage" />
      <MemberSignature Language="DocId" Value="P:System.Management.Automation.ValidateScriptAttribute.ErrorMessage" />
      <MemberSignature Language="VB.NET" Value="Public Property ErrorMessage As String" />
      <MemberSignature Language="F#" Value="member this.ErrorMessage : string with get, set" Usage="System.Management.Automation.ValidateScriptAttribute.ErrorMessage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
             Gets or sets the custom error message that is displayed to the user.
            
             The item being validated and the validating scriptblock is passed as the first and second
             formatting argument.
            
             <example>
             [ValidateScript("$_ % 2", ErrorMessage = "The item '{0}' did not pass validation of script '{1}'")]
             </example></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScriptBlock">
      <MemberSignature Language="C#" Value="public System.Management.Automation.ScriptBlock ScriptBlock { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Management.Automation.ScriptBlock ScriptBlock" />
      <MemberSignature Language="DocId" Value="P:System.Management.Automation.ValidateScriptAttribute.ScriptBlock" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ScriptBlock As ScriptBlock" />
      <MemberSignature Language="F#" Value="member this.ScriptBlock : System.Management.Automation.ScriptBlock" Usage="System.Management.Automation.ValidateScriptAttribute.ScriptBlock" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.ScriptBlock</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the scriptblock to be used in the validation
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateElement">
      <MemberSignature Language="C#" Value="protected override void ValidateElement (object element);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void ValidateElement(object element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Automation.ValidateScriptAttribute.ValidateElement(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub ValidateElement (element As Object)" />
      <MemberSignature Language="F#" Value="override this.ValidateElement : obj -&gt; unit" Usage="validateScriptAttribute.ValidateElement element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="element">object to validate</param>
        <summary>
            Validates that each parameter argument matches the scriptblock
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Management.Automation.ValidationMetadataException">if <paramref name="element" /> is invalid</exception>
      </Docs>
    </Member>
  </Members>
</Type>