<Type Name="CommandTypes" FullName="System.Management.Automation.CommandTypes">
  <TypeSignature Language="C#" Value="public enum CommandTypes" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed CommandTypes extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Management.Automation.CommandTypes" />
  <TypeSignature Language="VB.NET" Value="Public Enum CommandTypes" />
  <TypeSignature Language="F#" Value="type CommandTypes = " />
  <AssemblyInfo>
    <AssemblyName>System.Management.Automation</AssemblyName>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName>System.Flags</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            Defines the types of commands that MSH can execute
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Alias">
      <MemberSignature Language="C#" Value="Alias" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Management.Automation.CommandTypes Alias = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Management.Automation.CommandTypes.Alias" />
      <MemberSignature Language="VB.NET" Value="Alias" />
      <MemberSignature Language="F#" Value="Alias = 1" Usage="System.Management.Automation.CommandTypes.Alias" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.CommandTypes</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>
             Aliases create a name that refers to other command types
             </summary>
        <remarks>
             Aliases are only persisted within the execution of a single engine.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="All">
      <MemberSignature Language="C#" Value="All" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Management.Automation.CommandTypes All = int32(511)" />
      <MemberSignature Language="DocId" Value="F:System.Management.Automation.CommandTypes.All" />
      <MemberSignature Language="VB.NET" Value="All" />
      <MemberSignature Language="F#" Value="All = 511" Usage="System.Management.Automation.CommandTypes.All" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.CommandTypes</ReturnType>
      </ReturnValue>
      <MemberValue>511</MemberValue>
      <Docs>
        <summary>
             All possible command types.
             </summary>
        <remarks>
             Note, a CommandInfo instance will never specify
             All as its CommandType but All can be used when filtering the CommandTypes.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="Application" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Management.Automation.CommandTypes Application = int32(32)" />
      <MemberSignature Language="DocId" Value="F:System.Management.Automation.CommandTypes.Application" />
      <MemberSignature Language="VB.NET" Value="Application" />
      <MemberSignature Language="F#" Value="Application = 32" Usage="System.Management.Automation.CommandTypes.Application" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.CommandTypes</ReturnType>
      </ReturnValue>
      <MemberValue>32</MemberValue>
      <Docs>
        <summary>
             Any existing application (can be console or GUI).
             </summary>
        <remarks>
             An application can have any extension that can be executed either directly through CreateProcess
             or indirectly through ShellExecute.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="Cmdlet">
      <MemberSignature Language="C#" Value="Cmdlet" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Management.Automation.CommandTypes Cmdlet = int32(8)" />
      <MemberSignature Language="DocId" Value="F:System.Management.Automation.CommandTypes.Cmdlet" />
      <MemberSignature Language="VB.NET" Value="Cmdlet" />
      <MemberSignature Language="F#" Value="Cmdlet = 8" Usage="System.Management.Automation.CommandTypes.Cmdlet" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.CommandTypes</ReturnType>
      </ReturnValue>
      <MemberValue>8</MemberValue>
      <Docs>
        <summary>
            A cmdlet.
            </summary>
      </Docs>
    </Member>
    <Member MemberName="Configuration">
      <MemberSignature Language="C#" Value="Configuration" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Management.Automation.CommandTypes Configuration = int32(256)" />
      <MemberSignature Language="DocId" Value="F:System.Management.Automation.CommandTypes.Configuration" />
      <MemberSignature Language="VB.NET" Value="Configuration" />
      <MemberSignature Language="F#" Value="Configuration = 256" Usage="System.Management.Automation.CommandTypes.Configuration" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.CommandTypes</ReturnType>
      </ReturnValue>
      <MemberValue>256</MemberValue>
      <Docs>
        <summary>
            A Configuration
            </summary>
      </Docs>
    </Member>
    <Member MemberName="ExternalScript">
      <MemberSignature Language="C#" Value="ExternalScript" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Management.Automation.CommandTypes ExternalScript = int32(16)" />
      <MemberSignature Language="DocId" Value="F:System.Management.Automation.CommandTypes.ExternalScript" />
      <MemberSignature Language="VB.NET" Value="ExternalScript" />
      <MemberSignature Language="F#" Value="ExternalScript = 16" Usage="System.Management.Automation.CommandTypes.ExternalScript" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.CommandTypes</ReturnType>
      </ReturnValue>
      <MemberValue>16</MemberValue>
      <Docs>
        <summary>
            An MSH script (*.ps1 file)
            </summary>
      </Docs>
    </Member>
    <Member MemberName="Filter">
      <MemberSignature Language="C#" Value="Filter" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Management.Automation.CommandTypes Filter = int32(4)" />
      <MemberSignature Language="DocId" Value="F:System.Management.Automation.CommandTypes.Filter" />
      <MemberSignature Language="VB.NET" Value="Filter" />
      <MemberSignature Language="F#" Value="Filter = 4" Usage="System.Management.Automation.CommandTypes.Filter" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.CommandTypes</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary>
             Script filters that are defined by a script block.
             </summary>
        <remarks>
             Filters are only persisted within the execution of a single engine.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="Function">
      <MemberSignature Language="C#" Value="Function" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Management.Automation.CommandTypes Function = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Management.Automation.CommandTypes.Function" />
      <MemberSignature Language="VB.NET" Value="Function" />
      <MemberSignature Language="F#" Value="Function = 2" Usage="System.Management.Automation.CommandTypes.Function" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.CommandTypes</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>
             Script functions that are defined by a script block
             </summary>
        <remarks>
             Functions are only persisted within the execution of a single engine.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="Script">
      <MemberSignature Language="C#" Value="Script" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Management.Automation.CommandTypes Script = int32(64)" />
      <MemberSignature Language="DocId" Value="F:System.Management.Automation.CommandTypes.Script" />
      <MemberSignature Language="VB.NET" Value="Script" />
      <MemberSignature Language="F#" Value="Script = 64" Usage="System.Management.Automation.CommandTypes.Script" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.CommandTypes</ReturnType>
      </ReturnValue>
      <MemberValue>64</MemberValue>
      <Docs>
        <summary>
            A script that is built into the runspace configuration
            </summary>
      </Docs>
    </Member>
    <Member MemberName="Workflow">
      <MemberSignature Language="C#" Value="Workflow" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Management.Automation.CommandTypes Workflow = int32(128)" />
      <MemberSignature Language="DocId" Value="F:System.Management.Automation.CommandTypes.Workflow" />
      <MemberSignature Language="VB.NET" Value="Workflow" />
      <MemberSignature Language="F#" Value="Workflow = 128" Usage="System.Management.Automation.CommandTypes.Workflow" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.CommandTypes</ReturnType>
      </ReturnValue>
      <MemberValue>128</MemberValue>
      <Docs>
        <summary>
            A workflow
            </summary>
      </Docs>
    </Member>
  </Members>
</Type>