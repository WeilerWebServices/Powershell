<Type Name="PSMemberInfo" FullName="System.Management.Automation.PSMemberInfo">
  <TypeSignature Language="C#" Value="public abstract class PSMemberInfo" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit PSMemberInfo extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Management.Automation.PSMemberInfo" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class PSMemberInfo" />
  <TypeSignature Language="F#" Value="type PSMemberInfo = class" />
  <AssemblyInfo>
    <AssemblyName>System.Management.Automation</AssemblyName>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Serves as the base class for all members of an PSObject
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PSMemberInfo ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Automation.PSMemberInfo.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Initializes a new instance of an PSMemberInfo derived class
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public abstract System.Management.Automation.PSMemberInfo Copy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Management.Automation.PSMemberInfo Copy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Automation.PSMemberInfo.Copy" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Copy () As PSMemberInfo" />
      <MemberSignature Language="F#" Value="abstract member Copy : unit -&gt; System.Management.Automation.PSMemberInfo" Usage="pSMemberInfo.Copy " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.PSMemberInfo</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            returns a new PSMemberInfo that is a copy of this PSMemberInfo
            </summary>
        <returns>a new PSMemberInfo that is a copy of this PSMemberInfo</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInstance">
      <MemberSignature Language="C#" Value="public bool IsInstance { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsInstance" />
      <MemberSignature Language="DocId" Value="P:System.Management.Automation.PSMemberInfo.IsInstance" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsInstance As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsInstance : bool" Usage="System.Management.Automation.PSMemberInfo.IsInstance" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            True if this member has been added to the instance as opposed to
            coming from the adapter or from type data
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MemberType">
      <MemberSignature Language="C#" Value="public abstract System.Management.Automation.PSMemberTypes MemberType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Management.Automation.PSMemberTypes MemberType" />
      <MemberSignature Language="DocId" Value="P:System.Management.Automation.PSMemberInfo.MemberType" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property MemberType As PSMemberTypes" />
      <MemberSignature Language="F#" Value="member this.MemberType : System.Management.Automation.PSMemberTypes" Usage="System.Management.Automation.PSMemberInfo.MemberType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.PSMemberTypes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the member type
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Management.Automation.PSMemberInfo.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Management.Automation.PSMemberInfo.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the member name
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetMemberName">
      <MemberSignature Language="C#" Value="protected void SetMemberName (string name);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetMemberName(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Automation.PSMemberInfo.SetMemberName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SetMemberName (name As String)" />
      <MemberSignature Language="F#" Value="member this.SetMemberName : string -&gt; unit" Usage="pSMemberInfo.SetMemberName name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"></param>
        <summary>
            Allows a derived class to set the member name...
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeNameOfValue">
      <MemberSignature Language="C#" Value="public abstract string TypeNameOfValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TypeNameOfValue" />
      <MemberSignature Language="DocId" Value="P:System.Management.Automation.PSMemberInfo.TypeNameOfValue" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property TypeNameOfValue As String" />
      <MemberSignature Language="F#" Value="member this.TypeNameOfValue : string" Usage="System.Management.Automation.PSMemberInfo.TypeNameOfValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the type of the value for this member
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Management.Automation.ExtendedTypeSystemException">When there was a problem getting the property</exception>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public abstract object Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Value" />
      <MemberSignature Language="DocId" Value="P:System.Management.Automation.PSMemberInfo.Value" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Property Value As Object" />
      <MemberSignature Language="F#" Value="member this.Value : obj with get, set" Usage="System.Management.Automation.PSMemberInfo.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets and Sets the value of this member
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Management.Automation.GetValueException">When getting the value of a property throws an exception.
            This exception is also thrown if the property is an <see cref="T:System.Management.Automation.PSScriptProperty" /> and there
            is no Runspace to run the script.</exception>
        <exception cref="T:System.Management.Automation.SetValueException">When setting the value of a property throws an exception.
            This exception is also thrown if the property is an <see cref="T:System.Management.Automation.PSScriptProperty" /> and there
            is no Runspace to run the script.</exception>
        <exception cref="T:System.Management.Automation.ExtendedTypeSystemException">When some problem other then getting/setting the value happened</exception>
      </Docs>
    </Member>
  </Members>
</Type>