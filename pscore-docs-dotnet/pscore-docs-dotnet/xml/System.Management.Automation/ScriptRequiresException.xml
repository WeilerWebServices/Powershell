<Type Name="ScriptRequiresException" FullName="System.Management.Automation.ScriptRequiresException">
  <TypeSignature Language="C#" Value="public class ScriptRequiresException : System.Management.Automation.RuntimeException" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit ScriptRequiresException extends System.Management.Automation.RuntimeException" />
  <TypeSignature Language="DocId" Value="T:System.Management.Automation.ScriptRequiresException" />
  <TypeSignature Language="VB.NET" Value="Public Class ScriptRequiresException&#xA;Inherits RuntimeException" />
  <TypeSignature Language="F#" Value="type ScriptRequiresException = class&#xA;    inherit RuntimeException" />
  <AssemblyInfo>
    <AssemblyName>System.Management.Automation</AssemblyName>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Management.Automation.RuntimeException</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Defines the exception thrown when a script's requirements to run specified by the #requires
            statements are not met.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ScriptRequiresException ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Automation.ScriptRequiresException.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Constructs an PSVersionNotCompatibleException
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ScriptRequiresException (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Automation.ScriptRequiresException.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String)" />
      <MemberSignature Language="F#" Value="new System.Management.Automation.ScriptRequiresException : string -&gt; System.Management.Automation.ScriptRequiresException" Usage="new System.Management.Automation.ScriptRequiresException message" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
             The message used in the exception.
             </param>
        <summary>
             Constructs an PSVersionNotCompatibleException
             </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ScriptRequiresException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Automation.ScriptRequiresException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="F#" Value="new System.Management.Automation.ScriptRequiresException : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; System.Management.Automation.ScriptRequiresException" Usage="new System.Management.Automation.ScriptRequiresException (info, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">
             serialization information
             </param>
        <param name="context">
             streaming context
             </param>
        <summary>
             Constructs an PSVersionNotCompatibleException using serialized data.
             </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ScriptRequiresException (string message, Exception innerException);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, class System.Exception innerException) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Automation.ScriptRequiresException.#ctor(System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, innerException As Exception)" />
      <MemberSignature Language="F#" Value="new System.Management.Automation.ScriptRequiresException : string * Exception -&gt; System.Management.Automation.ScriptRequiresException" Usage="new System.Management.Automation.ScriptRequiresException (message, innerException)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="innerException" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="message">
             The message used in the exception.
             </param>
        <param name="innerException">
             The exception that led to this exception.
             </param>
        <summary>
             Constructs an PSVersionNotCompatibleException
             </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandName">
      <MemberSignature Language="C#" Value="public string CommandName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CommandName" />
      <MemberSignature Language="DocId" Value="P:System.Management.Automation.ScriptRequiresException.CommandName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CommandName As String" />
      <MemberSignature Language="F#" Value="member this.CommandName : string" Usage="System.Management.Automation.ScriptRequiresException.CommandName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the name of the script that contained the #requires statement.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="public override void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Automation.ScriptRequiresException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub GetObjectData (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="F#" Value="override this.GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="scriptRequiresException.GetObjectData (info, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">
             serialization information
             </param>
        <param name="context">
             streaming context
             </param>
        <summary>
             Gets the serialized data for the exception.
             </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MissingPSSnapIns">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;string&gt; MissingPSSnapIns { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;string&gt; MissingPSSnapIns" />
      <MemberSignature Language="DocId" Value="P:System.Management.Automation.ScriptRequiresException.MissingPSSnapIns" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MissingPSSnapIns As ReadOnlyCollection(Of String)" />
      <MemberSignature Language="F#" Value="member this.MissingPSSnapIns : System.Collections.ObjectModel.ReadOnlyCollection&lt;string&gt;" Usage="System.Management.Automation.ScriptRequiresException.MissingPSSnapIns" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the missing snap-ins that the script requires
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiresPSVersion">
      <MemberSignature Language="C#" Value="public Version RequiresPSVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Version RequiresPSVersion" />
      <MemberSignature Language="DocId" Value="P:System.Management.Automation.ScriptRequiresException.RequiresPSVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RequiresPSVersion As Version" />
      <MemberSignature Language="F#" Value="member this.RequiresPSVersion : Version" Usage="System.Management.Automation.ScriptRequiresException.RequiresPSVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Version</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the PSVersion that the script requires
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiresShellId">
      <MemberSignature Language="C#" Value="public string RequiresShellId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RequiresShellId" />
      <MemberSignature Language="DocId" Value="P:System.Management.Automation.ScriptRequiresException.RequiresShellId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RequiresShellId As String" />
      <MemberSignature Language="F#" Value="member this.RequiresShellId : string" Usage="System.Management.Automation.ScriptRequiresException.RequiresShellId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the ID of the shell.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiresShellPath">
      <MemberSignature Language="C#" Value="public string RequiresShellPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RequiresShellPath" />
      <MemberSignature Language="DocId" Value="P:System.Management.Automation.ScriptRequiresException.RequiresShellPath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RequiresShellPath As String" />
      <MemberSignature Language="F#" Value="member this.RequiresShellPath : string" Usage="System.Management.Automation.ScriptRequiresException.RequiresShellPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the path to the incompatible shell
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>