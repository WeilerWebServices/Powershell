<Type Name="RemoteException" FullName="System.Management.Automation.RemoteException">
  <TypeSignature Language="C#" Value="public class RemoteException : System.Management.Automation.RuntimeException" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit RemoteException extends System.Management.Automation.RuntimeException" />
  <TypeSignature Language="DocId" Value="T:System.Management.Automation.RemoteException" />
  <TypeSignature Language="VB.NET" Value="Public Class RemoteException&#xA;Inherits RuntimeException" />
  <TypeSignature Language="F#" Value="type RemoteException = class&#xA;    inherit RuntimeException" />
  <AssemblyInfo>
    <AssemblyName>System.Management.Automation</AssemblyName>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Management.Automation.RuntimeException</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Exception used to wrap the error coming from
            remote instance of Msh.
            </summary>
    <remarks>
            This remote instance of Msh can be in a separate process,
            appdomain or machine.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RemoteException ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Automation.RemoteException.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Initializes a new instance of RemoteException
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RemoteException (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Automation.RemoteException.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String)" />
      <MemberSignature Language="F#" Value="new System.Management.Automation.RemoteException : string -&gt; System.Management.Automation.RemoteException" Usage="new System.Management.Automation.RemoteException message" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
            The message that describes the error.
            </param>
        <summary>
            Initializes a new instance of RemoteException with a specified error message.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected RemoteException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Automation.RemoteException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="F#" Value="new System.Management.Automation.RemoteException : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; System.Management.Automation.RemoteException" Usage="new System.Management.Automation.RemoteException (info, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">
            The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object
            data about the exception being thrown.
            </param>
        <param name="context">
            The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information
            about the source or destination.
            </param>
        <summary>
            Initializes a new instance of the <see cref="T:System.Management.Automation.RemoteException" />
             class with serialized data.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RemoteException (string message, Exception innerException);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, class System.Exception innerException) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Automation.RemoteException.#ctor(System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, innerException As Exception)" />
      <MemberSignature Language="F#" Value="new System.Management.Automation.RemoteException : string * Exception -&gt; System.Management.Automation.RemoteException" Usage="new System.Management.Automation.RemoteException (message, innerException)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="innerException" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="message">
            The message that describes the error.
            </param>
        <param name="innerException">
            The exception that is the cause of the current exception.
            </param>
        <summary>
            Initializes a new instance of the RemoteException class
            with a specified error message and a reference to the inner exception
            that is the cause of this exception.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ErrorRecord">
      <MemberSignature Language="C#" Value="public override System.Management.Automation.ErrorRecord ErrorRecord { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Management.Automation.ErrorRecord ErrorRecord" />
      <MemberSignature Language="DocId" Value="P:System.Management.Automation.RemoteException.ErrorRecord" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ErrorRecord As ErrorRecord" />
      <MemberSignature Language="F#" Value="member this.ErrorRecord : System.Management.Automation.ErrorRecord" Usage="System.Management.Automation.RemoteException.ErrorRecord" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.ErrorRecord</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            ErrorRecord associated with the exception
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SerializedRemoteException">
      <MemberSignature Language="C#" Value="public System.Management.Automation.PSObject SerializedRemoteException { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Management.Automation.PSObject SerializedRemoteException" />
      <MemberSignature Language="DocId" Value="P:System.Management.Automation.RemoteException.SerializedRemoteException" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SerializedRemoteException As PSObject" />
      <MemberSignature Language="F#" Value="member this.SerializedRemoteException : System.Management.Automation.PSObject" Usage="System.Management.Automation.RemoteException.SerializedRemoteException" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.PSObject</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Original Serialized Exception from remote msh
            </summary>
        <value>To be added.</value>
        <remarks>This is the exception which was thrown in remote.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="SerializedRemoteInvocationInfo">
      <MemberSignature Language="C#" Value="public System.Management.Automation.PSObject SerializedRemoteInvocationInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Management.Automation.PSObject SerializedRemoteInvocationInfo" />
      <MemberSignature Language="DocId" Value="P:System.Management.Automation.RemoteException.SerializedRemoteInvocationInfo" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SerializedRemoteInvocationInfo As PSObject" />
      <MemberSignature Language="F#" Value="member this.SerializedRemoteInvocationInfo : System.Management.Automation.PSObject" Usage="System.Management.Automation.RemoteException.SerializedRemoteInvocationInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.PSObject</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            InvocationInfo, if any, associated with the SerializedRemoteException.
            </summary>
        <value>To be added.</value>
        <remarks>
            This is the serialized InvocationInfo from the remote msh.
            </remarks>
      </Docs>
    </Member>
  </Members>
</Type>