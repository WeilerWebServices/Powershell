<Type Name="ListControl" FullName="System.Management.Automation.ListControl">
  <TypeSignature Language="C#" Value="public sealed class ListControl : System.Management.Automation.PSControl" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ListControl extends System.Management.Automation.PSControl" />
  <TypeSignature Language="DocId" Value="T:System.Management.Automation.ListControl" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ListControl&#xA;Inherits PSControl" />
  <TypeSignature Language="F#" Value="type ListControl = class&#xA;    inherit PSControl" />
  <AssemblyInfo>
    <AssemblyName>System.Management.Automation</AssemblyName>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Management.Automation.PSControl</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Defines a list control
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ListControl ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Automation.ListControl.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initiate an instance of ListControl</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ListControl (System.Collections.Generic.IEnumerable&lt;System.Management.Automation.ListControlEntry&gt; entries);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;class System.Management.Automation.ListControlEntry&gt; entries) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Automation.ListControl.#ctor(System.Collections.Generic.IEnumerable{System.Management.Automation.ListControlEntry})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (entries As IEnumerable(Of ListControlEntry))" />
      <MemberSignature Language="F#" Value="new System.Management.Automation.ListControl : seq&lt;System.Management.Automation.ListControlEntry&gt; -&gt; System.Management.Automation.ListControl" Usage="new System.Management.Automation.ListControl entries" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="entries" Type="System.Collections.Generic.IEnumerable&lt;System.Management.Automation.ListControlEntry&gt;" />
      </Parameters>
      <Docs>
        <param name="entries">To be added.</param>
        <summary>Public constructor for ListControl</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Management.Automation.ListControlBuilder Create (bool outOfBand = false);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Management.Automation.ListControlBuilder Create(bool outOfBand) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Automation.ListControl.Create(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (Optional outOfBand As Boolean = false) As ListControlBuilder" />
      <MemberSignature Language="F#" Value="static member Create : bool -&gt; System.Management.Automation.ListControlBuilder" Usage="System.Management.Automation.ListControl.Create outOfBand" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.ListControlBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="outOfBand" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="outOfBand">To be added.</param>
        <summary />
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Entries">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.List&lt;System.Management.Automation.ListControlEntry&gt; Entries { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.List`1&lt;class System.Management.Automation.ListControlEntry&gt; Entries" />
      <MemberSignature Language="DocId" Value="P:System.Management.Automation.ListControl.Entries" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Entries As List(Of ListControlEntry)" />
      <MemberSignature Language="F#" Value="member this.Entries : System.Collections.Generic.List&lt;System.Management.Automation.ListControlEntry&gt;" Usage="System.Management.Automation.ListControl.Entries" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.List&lt;System.Management.Automation.ListControlEntry&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Entries in this list control</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>