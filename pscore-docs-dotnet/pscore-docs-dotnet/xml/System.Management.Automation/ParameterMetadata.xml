<Type Name="ParameterMetadata" FullName="System.Management.Automation.ParameterMetadata">
  <TypeSignature Language="C#" Value="public sealed class ParameterMetadata" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ParameterMetadata extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Management.Automation.ParameterMetadata" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ParameterMetadata" />
  <TypeSignature Language="F#" Value="type ParameterMetadata = class" />
  <AssemblyInfo>
    <AssemblyName>System.Management.Automation</AssemblyName>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            This class represents the compiled metadata for a parameter.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ParameterMetadata (System.Management.Automation.ParameterMetadata other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Management.Automation.ParameterMetadata other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Automation.ParameterMetadata.#ctor(System.Management.Automation.ParameterMetadata)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (other As ParameterMetadata)" />
      <MemberSignature Language="F#" Value="new System.Management.Automation.ParameterMetadata : System.Management.Automation.ParameterMetadata -&gt; System.Management.Automation.ParameterMetadata" Usage="new System.Management.Automation.ParameterMetadata other" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="other" Type="System.Management.Automation.ParameterMetadata" />
      </Parameters>
      <Docs>
        <param name="other">object to copy</param>
        <summary>
            A copy constructor that creates a deep copy of the <paramref name="other" /> ParameterMetadata object.
            Instances of Attribute and Type classes are copied by reference.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ParameterMetadata (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Automation.ParameterMetadata.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String)" />
      <MemberSignature Language="F#" Value="new System.Management.Automation.ParameterMetadata : string -&gt; System.Management.Automation.ParameterMetadata" Usage="new System.Management.Automation.ParameterMetadata name" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
            Name of the parameter.
            </param>
        <summary>
            Constructs a ParameterMetadata instance.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
            name is null.
            </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ParameterMetadata (string name, Type parameterType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, class System.Type parameterType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Automation.ParameterMetadata.#ctor(System.String,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, parameterType As Type)" />
      <MemberSignature Language="F#" Value="new System.Management.Automation.ParameterMetadata : string * Type -&gt; System.Management.Automation.ParameterMetadata" Usage="new System.Management.Automation.ParameterMetadata (name, parameterType)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="parameterType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="name">
            Name of the parameter.
            </param>
        <param name="parameterType">
            Type of the parameter.
            </param>
        <summary>
            Constructs a ParameterMetadata instance.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
            name is null.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Aliases">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;string&gt; Aliases { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.Collection`1&lt;string&gt; Aliases" />
      <MemberSignature Language="DocId" Value="P:System.Management.Automation.ParameterMetadata.Aliases" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Aliases As Collection(Of String)" />
      <MemberSignature Language="F#" Value="member this.Aliases : System.Collections.ObjectModel.Collection&lt;string&gt;" Usage="System.Management.Automation.ParameterMetadata.Aliases" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Specifies the alias names for this parameter
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Attributes">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;Attribute&gt; Attributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.Collection`1&lt;class System.Attribute&gt; Attributes" />
      <MemberSignature Language="DocId" Value="P:System.Management.Automation.ParameterMetadata.Attributes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Attributes As Collection(Of Attribute)" />
      <MemberSignature Language="F#" Value="member this.Attributes : System.Collections.ObjectModel.Collection&lt;Attribute&gt;" Usage="System.Management.Automation.ParameterMetadata.Attributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.Attribute&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            A collection of the attributes found on the member.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetParameterMetadata">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.Dictionary&lt;string,System.Management.Automation.ParameterMetadata&gt; GetParameterMetadata (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.Dictionary`2&lt;string, class System.Management.Automation.ParameterMetadata&gt; GetParameterMetadata(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Automation.ParameterMetadata.GetParameterMetadata(System.Type)" />
      <MemberSignature Language="F#" Value="static member GetParameterMetadata : Type -&gt; System.Collections.Generic.Dictionary&lt;string, System.Management.Automation.ParameterMetadata&gt;" Usage="System.Management.Automation.ParameterMetadata.GetParameterMetadata type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.Dictionary&lt;System.String,System.Management.Automation.ParameterMetadata&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">
            CLR Type for which the parameter metadata is constructed.
            </param>
        <summary>
            Gets a dictionary of parameter metadata for the supplied <paramref name="type" />.
            </summary>
        <returns>
            A Dictionary of ParameterMetadata keyed by parameter name.
            null if no parameter metadata is found.
            </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
            type is null.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="IsDynamic">
      <MemberSignature Language="C#" Value="public bool IsDynamic { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDynamic" />
      <MemberSignature Language="DocId" Value="P:System.Management.Automation.ParameterMetadata.IsDynamic" />
      <MemberSignature Language="VB.NET" Value="Public Property IsDynamic As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsDynamic : bool with get, set" Usage="System.Management.Automation.ParameterMetadata.IsDynamic" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Specifies if the parameter is Dynamic
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Management.Automation.ParameterMetadata.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Management.Automation.ParameterMetadata.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
             Gets the name of the parameter
             </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParameterSets">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.Dictionary&lt;string,System.Management.Automation.ParameterSetMetadata&gt; ParameterSets { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.Dictionary`2&lt;string, class System.Management.Automation.ParameterSetMetadata&gt; ParameterSets" />
      <MemberSignature Language="DocId" Value="P:System.Management.Automation.ParameterMetadata.ParameterSets" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ParameterSets As Dictionary(Of String, ParameterSetMetadata)" />
      <MemberSignature Language="F#" Value="member this.ParameterSets : System.Collections.Generic.Dictionary&lt;string, System.Management.Automation.ParameterSetMetadata&gt;" Usage="System.Management.Automation.ParameterMetadata.ParameterSets" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.Dictionary&lt;System.String,System.Management.Automation.ParameterSetMetadata&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the ParameterSets metadata that this parameter belongs to.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParameterType">
      <MemberSignature Language="C#" Value="public Type ParameterType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ParameterType" />
      <MemberSignature Language="DocId" Value="P:System.Management.Automation.ParameterMetadata.ParameterType" />
      <MemberSignature Language="VB.NET" Value="Public Property ParameterType As Type" />
      <MemberSignature Language="F#" Value="member this.ParameterType : Type with get, set" Usage="System.Management.Automation.ParameterMetadata.ParameterType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the Type information of the Parameter.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SwitchParameter">
      <MemberSignature Language="C#" Value="public bool SwitchParameter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SwitchParameter" />
      <MemberSignature Language="DocId" Value="P:System.Management.Automation.ParameterMetadata.SwitchParameter" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SwitchParameter As Boolean" />
      <MemberSignature Language="F#" Value="member this.SwitchParameter : bool" Usage="System.Management.Automation.ParameterMetadata.SwitchParameter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Specifies if the parameter is a SwitchParameter
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>