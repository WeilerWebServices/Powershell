<Type Name="ContainerParentJob" FullName="System.Management.Automation.ContainerParentJob">
  <TypeSignature Language="C#" Value="public sealed class ContainerParentJob : System.Management.Automation.Job2" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ContainerParentJob extends System.Management.Automation.Job2" />
  <TypeSignature Language="DocId" Value="T:System.Management.Automation.ContainerParentJob" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ContainerParentJob&#xA;Inherits Job2" />
  <TypeSignature Language="F#" Value="type ContainerParentJob = class&#xA;    inherit Job2" />
  <AssemblyInfo>
    <AssemblyName>System.Management.Automation</AssemblyName>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Management.Automation.Job2</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Top level container job
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ContainerParentJob (string command);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string command) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Automation.ContainerParentJob.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (command As String)" />
      <MemberSignature Language="F#" Value="new System.Management.Automation.ContainerParentJob : string -&gt; System.Management.Automation.ContainerParentJob" Usage="new System.Management.Automation.ContainerParentJob command" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="command" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="command">Command string</param>
        <summary>
            Create a container parent job with the
            specified command string
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ContainerParentJob (string command, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string command, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Automation.ContainerParentJob.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (command As String, name As String)" />
      <MemberSignature Language="F#" Value="new System.Management.Automation.ContainerParentJob : string * string -&gt; System.Management.Automation.ContainerParentJob" Usage="new System.Management.Automation.ContainerParentJob (command, name)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="command" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="command">command string</param>
        <param name="name">friendly name for display</param>
        <summary>
            Create a container parent job with the
            specified command string and name
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ContainerParentJob (string command, string name, Guid instanceId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string command, string name, valuetype System.Guid instanceId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Automation.ContainerParentJob.#ctor(System.String,System.String,System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (command As String, name As String, instanceId As Guid)" />
      <MemberSignature Language="F#" Value="new System.Management.Automation.ContainerParentJob : string * string * Guid -&gt; System.Management.Automation.ContainerParentJob" Usage="new System.Management.Automation.ContainerParentJob (command, name, instanceId)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="command" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="instanceId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="command">Command string</param>
        <param name="name">Friendly name for the job</param>
        <param name="instanceId">Instance ID to allow job identification across sessions.</param>
        <summary>
            Create a container parent job with the
            specified command string
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ContainerParentJob (string command, string name, System.Management.Automation.JobIdentifier jobId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string command, string name, class System.Management.Automation.JobIdentifier jobId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Automation.ContainerParentJob.#ctor(System.String,System.String,System.Management.Automation.JobIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (command As String, name As String, jobId As JobIdentifier)" />
      <MemberSignature Language="F#" Value="new System.Management.Automation.ContainerParentJob : string * string * System.Management.Automation.JobIdentifier -&gt; System.Management.Automation.ContainerParentJob" Usage="new System.Management.Automation.ContainerParentJob (command, name, jobId)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="command" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="jobId" Type="System.Management.Automation.JobIdentifier" />
      </Parameters>
      <Docs>
        <param name="command">Command string</param>
        <param name="name">Friendly name for the job</param>
        <param name="jobId">JobIdentifier token that allows reuse of an Id and Instance Id</param>
        <summary>
            Create a container parent job with the
            specified command string
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ContainerParentJob (string command, string name, string jobType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string command, string name, string jobType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Automation.ContainerParentJob.#ctor(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (command As String, name As String, jobType As String)" />
      <MemberSignature Language="F#" Value="new System.Management.Automation.ContainerParentJob : string * string * string -&gt; System.Management.Automation.ContainerParentJob" Usage="new System.Management.Automation.ContainerParentJob (command, name, jobType)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="command" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="jobType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="command">Command string</param>
        <param name="name">Friendly name for the job</param>
        <param name="jobType">Job type name</param>
        <summary>
            Create a container parent job with the specified command, name,
            job type strings.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ContainerParentJob (string command, string name, Guid instanceId, string jobType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string command, string name, valuetype System.Guid instanceId, string jobType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Automation.ContainerParentJob.#ctor(System.String,System.String,System.Guid,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (command As String, name As String, instanceId As Guid, jobType As String)" />
      <MemberSignature Language="F#" Value="new System.Management.Automation.ContainerParentJob : string * string * Guid * string -&gt; System.Management.Automation.ContainerParentJob" Usage="new System.Management.Automation.ContainerParentJob (command, name, instanceId, jobType)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="command" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="instanceId" Type="System.Guid" />
        <Parameter Name="jobType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="command">Command string</param>
        <param name="name">Friendly name for the job</param>
        <param name="instanceId">Instance ID to allow job identification across sessions.</param>
        <param name="jobType">Job type name</param>
        <summary>
            Create a container parent job with the
            specified command string
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ContainerParentJob (string command, string name, System.Management.Automation.JobIdentifier jobId, string jobType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string command, string name, class System.Management.Automation.JobIdentifier jobId, string jobType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Automation.ContainerParentJob.#ctor(System.String,System.String,System.Management.Automation.JobIdentifier,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (command As String, name As String, jobId As JobIdentifier, jobType As String)" />
      <MemberSignature Language="F#" Value="new System.Management.Automation.ContainerParentJob : string * string * System.Management.Automation.JobIdentifier * string -&gt; System.Management.Automation.ContainerParentJob" Usage="new System.Management.Automation.ContainerParentJob (command, name, jobId, jobType)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="command" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="jobId" Type="System.Management.Automation.JobIdentifier" />
        <Parameter Name="jobType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="command">Command string</param>
        <param name="name">Friendly name for the job</param>
        <param name="jobId">JobIdentifier token that allows reuse of an Id and Instance Id</param>
        <param name="jobType">Job type name</param>
        <summary>
            Create a container parent job with the
            specified command string
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddChildJob">
      <MemberSignature Language="C#" Value="public void AddChildJob (System.Management.Automation.Job2 childJob);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddChildJob(class System.Management.Automation.Job2 childJob) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Automation.ContainerParentJob.AddChildJob(System.Management.Automation.Job2)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddChildJob (childJob As Job2)" />
      <MemberSignature Language="F#" Value="member this.AddChildJob : System.Management.Automation.Job2 -&gt; unit" Usage="containerParentJob.AddChildJob childJob" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="childJob" Type="System.Management.Automation.Job2" />
      </Parameters>
      <Docs>
        <param name="childJob">child job to add</param>
        <summary>
            Add a child job to the parent job
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">Thrown if the job is disposed.</exception>
        <exception cref="T:System.ArgumentNullException">Thrown if child being added is null.</exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Automation.ContainerParentJob.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="containerParentJob.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
            if true, release all the managed objects.
            </param>
        <summary>
            Release all the resources.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasMoreData">
      <MemberSignature Language="C#" Value="public override bool HasMoreData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasMoreData" />
      <MemberSignature Language="DocId" Value="P:System.Management.Automation.ContainerParentJob.HasMoreData" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property HasMoreData As Boolean" />
      <MemberSignature Language="F#" Value="member this.HasMoreData : bool" Usage="System.Management.Automation.ContainerParentJob.HasMoreData" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            indicates if more data is available
            </summary>
        <value>To be added.</value>
        <remarks>
            This has more data if any of the child jobs have more data.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="Location">
      <MemberSignature Language="C#" Value="public override string Location { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Location" />
      <MemberSignature Language="DocId" Value="P:System.Management.Automation.ContainerParentJob.Location" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Location As String" />
      <MemberSignature Language="F#" Value="member this.Location : string" Usage="System.Management.Automation.ContainerParentJob.Location" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Computers on which this job is running
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResumeJob">
      <MemberSignature Language="C#" Value="public override void ResumeJob ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ResumeJob() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Automation.ContainerParentJob.ResumeJob" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ResumeJob ()" />
      <MemberSignature Language="F#" Value="override this.ResumeJob : unit -&gt; unit" Usage="containerParentJob.ResumeJob " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Resume all jobs.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">Thrown if job is disposed.</exception>
      </Docs>
    </Member>
    <Member MemberName="ResumeJobAsync">
      <MemberSignature Language="C#" Value="public override void ResumeJobAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ResumeJobAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Automation.ContainerParentJob.ResumeJobAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ResumeJobAsync ()" />
      <MemberSignature Language="F#" Value="override this.ResumeJobAsync : unit -&gt; unit" Usage="containerParentJob.ResumeJobAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Resume all jobs asynchronously.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartJob">
      <MemberSignature Language="C#" Value="public override void StartJob ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void StartJob() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Automation.ContainerParentJob.StartJob" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub StartJob ()" />
      <MemberSignature Language="F#" Value="override this.StartJob : unit -&gt; unit" Usage="containerParentJob.StartJob " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Starts all jobs.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">Thrown if job is disposed.</exception>
      </Docs>
    </Member>
    <Member MemberName="StartJobAsync">
      <MemberSignature Language="C#" Value="public override void StartJobAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void StartJobAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Automation.ContainerParentJob.StartJobAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub StartJobAsync ()" />
      <MemberSignature Language="F#" Value="override this.StartJobAsync : unit -&gt; unit" Usage="containerParentJob.StartJobAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Starts all child jobs asynchronously.
            When all child jobs are started, StartJobCompleted event is raised.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StatusMessage">
      <MemberSignature Language="C#" Value="public override string StatusMessage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StatusMessage" />
      <MemberSignature Language="DocId" Value="P:System.Management.Automation.ContainerParentJob.StatusMessage" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property StatusMessage As String" />
      <MemberSignature Language="F#" Value="member this.StatusMessage : string" Usage="System.Management.Automation.ContainerParentJob.StatusMessage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Message indicating status of the job
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StopJob">
      <MemberSignature Language="C#" Value="public override void StopJob ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void StopJob() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Automation.ContainerParentJob.StopJob" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub StopJob ()" />
      <MemberSignature Language="F#" Value="override this.StopJob : unit -&gt; unit" Usage="containerParentJob.StopJob " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Stop all child jobs.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StopJob">
      <MemberSignature Language="C#" Value="public override void StopJob (bool force, string reason);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void StopJob(bool force, string reason) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Automation.ContainerParentJob.StopJob(System.Boolean,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub StopJob (force As Boolean, reason As String)" />
      <MemberSignature Language="F#" Value="override this.StopJob : bool * string -&gt; unit" Usage="containerParentJob.StopJob (force, reason)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="force" Type="System.Boolean" />
        <Parameter Name="reason" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="force"></param>
        <param name="reason"></param>
        <summary>
            StopJob
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StopJobAsync">
      <MemberSignature Language="C#" Value="public override void StopJobAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void StopJobAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Automation.ContainerParentJob.StopJobAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub StopJobAsync ()" />
      <MemberSignature Language="F#" Value="override this.StopJobAsync : unit -&gt; unit" Usage="containerParentJob.StopJobAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Stops all child jobs asynchronously.
            Once all child jobs are stopped, StopJobCompleted event is raised.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StopJobAsync">
      <MemberSignature Language="C#" Value="public override void StopJobAsync (bool force, string reason);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void StopJobAsync(bool force, string reason) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Automation.ContainerParentJob.StopJobAsync(System.Boolean,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub StopJobAsync (force As Boolean, reason As String)" />
      <MemberSignature Language="F#" Value="override this.StopJobAsync : bool * string -&gt; unit" Usage="containerParentJob.StopJobAsync (force, reason)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="force" Type="System.Boolean" />
        <Parameter Name="reason" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="force"></param>
        <param name="reason"></param>
        <summary>
            StopJobAsync
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SuspendJob">
      <MemberSignature Language="C#" Value="public override void SuspendJob ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void SuspendJob() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Automation.ContainerParentJob.SuspendJob" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub SuspendJob ()" />
      <MemberSignature Language="F#" Value="override this.SuspendJob : unit -&gt; unit" Usage="containerParentJob.SuspendJob " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Suspends all jobs.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">Thrown if job is disposed.</exception>
      </Docs>
    </Member>
    <Member MemberName="SuspendJob">
      <MemberSignature Language="C#" Value="public override void SuspendJob (bool force, string reason);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void SuspendJob(bool force, string reason) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Automation.ContainerParentJob.SuspendJob(System.Boolean,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub SuspendJob (force As Boolean, reason As String)" />
      <MemberSignature Language="F#" Value="override this.SuspendJob : bool * string -&gt; unit" Usage="containerParentJob.SuspendJob (force, reason)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="force" Type="System.Boolean" />
        <Parameter Name="reason" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="force">Force flag for suspending forcefully.</param>
        <param name="reason">Reason for doing forceful suspend.</param>
        <summary>
            Suspends all jobs forcefully.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SuspendJobAsync">
      <MemberSignature Language="C#" Value="public override void SuspendJobAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void SuspendJobAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Automation.ContainerParentJob.SuspendJobAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub SuspendJobAsync ()" />
      <MemberSignature Language="F#" Value="override this.SuspendJobAsync : unit -&gt; unit" Usage="containerParentJob.SuspendJobAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Suspends all jobs asynchronously.
            When all jobs have been suspended, SuspendJobCompleted is raised.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SuspendJobAsync">
      <MemberSignature Language="C#" Value="public override void SuspendJobAsync (bool force, string reason);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void SuspendJobAsync(bool force, string reason) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Automation.ContainerParentJob.SuspendJobAsync(System.Boolean,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub SuspendJobAsync (force As Boolean, reason As String)" />
      <MemberSignature Language="F#" Value="override this.SuspendJobAsync : bool * string -&gt; unit" Usage="containerParentJob.SuspendJobAsync (force, reason)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="force" Type="System.Boolean" />
        <Parameter Name="reason" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="force">Force flag for suspending forcefully.</param>
        <param name="reason">Reason for doing forceful suspend.</param>
        <summary>
            Suspends all jobs asynchronously with force flag.
            When all jobs have been suspended, SuspendJobCompleted is raised.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnblockJob">
      <MemberSignature Language="C#" Value="public override void UnblockJob ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void UnblockJob() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Automation.ContainerParentJob.UnblockJob" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub UnblockJob ()" />
      <MemberSignature Language="F#" Value="override this.UnblockJob : unit -&gt; unit" Usage="containerParentJob.UnblockJob " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Unblock all child jobs.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">Thrown if job is disposed.</exception>
      </Docs>
    </Member>
    <Member MemberName="UnblockJobAsync">
      <MemberSignature Language="C#" Value="public override void UnblockJobAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void UnblockJobAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Automation.ContainerParentJob.UnblockJobAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub UnblockJobAsync ()" />
      <MemberSignature Language="F#" Value="override this.UnblockJobAsync : unit -&gt; unit" Usage="containerParentJob.UnblockJobAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Unblock all child jobs asynchronously.
            Once all child jobs are unblocked, UnblockJobCompleted event is raised.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>