<Type Name="ProviderNameAmbiguousException" FullName="System.Management.Automation.ProviderNameAmbiguousException">
  <TypeSignature Language="C#" Value="public class ProviderNameAmbiguousException : System.Management.Automation.ProviderNotFoundException" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit ProviderNameAmbiguousException extends System.Management.Automation.ProviderNotFoundException" />
  <TypeSignature Language="DocId" Value="T:System.Management.Automation.ProviderNameAmbiguousException" />
  <TypeSignature Language="VB.NET" Value="Public Class ProviderNameAmbiguousException&#xA;Inherits ProviderNotFoundException" />
  <TypeSignature Language="F#" Value="type ProviderNameAmbiguousException = class&#xA;    inherit ProviderNotFoundException" />
  <AssemblyInfo>
    <AssemblyName>System.Management.Automation</AssemblyName>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Management.Automation.ProviderNotFoundException</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            ProviderNameAmbiguousException occurs when more than one provider exists
            for a given name and the request did not contain the PSSnapin name qualifier.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ProviderNameAmbiguousException ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Automation.ProviderNameAmbiguousException.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Constructs a ProviderNameAmbiguousException
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ProviderNameAmbiguousException (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Automation.ProviderNameAmbiguousException.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String)" />
      <MemberSignature Language="F#" Value="new System.Management.Automation.ProviderNameAmbiguousException : string -&gt; System.Management.Automation.ProviderNameAmbiguousException" Usage="new System.Management.Automation.ProviderNameAmbiguousException message" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
            The messaged used by the exception.
            </param>
        <summary>
            Constructs a ProviderNameAmbiguousException
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ProviderNameAmbiguousException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Automation.ProviderNameAmbiguousException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="F#" Value="new System.Management.Automation.ProviderNameAmbiguousException : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; System.Management.Automation.ProviderNameAmbiguousException" Usage="new System.Management.Automation.ProviderNameAmbiguousException (info, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info"> serialization information </param>
        <param name="context"> streaming context </param>
        <summary>
            Constructs a ProviderNameAmbiguousException using serialized data.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ProviderNameAmbiguousException (string message, Exception innerException);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, class System.Exception innerException) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Automation.ProviderNameAmbiguousException.#ctor(System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, innerException As Exception)" />
      <MemberSignature Language="F#" Value="new System.Management.Automation.ProviderNameAmbiguousException : string * Exception -&gt; System.Management.Automation.ProviderNameAmbiguousException" Usage="new System.Management.Automation.ProviderNameAmbiguousException (message, innerException)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="innerException" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="message">
            The message used by the exception.
            </param>
        <param name="innerException">
            The exception that caused the error.
            </param>
        <summary>
            Constructs a ProviderNameAmbiguousException
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PossibleMatches">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Management.Automation.ProviderInfo&gt; PossibleMatches { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Management.Automation.ProviderInfo&gt; PossibleMatches" />
      <MemberSignature Language="DocId" Value="P:System.Management.Automation.ProviderNameAmbiguousException.PossibleMatches" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PossibleMatches As ReadOnlyCollection(Of ProviderInfo)" />
      <MemberSignature Language="F#" Value="member this.PossibleMatches : System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Management.Automation.ProviderInfo&gt;" Usage="System.Management.Automation.ProviderNameAmbiguousException.PossibleMatches" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Management.Automation.ProviderInfo&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the information of the providers which might match the specified
            provider name.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>