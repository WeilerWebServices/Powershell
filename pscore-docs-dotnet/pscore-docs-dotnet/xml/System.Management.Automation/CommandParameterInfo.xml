<Type Name="CommandParameterInfo" FullName="System.Management.Automation.CommandParameterInfo">
  <TypeSignature Language="C#" Value="public class CommandParameterInfo" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CommandParameterInfo extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Management.Automation.CommandParameterInfo" />
  <TypeSignature Language="VB.NET" Value="Public Class CommandParameterInfo" />
  <TypeSignature Language="F#" Value="type CommandParameterInfo = class" />
  <AssemblyInfo>
    <AssemblyName>System.Management.Automation</AssemblyName>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Provides information about a cmdlet parameter for a particular parameter set.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Aliases">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;string&gt; Aliases { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;string&gt; Aliases" />
      <MemberSignature Language="DocId" Value="P:System.Management.Automation.CommandParameterInfo.Aliases" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Aliases As ReadOnlyCollection(Of String)" />
      <MemberSignature Language="F#" Value="member this.Aliases : System.Collections.ObjectModel.ReadOnlyCollection&lt;string&gt;" Usage="System.Management.Automation.CommandParameterInfo.Aliases" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the aliases by which this parameter can be referenced.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Attributes">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;Attribute&gt; Attributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Attribute&gt; Attributes" />
      <MemberSignature Language="DocId" Value="P:System.Management.Automation.CommandParameterInfo.Attributes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Attributes As ReadOnlyCollection(Of Attribute)" />
      <MemberSignature Language="F#" Value="member this.Attributes : System.Collections.ObjectModel.ReadOnlyCollection&lt;Attribute&gt;" Usage="System.Management.Automation.CommandParameterInfo.Attributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Attribute&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the attributes that are specified on the parameter.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HelpMessage">
      <MemberSignature Language="C#" Value="public string HelpMessage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HelpMessage" />
      <MemberSignature Language="DocId" Value="P:System.Management.Automation.CommandParameterInfo.HelpMessage" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HelpMessage As String" />
      <MemberSignature Language="F#" Value="member this.HelpMessage : string" Usage="System.Management.Automation.CommandParameterInfo.HelpMessage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the help message for this parameter.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDynamic">
      <MemberSignature Language="C#" Value="public bool IsDynamic { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDynamic" />
      <MemberSignature Language="DocId" Value="P:System.Management.Automation.CommandParameterInfo.IsDynamic" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsDynamic As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsDynamic : bool" Usage="System.Management.Automation.CommandParameterInfo.IsDynamic" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
             Gets whether or not the parameter is mandatory.
             </summary>
        <value>To be added.</value>
        <remarks>
             True if the parameter is mandatory, or false otherwise.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMandatory">
      <MemberSignature Language="C#" Value="public bool IsMandatory { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMandatory" />
      <MemberSignature Language="DocId" Value="P:System.Management.Automation.CommandParameterInfo.IsMandatory" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsMandatory As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsMandatory : bool" Usage="System.Management.Automation.CommandParameterInfo.IsMandatory" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
             Gets whether or not the parameter is a dynamic parameter.
             </summary>
        <value>To be added.</value>
        <remarks>
             True if the parameter is dynamic, or false otherwise.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Management.Automation.CommandParameterInfo.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Management.Automation.CommandParameterInfo.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the name of the parameter.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParameterType">
      <MemberSignature Language="C#" Value="public Type ParameterType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ParameterType" />
      <MemberSignature Language="DocId" Value="P:System.Management.Automation.CommandParameterInfo.ParameterType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ParameterType As Type" />
      <MemberSignature Language="F#" Value="member this.ParameterType : Type" Usage="System.Management.Automation.CommandParameterInfo.ParameterType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the type of the parameter.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Position">
      <MemberSignature Language="C#" Value="public int Position { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Position" />
      <MemberSignature Language="DocId" Value="P:System.Management.Automation.CommandParameterInfo.Position" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Position As Integer" />
      <MemberSignature Language="F#" Value="member this.Position : int" Usage="System.Management.Automation.CommandParameterInfo.Position" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the position in which the parameter can be specified on the command line
            if not named. If the returned value is int.MinValue then the parameter must be named.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValueFromPipeline">
      <MemberSignature Language="C#" Value="public bool ValueFromPipeline { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ValueFromPipeline" />
      <MemberSignature Language="DocId" Value="P:System.Management.Automation.CommandParameterInfo.ValueFromPipeline" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ValueFromPipeline As Boolean" />
      <MemberSignature Language="F#" Value="member this.ValueFromPipeline : bool" Usage="System.Management.Automation.CommandParameterInfo.ValueFromPipeline" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets whether the parameter can take values from the incoming pipeline object.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValueFromPipelineByPropertyName">
      <MemberSignature Language="C#" Value="public bool ValueFromPipelineByPropertyName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ValueFromPipelineByPropertyName" />
      <MemberSignature Language="DocId" Value="P:System.Management.Automation.CommandParameterInfo.ValueFromPipelineByPropertyName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ValueFromPipelineByPropertyName As Boolean" />
      <MemberSignature Language="F#" Value="member this.ValueFromPipelineByPropertyName : bool" Usage="System.Management.Automation.CommandParameterInfo.ValueFromPipelineByPropertyName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets whether the parameter can take values from a property inn the incoming
            pipeline object with the same name as the parameter.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValueFromRemainingArguments">
      <MemberSignature Language="C#" Value="public bool ValueFromRemainingArguments { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ValueFromRemainingArguments" />
      <MemberSignature Language="DocId" Value="P:System.Management.Automation.CommandParameterInfo.ValueFromRemainingArguments" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ValueFromRemainingArguments As Boolean" />
      <MemberSignature Language="F#" Value="member this.ValueFromRemainingArguments : bool" Usage="System.Management.Automation.CommandParameterInfo.ValueFromRemainingArguments" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets whether the parameter will take any argument that isn't bound to another parameter.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>