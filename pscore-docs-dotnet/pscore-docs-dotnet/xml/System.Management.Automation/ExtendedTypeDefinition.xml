<Type Name="ExtendedTypeDefinition" FullName="System.Management.Automation.ExtendedTypeDefinition">
  <TypeSignature Language="C#" Value="public sealed class ExtendedTypeDefinition" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ExtendedTypeDefinition extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Management.Automation.ExtendedTypeDefinition" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ExtendedTypeDefinition" />
  <TypeSignature Language="F#" Value="type ExtendedTypeDefinition = class" />
  <AssemblyInfo>
    <AssemblyName>System.Management.Automation</AssemblyName>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Specifies additional type definitions for an object
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ExtendedTypeDefinition (string typeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Automation.ExtendedTypeDefinition.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (typeName As String)" />
      <MemberSignature Language="F#" Value="new System.Management.Automation.ExtendedTypeDefinition : string -&gt; System.Management.Automation.ExtendedTypeDefinition" Usage="new System.Management.Automation.ExtendedTypeDefinition typeName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="typeName"></param>
        <summary>
            Initiate an instance of ExtendedTypeDefinition with the type name
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ExtendedTypeDefinition (string typeName, System.Collections.Generic.IEnumerable&lt;System.Management.Automation.FormatViewDefinition&gt; viewDefinitions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string typeName, class System.Collections.Generic.IEnumerable`1&lt;class System.Management.Automation.FormatViewDefinition&gt; viewDefinitions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Automation.ExtendedTypeDefinition.#ctor(System.String,System.Collections.Generic.IEnumerable{System.Management.Automation.FormatViewDefinition})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (typeName As String, viewDefinitions As IEnumerable(Of FormatViewDefinition))" />
      <MemberSignature Language="F#" Value="new System.Management.Automation.ExtendedTypeDefinition : string * seq&lt;System.Management.Automation.FormatViewDefinition&gt; -&gt; System.Management.Automation.ExtendedTypeDefinition" Usage="new System.Management.Automation.ExtendedTypeDefinition (typeName, viewDefinitions)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="viewDefinitions" Type="System.Collections.Generic.IEnumerable&lt;System.Management.Automation.FormatViewDefinition&gt;" />
      </Parameters>
      <Docs>
        <param name="typeName"></param>
        <param name="viewDefinitions"></param>
        <summary>
            Constructor for the ExtendedTypeDefinition
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FormatViewDefinition">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.List&lt;System.Management.Automation.FormatViewDefinition&gt; FormatViewDefinition { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.List`1&lt;class System.Management.Automation.FormatViewDefinition&gt; FormatViewDefinition" />
      <MemberSignature Language="DocId" Value="P:System.Management.Automation.ExtendedTypeDefinition.FormatViewDefinition" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FormatViewDefinition As List(Of FormatViewDefinition)" />
      <MemberSignature Language="F#" Value="member this.FormatViewDefinition : System.Collections.Generic.List&lt;System.Management.Automation.FormatViewDefinition&gt;" Usage="System.Management.Automation.ExtendedTypeDefinition.FormatViewDefinition" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.List&lt;System.Management.Automation.FormatViewDefinition&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The formatting view definition for
            the specified type
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Automation.ExtendedTypeDefinition.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="extendedTypeDefinition.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Overloaded to string method for
            better display
            </summary>
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeName">
      <MemberSignature Language="C#" Value="public string TypeName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TypeName" />
      <MemberSignature Language="DocId" Value="P:System.Management.Automation.ExtendedTypeDefinition.TypeName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TypeName As String" />
      <MemberSignature Language="F#" Value="member this.TypeName : string" Usage="System.Management.Automation.ExtendedTypeDefinition.TypeName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            A format definition may apply to multiple types.  This api returns
            the first typename that this format definition applies to, but there
            may be other types that apply. <see cref="P:System.Management.Automation.ExtendedTypeDefinition.TypeNames" /> should be
            used instead.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeNames">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.List&lt;string&gt; TypeNames { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.List`1&lt;string&gt; TypeNames" />
      <MemberSignature Language="DocId" Value="P:System.Management.Automation.ExtendedTypeDefinition.TypeNames" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TypeNames As List(Of String)" />
      <MemberSignature Language="F#" Value="member this.TypeNames : System.Collections.Generic.List&lt;string&gt;" Usage="System.Management.Automation.ExtendedTypeDefinition.TypeNames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.List&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The list of type names this set of format definitions applies to.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>