<Type Name="PSObjectPropertyDescriptor" FullName="System.Management.Automation.PSObjectPropertyDescriptor">
  <TypeSignature Language="C#" Value="public class PSObjectPropertyDescriptor : System.ComponentModel.PropertyDescriptor" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PSObjectPropertyDescriptor extends System.ComponentModel.PropertyDescriptor" />
  <TypeSignature Language="DocId" Value="T:System.Management.Automation.PSObjectPropertyDescriptor" />
  <TypeSignature Language="VB.NET" Value="Public Class PSObjectPropertyDescriptor&#xA;Inherits PropertyDescriptor" />
  <TypeSignature Language="F#" Value="type PSObjectPropertyDescriptor = class&#xA;    inherit PropertyDescriptor" />
  <AssemblyInfo>
    <AssemblyName>System.Management.Automation</AssemblyName>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.PropertyDescriptor</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Serves as the property information generated by the GetProperties method of <see cref="T:System.Management.Automation.PSObjectTypeDescriptor" />.
            </summary>
    <remarks>
            It is permitted to subclass <see cref="T:System.Management.Automation.SettingValueExceptionEventArgs" />
            but there is no established scenario for doing this, nor has it been tested.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName="Attributes">
      <MemberSignature Language="C#" Value="public override System.ComponentModel.AttributeCollection Attributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.AttributeCollection Attributes" />
      <MemberSignature Language="DocId" Value="P:System.Management.Automation.PSObjectPropertyDescriptor.Attributes" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Attributes As AttributeCollection" />
      <MemberSignature Language="F#" Value="member this.Attributes : System.ComponentModel.AttributeCollection" Usage="System.Management.Automation.PSObjectPropertyDescriptor.Attributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.AttributeCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the collection of attributes for this member.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanResetValue">
      <MemberSignature Language="C#" Value="public override bool CanResetValue (object component);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanResetValue(object component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Automation.PSObjectPropertyDescriptor.CanResetValue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanResetValue (component As Object) As Boolean" />
      <MemberSignature Language="F#" Value="override this.CanResetValue : obj -&gt; bool" Usage="pSObjectPropertyDescriptor.CanResetValue component" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="component">The component to test for reset capability. </param>
        <summary>
            Returns false to indicate that ResetValue has no effect.
            </summary>
        <returns>false</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ComponentType">
      <MemberSignature Language="C#" Value="public override Type ComponentType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ComponentType" />
      <MemberSignature Language="DocId" Value="P:System.Management.Automation.PSObjectPropertyDescriptor.ComponentType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ComponentType As Type" />
      <MemberSignature Language="F#" Value="member this.ComponentType : Type" Usage="System.Management.Automation.PSObjectPropertyDescriptor.ComponentType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the type of the component this property is bound to.
            </summary>
        <value>To be added.</value>
        <remarks>This property returns the <see cref="T:System.Management.Automation.PSObject" /> type.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public override object GetValue (object component);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object GetValue(object component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Automation.PSObjectPropertyDescriptor.GetValue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetValue (component As Object) As Object" />
      <MemberSignature Language="F#" Value="override this.GetValue : obj -&gt; obj" Usage="pSObjectPropertyDescriptor.GetValue component" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="component">The component with the property for which to retrieve the value. </param>
        <summary>
            Gets the current value of the property on a component.
            </summary>
        <returns>The value of a property for a given component.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Management.Automation.ExtendedTypeSystemException">
            If the property has not been found in the component or an exception has
            been thrown when getting the value of the property.
            This Exception will only be thrown if there is no event handler for the GettingValueException
            event of the <see cref="T:System.Management.Automation.PSObjectTypeDescriptor" /> that created this <see cref="T:System.Management.Automation.PSObjectPropertyDescriptor" />.
            If there is an event handler, it can prevent this exception from being thrown, by changing
            the ShouldThrow property of <see cref="T:System.Management.Automation.GettingValueExceptionEventArgs" /> from its default
            value of true to false.
            </exception>
        <exception cref="T:System.Management.Automation.PSArgumentNullException">If <paramref name="component" /> is null.</exception>
        <exception cref="T:System.Management.Automation.PSArgumentException">if <paramref name="component" /> is not
            an <see cref="T:System.Management.Automation.PSObject" /> or an <see cref="T:System.Management.Automation.PSObjectTypeDescriptor" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public override bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Management.Automation.PSObjectPropertyDescriptor.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Management.Automation.PSObjectPropertyDescriptor.IsReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets a value indicating whether this property is read-only.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PropertyType">
      <MemberSignature Language="C#" Value="public override Type PropertyType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type PropertyType" />
      <MemberSignature Language="DocId" Value="P:System.Management.Automation.PSObjectPropertyDescriptor.PropertyType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property PropertyType As Type" />
      <MemberSignature Language="F#" Value="member this.PropertyType : Type" Usage="System.Management.Automation.PSObjectPropertyDescriptor.PropertyType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the type of the property value.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetValue">
      <MemberSignature Language="C#" Value="public override void ResetValue (object component);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ResetValue(object component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Automation.PSObjectPropertyDescriptor.ResetValue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ResetValue (component As Object)" />
      <MemberSignature Language="F#" Value="override this.ResetValue : obj -&gt; unit" Usage="pSObjectPropertyDescriptor.ResetValue component" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="component">This parameter is ignored for <see cref="T:System.Management.Automation.PSObjectPropertyDescriptor" /></param>
        <summary>
            This method has no effect for <see cref="T:System.Management.Automation.PSObjectPropertyDescriptor" />.
            CanResetValue returns false.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetValue">
      <MemberSignature Language="C#" Value="public override void SetValue (object component, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void SetValue(object component, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Automation.PSObjectPropertyDescriptor.SetValue(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub SetValue (component As Object, value As Object)" />
      <MemberSignature Language="F#" Value="override this.SetValue : obj * obj -&gt; unit" Usage="pSObjectPropertyDescriptor.SetValue (component, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="component">The component with the property value that is to be set. </param>
        <param name="value">The new value.</param>
        <summary>
            Sets the value of the component to a different value.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Management.Automation.ExtendedTypeSystemException">
            If the property has not been found in the component or an exception has
            been thrown when setting the value of the property.
            This Exception will only be thrown if there is no event handler for the SettingValueException
            event of the <see cref="T:System.Management.Automation.PSObjectTypeDescriptor" /> that created this <see cref="T:System.Management.Automation.PSObjectPropertyDescriptor" />.
            If there is an event handler, it can prevent this exception from being thrown, by changing
            the ShouldThrow property of <see cref="T:System.Management.Automation.SettingValueExceptionEventArgs" />
            from its default value of true to false.
            </exception>
        <exception cref="T:System.Management.Automation.PSArgumentNullException">If <paramref name="component" /> is null.</exception>
        <exception cref="T:System.Management.Automation.PSArgumentException">if <paramref name="component" /> is not an
            <see cref="T:System.Management.Automation.PSObject" /> or an <see cref="T:System.Management.Automation.PSObjectTypeDescriptor" />.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeValue">
      <MemberSignature Language="C#" Value="public override bool ShouldSerializeValue (object component);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool ShouldSerializeValue(object component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Automation.PSObjectPropertyDescriptor.ShouldSerializeValue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ShouldSerializeValue (component As Object) As Boolean" />
      <MemberSignature Language="F#" Value="override this.ShouldSerializeValue : obj -&gt; bool" Usage="pSObjectPropertyDescriptor.ShouldSerializeValue component" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="component">The component with the property to be examined for persistence.</param>
        <summary>
            Returns true to indicate that the value of this property needs to be persisted.
            </summary>
        <returns>true</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>