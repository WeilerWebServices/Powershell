<Type Name="CmdletBindingAttribute" FullName="System.Management.Automation.CmdletBindingAttribute">
  <TypeSignature Language="C#" Value="public class CmdletBindingAttribute : System.Management.Automation.CmdletCommonMetadataAttribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CmdletBindingAttribute extends System.Management.Automation.CmdletCommonMetadataAttribute" />
  <TypeSignature Language="DocId" Value="T:System.Management.Automation.CmdletBindingAttribute" />
  <TypeSignature Language="VB.NET" Value="Public Class CmdletBindingAttribute&#xA;Inherits CmdletCommonMetadataAttribute" />
  <TypeSignature Language="F#" Value="type CmdletBindingAttribute = class&#xA;    inherit CmdletCommonMetadataAttribute" />
  <AssemblyInfo>
    <AssemblyName>System.Management.Automation</AssemblyName>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Management.Automation.CmdletCommonMetadataAttribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            Identifies PowerShell script code as behaving like a cmdlet and hence uses
            cmdlet parameter binding instead of script parameter binding.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CmdletBindingAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Automation.CmdletBindingAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PositionalBinding">
      <MemberSignature Language="C#" Value="public bool PositionalBinding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PositionalBinding" />
      <MemberSignature Language="DocId" Value="P:System.Management.Automation.CmdletBindingAttribute.PositionalBinding" />
      <MemberSignature Language="VB.NET" Value="Public Property PositionalBinding As Boolean" />
      <MemberSignature Language="F#" Value="member this.PositionalBinding : bool with get, set" Usage="System.Management.Automation.CmdletBindingAttribute.PositionalBinding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            When true, the script will auto-generate appropriate parameter metadata to support positional
            parameters if the script hasn't already specified multiple parameter sets or specified positions
            explicitly via the <see cref="T:System.Management.Automation.ParameterAttribute" />.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>