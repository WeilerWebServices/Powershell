<Type Name="CustomControlBuilder" FullName="System.Management.Automation.CustomControlBuilder">
  <TypeSignature Language="C#" Value="public sealed class CustomControlBuilder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit CustomControlBuilder extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Management.Automation.CustomControlBuilder" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class CustomControlBuilder" />
  <TypeSignature Language="F#" Value="type CustomControlBuilder = class" />
  <AssemblyInfo>
    <AssemblyName>System.Management.Automation</AssemblyName>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary />
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="EndControl">
      <MemberSignature Language="C#" Value="public System.Management.Automation.CustomControl EndControl ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Management.Automation.CustomControl EndControl() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Automation.CustomControlBuilder.EndControl" />
      <MemberSignature Language="VB.NET" Value="Public Function EndControl () As CustomControl" />
      <MemberSignature Language="F#" Value="member this.EndControl : unit -&gt; System.Management.Automation.CustomControl" Usage="customControlBuilder.EndControl " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.CustomControl</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary />
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupByProperty">
      <MemberSignature Language="C#" Value="public System.Management.Automation.CustomControlBuilder GroupByProperty (string property, System.Management.Automation.CustomControl customControl = null, string label = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Management.Automation.CustomControlBuilder GroupByProperty(string property, class System.Management.Automation.CustomControl customControl, string label) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Automation.CustomControlBuilder.GroupByProperty(System.String,System.Management.Automation.CustomControl,System.String)" />
      <MemberSignature Language="F#" Value="member this.GroupByProperty : string * System.Management.Automation.CustomControl * string -&gt; System.Management.Automation.CustomControlBuilder" Usage="customControlBuilder.GroupByProperty (property, customControl, label)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.CustomControlBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.String" />
        <Parameter Name="customControl" Type="System.Management.Automation.CustomControl" />
        <Parameter Name="label" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="property">To be added.</param>
        <param name="customControl">To be added.</param>
        <param name="label">To be added.</param>
        <summary>Group instances by the property name with an optional label.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupByScriptBlock">
      <MemberSignature Language="C#" Value="public System.Management.Automation.CustomControlBuilder GroupByScriptBlock (string scriptBlock, System.Management.Automation.CustomControl customControl = null, string label = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Management.Automation.CustomControlBuilder GroupByScriptBlock(string scriptBlock, class System.Management.Automation.CustomControl customControl, string label) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Automation.CustomControlBuilder.GroupByScriptBlock(System.String,System.Management.Automation.CustomControl,System.String)" />
      <MemberSignature Language="F#" Value="member this.GroupByScriptBlock : string * System.Management.Automation.CustomControl * string -&gt; System.Management.Automation.CustomControlBuilder" Usage="customControlBuilder.GroupByScriptBlock (scriptBlock, customControl, label)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.CustomControlBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scriptBlock" Type="System.String" />
        <Parameter Name="customControl" Type="System.Management.Automation.CustomControl" />
        <Parameter Name="label" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="scriptBlock">To be added.</param>
        <param name="customControl">To be added.</param>
        <param name="label">To be added.</param>
        <summary>Group instances by the script block expression with an optional label.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartEntry">
      <MemberSignature Language="C#" Value="public System.Management.Automation.CustomEntryBuilder StartEntry (System.Collections.Generic.IEnumerable&lt;string&gt; entrySelectedByType = null, System.Collections.Generic.IEnumerable&lt;System.Management.Automation.DisplayEntry&gt; entrySelectedByCondition = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Management.Automation.CustomEntryBuilder StartEntry(class System.Collections.Generic.IEnumerable`1&lt;string&gt; entrySelectedByType, class System.Collections.Generic.IEnumerable`1&lt;class System.Management.Automation.DisplayEntry&gt; entrySelectedByCondition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Automation.CustomControlBuilder.StartEntry(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.Management.Automation.DisplayEntry})" />
      <MemberSignature Language="VB.NET" Value="Public Function StartEntry (Optional entrySelectedByType As IEnumerable(Of String) = null, Optional entrySelectedByCondition As IEnumerable(Of DisplayEntry) = null) As CustomEntryBuilder" />
      <MemberSignature Language="F#" Value="member this.StartEntry : seq&lt;string&gt; * seq&lt;System.Management.Automation.DisplayEntry&gt; -&gt; System.Management.Automation.CustomEntryBuilder" Usage="customControlBuilder.StartEntry (entrySelectedByType, entrySelectedByCondition)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.CustomEntryBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entrySelectedByType" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="entrySelectedByCondition" Type="System.Collections.Generic.IEnumerable&lt;System.Management.Automation.DisplayEntry&gt;" />
      </Parameters>
      <Docs>
        <param name="entrySelectedByType">To be added.</param>
        <param name="entrySelectedByCondition">To be added.</param>
        <summary />
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>