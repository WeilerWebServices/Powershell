<Type Name="PSIdentity" FullName="System.Management.Automation.Remoting.PSIdentity">
  <TypeSignature Language="C#" Value="public sealed class PSIdentity : System.Security.Principal.IIdentity" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit PSIdentity extends System.Object implements class System.Security.Principal.IIdentity" />
  <TypeSignature Language="DocId" Value="T:System.Management.Automation.Remoting.PSIdentity" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class PSIdentity&#xA;Implements IIdentity" />
  <TypeSignature Language="F#" Value="type PSIdentity = class&#xA;    interface IIdentity" />
  <AssemblyInfo>
    <AssemblyName>System.Management.Automation</AssemblyName>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Security.Principal.IIdentity</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            Defines the basic functionality of a PSIdentity object.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PSIdentity (string authType, bool isAuthenticated, string userName, System.Management.Automation.Remoting.PSCertificateDetails cert);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string authType, bool isAuthenticated, string userName, class System.Management.Automation.Remoting.PSCertificateDetails cert) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Automation.Remoting.PSIdentity.#ctor(System.String,System.Boolean,System.String,System.Management.Automation.Remoting.PSCertificateDetails)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (authType As String, isAuthenticated As Boolean, userName As String, cert As PSCertificateDetails)" />
      <MemberSignature Language="F#" Value="new System.Management.Automation.Remoting.PSIdentity : string * bool * string * System.Management.Automation.Remoting.PSCertificateDetails -&gt; System.Management.Automation.Remoting.PSIdentity" Usage="new System.Management.Automation.Remoting.PSIdentity (authType, isAuthenticated, userName, cert)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="authType" Type="System.String" />
        <Parameter Name="isAuthenticated" Type="System.Boolean" />
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="cert" Type="System.Management.Automation.Remoting.PSCertificateDetails" />
      </Parameters>
      <Docs>
        <param name="authType">
            Type of authentication used to authenticate this user.
            For a WSMan service authenticated user this will be one of the following:
             WSMAN_DEFAULT_AUTHENTICATION
             WSMAN_NO_AUTHENTICATION
             WSMAN_AUTH_DIGEST
             WSMAN_AUTH_NEGOTIATE
             WSMAN_AUTH_BASIC
             WSMAN_AUTH_KERBEROS
             WSMAN_AUTH_CLIENT_CERTIFICATE
             WSMAN_AUTH_LIVEID
            </param>
        <param name="isAuthenticated">
            true if this user is authenticated.
            </param>
        <param name="userName">
            Name of the user
            </param>
        <param name="cert">
            Certificate details if Certificate authentication is used.
            </param>
        <summary>
            Constructor used to construct a PSIdentity object
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AuthenticationType">
      <MemberSignature Language="C#" Value="public string AuthenticationType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AuthenticationType" />
      <MemberSignature Language="DocId" Value="P:System.Management.Automation.Remoting.PSIdentity.AuthenticationType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AuthenticationType As String" />
      <MemberSignature Language="F#" Value="member this.AuthenticationType : string" Usage="System.Management.Automation.Remoting.PSIdentity.AuthenticationType" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Security.Principal.IIdentity.AuthenticationType</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the type of authentication used.
            For a WSMan service authenticated user this will be one of the following:
             WSMAN_DEFAULT_AUTHENTICATION
             WSMAN_NO_AUTHENTICATION
             WSMAN_AUTH_DIGEST
             WSMAN_AUTH_NEGOTIATE
             WSMAN_AUTH_BASIC
             WSMAN_AUTH_KERBEROS
             WSMAN_AUTH_CLIENT_CERTIFICATE
             WSMAN_AUTH_LIVEID
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CertificateDetails">
      <MemberSignature Language="C#" Value="public System.Management.Automation.Remoting.PSCertificateDetails CertificateDetails { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Management.Automation.Remoting.PSCertificateDetails CertificateDetails" />
      <MemberSignature Language="DocId" Value="P:System.Management.Automation.Remoting.PSIdentity.CertificateDetails" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CertificateDetails As PSCertificateDetails" />
      <MemberSignature Language="F#" Value="member this.CertificateDetails : System.Management.Automation.Remoting.PSCertificateDetails" Usage="System.Management.Automation.Remoting.PSIdentity.CertificateDetails" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Remoting.PSCertificateDetails</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the certificate details of the user if supported, null otherwise.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAuthenticated">
      <MemberSignature Language="C#" Value="public bool IsAuthenticated { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAuthenticated" />
      <MemberSignature Language="DocId" Value="P:System.Management.Automation.Remoting.PSIdentity.IsAuthenticated" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAuthenticated As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsAuthenticated : bool" Usage="System.Management.Automation.Remoting.PSIdentity.IsAuthenticated" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Security.Principal.IIdentity.IsAuthenticated</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets a value that indicates whether the user has been authenticated.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Management.Automation.Remoting.PSIdentity.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Management.Automation.Remoting.PSIdentity.Name" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Security.Principal.IIdentity.Name</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the name of the user.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>