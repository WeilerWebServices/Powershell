<Type Name="PSPrincipal" FullName="System.Management.Automation.Remoting.PSPrincipal">
  <TypeSignature Language="C#" Value="public sealed class PSPrincipal : System.Security.Principal.IPrincipal" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit PSPrincipal extends System.Object implements class System.Security.Principal.IPrincipal" />
  <TypeSignature Language="DocId" Value="T:System.Management.Automation.Remoting.PSPrincipal" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class PSPrincipal&#xA;Implements IPrincipal" />
  <TypeSignature Language="F#" Value="type PSPrincipal = class&#xA;    interface IPrincipal" />
  <AssemblyInfo>
    <AssemblyName>System.Management.Automation</AssemblyName>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Security.Principal.IPrincipal</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            Defines the basic functionality of a PSPrincipal object.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PSPrincipal (System.Management.Automation.Remoting.PSIdentity identity, System.Security.Principal.WindowsIdentity windowsIdentity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Management.Automation.Remoting.PSIdentity identity, class System.Security.Principal.WindowsIdentity windowsIdentity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Automation.Remoting.PSPrincipal.#ctor(System.Management.Automation.Remoting.PSIdentity,System.Security.Principal.WindowsIdentity)" />
      <MemberSignature Language="F#" Value="new System.Management.Automation.Remoting.PSPrincipal : System.Management.Automation.Remoting.PSIdentity * System.Security.Principal.WindowsIdentity -&gt; System.Management.Automation.Remoting.PSPrincipal" Usage="new System.Management.Automation.Remoting.PSPrincipal (identity, windowsIdentity)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="identity" Type="System.Management.Automation.Remoting.PSIdentity" />
        <Parameter Name="windowsIdentity" Type="System.Security.Principal.WindowsIdentity" />
      </Parameters>
      <Docs>
        <param name="identity">
            An instance of PSIdentity
            </param>
        <param name="windowsIdentity">
            An instance of WindowsIdentity, if psIdentity represents a windows user. This can be
            null.
            </param>
        <summary>
            Constructs PSPrincipal using PSIdentity and a WindowsIdentity
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Identity">
      <MemberSignature Language="C#" Value="public System.Management.Automation.Remoting.PSIdentity Identity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Management.Automation.Remoting.PSIdentity Identity" />
      <MemberSignature Language="DocId" Value="P:System.Management.Automation.Remoting.PSPrincipal.Identity" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Identity As PSIdentity" />
      <MemberSignature Language="F#" Value="member this.Identity : System.Management.Automation.Remoting.PSIdentity" Usage="System.Management.Automation.Remoting.PSPrincipal.Identity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Remoting.PSIdentity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the identity of the current user principal.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInRole">
      <MemberSignature Language="C#" Value="public bool IsInRole (string role);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsInRole(string role) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Automation.Remoting.PSPrincipal.IsInRole(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsInRole (role As String) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member IsInRole : string -&gt; bool&#xA;override this.IsInRole : string -&gt; bool" Usage="pSPrincipal.IsInRole role" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.Principal.IPrincipal.IsInRole(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="role" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="role"></param>
        <summary>
            Determines if the current principal belongs to a specified rule.
            If we were able to get a WindowsIdentity then this will perform the
            check using the WindowsIdentity otherwise this will return false.
            </summary>
        <returns>
            If we were able to get a WindowsIdentity then this will perform the
            check using the WindowsIdentity otherwise this will return false.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Security.Principal.IPrincipal.Identity">
      <MemberSignature Language="C#" Value="System.Security.Principal.IIdentity System.Security.Principal.IPrincipal.Identity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Principal.IIdentity System.Security.Principal.IPrincipal.Identity" />
      <MemberSignature Language="DocId" Value="P:System.Management.Automation.Remoting.PSPrincipal.System#Security#Principal#IPrincipal#Identity" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Identity As IIdentity Implements IPrincipal.Identity" />
      <MemberSignature Language="F#" Usage="System.Management.Automation.Remoting.PSPrincipal.System.Security.Principal.IPrincipal.Identity" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Security.Principal.IPrincipal.Identity</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Principal.IIdentity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the identity of the current principal.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WindowsIdentity">
      <MemberSignature Language="C#" Value="public System.Security.Principal.WindowsIdentity WindowsIdentity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Principal.WindowsIdentity WindowsIdentity" />
      <MemberSignature Language="DocId" Value="P:System.Management.Automation.Remoting.PSPrincipal.WindowsIdentity" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property WindowsIdentity As WindowsIdentity" />
      <MemberSignature Language="F#" Value="member this.WindowsIdentity : System.Security.Principal.WindowsIdentity" Usage="System.Management.Automation.Remoting.PSPrincipal.WindowsIdentity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Principal.WindowsIdentity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the WindowsIdentity (if possible) representation of the current Identity.
            PSPrincipal can represent any user for example a LiveID user, network user within
            a domain etc. This property tries to convert the Identity to WindowsIdentity
            using the user token supplied.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>