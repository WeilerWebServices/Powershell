<Type Name="WSManPluginManagedEntryInstanceWrapper" FullName="System.Management.Automation.Remoting.WSManPluginManagedEntryInstanceWrapper">
  <TypeSignature Language="C#" Value="public sealed class WSManPluginManagedEntryInstanceWrapper : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit WSManPluginManagedEntryInstanceWrapper extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Management.Automation.Remoting.WSManPluginManagedEntryInstanceWrapper" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class WSManPluginManagedEntryInstanceWrapper&#xA;Implements IDisposable" />
  <TypeSignature Language="F#" Value="type WSManPluginManagedEntryInstanceWrapper = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Management.Automation</AssemblyName>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
             This is a thin wrapper around WSManPluginManagedEntryWrapper.InitPlugin()
             so that it can be called from native COM code in a non-static context.
            
             This was done to get around an FXCop error: AvoidStaticMembersInComVisibleTypes.
             </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WSManPluginManagedEntryInstanceWrapper ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Automation.Remoting.WSManPluginManagedEntryInstanceWrapper.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Automation.Remoting.WSManPluginManagedEntryInstanceWrapper.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="wSManPluginManagedEntryInstanceWrapper.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Internal implementation of Dispose pattern callable by consumers.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~WSManPluginManagedEntryInstanceWrapper ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Automation.Remoting.WSManPluginManagedEntryInstanceWrapper.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="wSManPluginManagedEntryInstanceWrapper.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Use C# destructor syntax for finalization code.
            This destructor will run only if the Dispose method
            does not get called.
            It gives your base class the opportunity to finalize.
            Do not provide destructors in types derived from this class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEntryDelegate">
      <MemberSignature Language="C#" Value="public IntPtr GetEntryDelegate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance native int GetEntryDelegate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Automation.Remoting.WSManPluginManagedEntryInstanceWrapper.GetEntryDelegate" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEntryDelegate () As IntPtr" />
      <MemberSignature Language="F#" Value="member this.GetEntryDelegate : unit -&gt; nativeint" Usage="wSManPluginManagedEntryInstanceWrapper.GetEntryDelegate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Entry point for native code that cannot call static methods.
            </summary>
        <returns>A function pointer for the static entry point for the WSManPlugin initialization function.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>