<Type Name="NewModuleManifestCommand" FullName="Microsoft.PowerShell.Commands.NewModuleManifestCommand">
  <TypeSignature Language="C#" Value="public sealed class NewModuleManifestCommand : System.Management.Automation.PSCmdlet" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit NewModuleManifestCommand extends System.Management.Automation.PSCmdlet" />
  <TypeSignature Language="DocId" Value="T:Microsoft.PowerShell.Commands.NewModuleManifestCommand" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class NewModuleManifestCommand&#xA;Inherits PSCmdlet" />
  <TypeSignature Language="F#" Value="type NewModuleManifestCommand = class&#xA;    inherit PSCmdlet" />
  <AssemblyInfo>
    <AssemblyName>System.Management.Automation</AssemblyName>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Management.Automation.PSCmdlet</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Management.Automation.Cmdlet("New", "ModuleManifest", HelpUri="https://go.microsoft.com/fwlink/?LinkID=141555", SupportsShouldProcess=true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Management.Automation.OutputType(typeof(System.String))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            Cmdlet to create a new module manifest file.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NewModuleManifestCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.PowerShell.Commands.NewModuleManifestCommand.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AliasesToExport">
      <MemberSignature Language="C#" Value="public string[] AliasesToExport { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] AliasesToExport" />
      <MemberSignature Language="DocId" Value="P:Microsoft.PowerShell.Commands.NewModuleManifestCommand.AliasesToExport" />
      <MemberSignature Language="VB.NET" Value="Public Property AliasesToExport As String()" />
      <MemberSignature Language="F#" Value="member this.AliasesToExport : string[] with get, set" Usage="Microsoft.PowerShell.Commands.NewModuleManifestCommand.AliasesToExport" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Management.Automation.AllowEmptyCollection</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Management.Automation.Parameter</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Specify any aliases to export from this manifest.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Author">
      <MemberSignature Language="C#" Value="public string Author { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Author" />
      <MemberSignature Language="DocId" Value="P:Microsoft.PowerShell.Commands.NewModuleManifestCommand.Author" />
      <MemberSignature Language="VB.NET" Value="Public Property Author As String" />
      <MemberSignature Language="F#" Value="member this.Author : string with get, set" Usage="Microsoft.PowerShell.Commands.NewModuleManifestCommand.Author" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Management.Automation.AllowEmptyString</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Management.Automation.Parameter</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Set the author string in the manifest
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClrVersion">
      <MemberSignature Language="C#" Value="public Version ClrVersion { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Version ClrVersion" />
      <MemberSignature Language="DocId" Value="P:Microsoft.PowerShell.Commands.NewModuleManifestCommand.ClrVersion" />
      <MemberSignature Language="VB.NET" Value="Public Property ClrVersion As Version" />
      <MemberSignature Language="F#" Value="member this.ClrVersion : Version with get, set" Usage="Microsoft.PowerShell.Commands.NewModuleManifestCommand.ClrVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Management.Automation.Parameter</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Version</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Set the CLR version required by the module.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CmdletsToExport">
      <MemberSignature Language="C#" Value="public string[] CmdletsToExport { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] CmdletsToExport" />
      <MemberSignature Language="DocId" Value="P:Microsoft.PowerShell.Commands.NewModuleManifestCommand.CmdletsToExport" />
      <MemberSignature Language="VB.NET" Value="Public Property CmdletsToExport As String()" />
      <MemberSignature Language="F#" Value="member this.CmdletsToExport : string[] with get, set" Usage="Microsoft.PowerShell.Commands.NewModuleManifestCommand.CmdletsToExport" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Management.Automation.AllowEmptyCollection</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Management.Automation.Parameter</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Specify any cmdlets to export from this manifest.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompanyName">
      <MemberSignature Language="C#" Value="public string CompanyName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CompanyName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.PowerShell.Commands.NewModuleManifestCommand.CompanyName" />
      <MemberSignature Language="VB.NET" Value="Public Property CompanyName As String" />
      <MemberSignature Language="F#" Value="member this.CompanyName : string with get, set" Usage="Microsoft.PowerShell.Commands.NewModuleManifestCommand.CompanyName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Management.Automation.AllowEmptyString</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Management.Automation.Parameter</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Set the company name in the manifest
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompatiblePSEditions">
      <MemberSignature Language="C#" Value="public string[] CompatiblePSEditions { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] CompatiblePSEditions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.PowerShell.Commands.NewModuleManifestCommand.CompatiblePSEditions" />
      <MemberSignature Language="VB.NET" Value="Public Property CompatiblePSEditions As String()" />
      <MemberSignature Language="F#" Value="member this.CompatiblePSEditions : string[] with get, set" Usage="Microsoft.PowerShell.Commands.NewModuleManifestCommand.CompatiblePSEditions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Management.Automation.AllowEmptyCollection</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Management.Automation.Parameter</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Management.Automation.ValidateSet(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Specify compatible PSEditions of this module.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Copyright">
      <MemberSignature Language="C#" Value="public string Copyright { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Copyright" />
      <MemberSignature Language="DocId" Value="P:Microsoft.PowerShell.Commands.NewModuleManifestCommand.Copyright" />
      <MemberSignature Language="VB.NET" Value="Public Property Copyright As String" />
      <MemberSignature Language="F#" Value="member this.Copyright : string with get, set" Usage="Microsoft.PowerShell.Commands.NewModuleManifestCommand.Copyright" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Management.Automation.AllowEmptyString</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Management.Automation.Parameter</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Set the copyright string in the module manifest
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultCommandPrefix">
      <MemberSignature Language="C#" Value="public string DefaultCommandPrefix { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DefaultCommandPrefix" />
      <MemberSignature Language="DocId" Value="P:Microsoft.PowerShell.Commands.NewModuleManifestCommand.DefaultCommandPrefix" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultCommandPrefix As String" />
      <MemberSignature Language="F#" Value="member this.DefaultCommandPrefix : string with get, set" Usage="Microsoft.PowerShell.Commands.NewModuleManifestCommand.DefaultCommandPrefix" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Management.Automation.AllowNull</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Management.Automation.Parameter</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Specify the Default Command Prefix 
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Description">
      <MemberSignature Language="C#" Value="public string Description { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Description" />
      <MemberSignature Language="DocId" Value="P:Microsoft.PowerShell.Commands.NewModuleManifestCommand.Description" />
      <MemberSignature Language="VB.NET" Value="Public Property Description As String" />
      <MemberSignature Language="F#" Value="member this.Description : string with get, set" Usage="Microsoft.PowerShell.Commands.NewModuleManifestCommand.Description" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Management.Automation.AllowEmptyString</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Management.Automation.Parameter</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Set the module description
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DotNetFrameworkVersion">
      <MemberSignature Language="C#" Value="public Version DotNetFrameworkVersion { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Version DotNetFrameworkVersion" />
      <MemberSignature Language="DocId" Value="P:Microsoft.PowerShell.Commands.NewModuleManifestCommand.DotNetFrameworkVersion" />
      <MemberSignature Language="VB.NET" Value="Public Property DotNetFrameworkVersion As Version" />
      <MemberSignature Language="F#" Value="member this.DotNetFrameworkVersion : Version with get, set" Usage="Microsoft.PowerShell.Commands.NewModuleManifestCommand.DotNetFrameworkVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Management.Automation.Parameter</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Version</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Set the version of .NET Framework required by the module.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DscResourcesToExport">
      <MemberSignature Language="C#" Value="public string[] DscResourcesToExport { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] DscResourcesToExport" />
      <MemberSignature Language="DocId" Value="P:Microsoft.PowerShell.Commands.NewModuleManifestCommand.DscResourcesToExport" />
      <MemberSignature Language="VB.NET" Value="Public Property DscResourcesToExport As String()" />
      <MemberSignature Language="F#" Value="member this.DscResourcesToExport : string[] with get, set" Usage="Microsoft.PowerShell.Commands.NewModuleManifestCommand.DscResourcesToExport" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Management.Automation.AllowEmptyCollection</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Management.Automation.Parameter</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Specify any dsc resources to export from this manifest.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndProcessing">
      <MemberSignature Language="C#" Value="protected override void EndProcessing ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void EndProcessing() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.PowerShell.Commands.NewModuleManifestCommand.EndProcessing" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub EndProcessing ()" />
      <MemberSignature Language="F#" Value="override this.EndProcessing : unit -&gt; unit" Usage="newModuleManifestCommand.EndProcessing " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Generate the module manifest...
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FileList">
      <MemberSignature Language="C#" Value="public string[] FileList { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] FileList" />
      <MemberSignature Language="DocId" Value="P:Microsoft.PowerShell.Commands.NewModuleManifestCommand.FileList" />
      <MemberSignature Language="VB.NET" Value="Public Property FileList As String()" />
      <MemberSignature Language="F#" Value="member this.FileList : string[] with get, set" Usage="Microsoft.PowerShell.Commands.NewModuleManifestCommand.FileList" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Management.Automation.AllowEmptyCollection</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Management.Automation.Parameter</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Specify any additional files used by this module.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FormatsToProcess">
      <MemberSignature Language="C#" Value="public string[] FormatsToProcess { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] FormatsToProcess" />
      <MemberSignature Language="DocId" Value="P:Microsoft.PowerShell.Commands.NewModuleManifestCommand.FormatsToProcess" />
      <MemberSignature Language="VB.NET" Value="Public Property FormatsToProcess As String()" />
      <MemberSignature Language="F#" Value="member this.FormatsToProcess : string[] with get, set" Usage="Microsoft.PowerShell.Commands.NewModuleManifestCommand.FormatsToProcess" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Management.Automation.AllowEmptyCollection</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Management.Automation.Parameter</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Sets the list of formats files for the module
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FunctionsToExport">
      <MemberSignature Language="C#" Value="public string[] FunctionsToExport { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] FunctionsToExport" />
      <MemberSignature Language="DocId" Value="P:Microsoft.PowerShell.Commands.NewModuleManifestCommand.FunctionsToExport" />
      <MemberSignature Language="VB.NET" Value="Public Property FunctionsToExport As String()" />
      <MemberSignature Language="F#" Value="member this.FunctionsToExport : string[] with get, set" Usage="Microsoft.PowerShell.Commands.NewModuleManifestCommand.FunctionsToExport" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Management.Automation.AllowEmptyCollection</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Management.Automation.Parameter</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Specify any functions to export from this manifest.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Guid">
      <MemberSignature Language="C#" Value="public Guid Guid { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Guid Guid" />
      <MemberSignature Language="DocId" Value="P:Microsoft.PowerShell.Commands.NewModuleManifestCommand.Guid" />
      <MemberSignature Language="VB.NET" Value="Public Property Guid As Guid" />
      <MemberSignature Language="F#" Value="member this.Guid : Guid with get, set" Usage="Microsoft.PowerShell.Commands.NewModuleManifestCommand.Guid" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Management.Automation.Parameter</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Set the GUID in the manifest file
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HelpInfoUri">
      <MemberSignature Language="C#" Value="public string HelpInfoUri { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HelpInfoUri" />
      <MemberSignature Language="DocId" Value="P:Microsoft.PowerShell.Commands.NewModuleManifestCommand.HelpInfoUri" />
      <MemberSignature Language="VB.NET" Value="Public Property HelpInfoUri As String" />
      <MemberSignature Language="F#" Value="member this.HelpInfoUri : string with get, set" Usage="Microsoft.PowerShell.Commands.NewModuleManifestCommand.HelpInfoUri" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Management.Automation.AllowNull</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Management.Automation.Parameter</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Specify the HelpInfo URI
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IconUri">
      <MemberSignature Language="C#" Value="public Uri IconUri { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri IconUri" />
      <MemberSignature Language="DocId" Value="P:Microsoft.PowerShell.Commands.NewModuleManifestCommand.IconUri" />
      <MemberSignature Language="VB.NET" Value="Public Property IconUri As Uri" />
      <MemberSignature Language="F#" Value="member this.IconUri : Uri with get, set" Usage="Microsoft.PowerShell.Commands.NewModuleManifestCommand.IconUri" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Management.Automation.Parameter(Mandatory=false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Management.Automation.ValidateNotNullOrEmpty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Specify the IconUri.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LicenseUri">
      <MemberSignature Language="C#" Value="public Uri LicenseUri { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri LicenseUri" />
      <MemberSignature Language="DocId" Value="P:Microsoft.PowerShell.Commands.NewModuleManifestCommand.LicenseUri" />
      <MemberSignature Language="VB.NET" Value="Public Property LicenseUri As Uri" />
      <MemberSignature Language="F#" Value="member this.LicenseUri : Uri with get, set" Usage="Microsoft.PowerShell.Commands.NewModuleManifestCommand.LicenseUri" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Management.Automation.Parameter(Mandatory=false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Management.Automation.ValidateNotNullOrEmpty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Specify the LicenseUri.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ModuleList">
      <MemberSignature Language="C#" Value="public object[] ModuleList { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object[] ModuleList" />
      <MemberSignature Language="DocId" Value="P:Microsoft.PowerShell.Commands.NewModuleManifestCommand.ModuleList" />
      <MemberSignature Language="VB.NET" Value="Public Property ModuleList As Object()" />
      <MemberSignature Language="F#" Value="member this.ModuleList : obj[] with get, set" Usage="Microsoft.PowerShell.Commands.NewModuleManifestCommand.ModuleList" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Management.Automation.AllowEmptyCollection</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Management.Automation.Parameter</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            List of other modules included with this module. 
            Like the RequiredModules key, this list can be a simple list of module names or a complex list of module hashtables.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ModuleVersion">
      <MemberSignature Language="C#" Value="public Version ModuleVersion { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Version ModuleVersion" />
      <MemberSignature Language="DocId" Value="P:Microsoft.PowerShell.Commands.NewModuleManifestCommand.ModuleVersion" />
      <MemberSignature Language="VB.NET" Value="Public Property ModuleVersion As Version" />
      <MemberSignature Language="F#" Value="member this.ModuleVersion : Version with get, set" Usage="Microsoft.PowerShell.Commands.NewModuleManifestCommand.ModuleVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Management.Automation.Parameter</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Management.Automation.ValidateNotNull</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Version</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Set the module version...
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NestedModules">
      <MemberSignature Language="C#" Value="public object[] NestedModules { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object[] NestedModules" />
      <MemberSignature Language="DocId" Value="P:Microsoft.PowerShell.Commands.NewModuleManifestCommand.NestedModules" />
      <MemberSignature Language="VB.NET" Value="Public Property NestedModules As Object()" />
      <MemberSignature Language="F#" Value="member this.NestedModules : obj[] with get, set" Usage="Microsoft.PowerShell.Commands.NewModuleManifestCommand.NestedModules" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Management.Automation.AllowEmptyCollection</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Management.Automation.Parameter</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Sets the list of files to load by default...
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PassThru">
      <MemberSignature Language="C#" Value="public System.Management.Automation.SwitchParameter PassThru { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Management.Automation.SwitchParameter PassThru" />
      <MemberSignature Language="DocId" Value="P:Microsoft.PowerShell.Commands.NewModuleManifestCommand.PassThru" />
      <MemberSignature Language="VB.NET" Value="Public Property PassThru As SwitchParameter" />
      <MemberSignature Language="F#" Value="member this.PassThru : System.Management.Automation.SwitchParameter with get, set" Usage="Microsoft.PowerShell.Commands.NewModuleManifestCommand.PassThru" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Management.Automation.Parameter</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Management.Automation.SwitchParameter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            This parameter causes the module manifest string to be to the output stream...
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Path">
      <MemberSignature Language="C#" Value="public string Path { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Path" />
      <MemberSignature Language="DocId" Value="P:Microsoft.PowerShell.Commands.NewModuleManifestCommand.Path" />
      <MemberSignature Language="VB.NET" Value="Public Property Path As String" />
      <MemberSignature Language="F#" Value="member this.Path : string with get, set" Usage="Microsoft.PowerShell.Commands.NewModuleManifestCommand.Path" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Management.Automation.Parameter(Mandatory=true, Position=0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The output path for the generated file...
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PowerShellHostName">
      <MemberSignature Language="C#" Value="public string PowerShellHostName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PowerShellHostName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.PowerShell.Commands.NewModuleManifestCommand.PowerShellHostName" />
      <MemberSignature Language="VB.NET" Value="Public Property PowerShellHostName As String" />
      <MemberSignature Language="F#" Value="member this.PowerShellHostName : string with get, set" Usage="Microsoft.PowerShell.Commands.NewModuleManifestCommand.PowerShellHostName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Management.Automation.Parameter</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Set the name of PowerShell host required by the module.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PowerShellHostVersion">
      <MemberSignature Language="C#" Value="public Version PowerShellHostVersion { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Version PowerShellHostVersion" />
      <MemberSignature Language="DocId" Value="P:Microsoft.PowerShell.Commands.NewModuleManifestCommand.PowerShellHostVersion" />
      <MemberSignature Language="VB.NET" Value="Public Property PowerShellHostVersion As Version" />
      <MemberSignature Language="F#" Value="member this.PowerShellHostVersion : Version with get, set" Usage="Microsoft.PowerShell.Commands.NewModuleManifestCommand.PowerShellHostVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Management.Automation.Parameter</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Version</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Set the version of PowerShell host required by the module.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PowerShellVersion">
      <MemberSignature Language="C#" Value="public Version PowerShellVersion { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Version PowerShellVersion" />
      <MemberSignature Language="DocId" Value="P:Microsoft.PowerShell.Commands.NewModuleManifestCommand.PowerShellVersion" />
      <MemberSignature Language="VB.NET" Value="Public Property PowerShellVersion As Version" />
      <MemberSignature Language="F#" Value="member this.PowerShellVersion : Version with get, set" Usage="Microsoft.PowerShell.Commands.NewModuleManifestCommand.PowerShellVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Management.Automation.Parameter</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Version</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Set the PowerShell version required by this module
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrivateData">
      <MemberSignature Language="C#" Value="public object PrivateData { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object PrivateData" />
      <MemberSignature Language="DocId" Value="P:Microsoft.PowerShell.Commands.NewModuleManifestCommand.PrivateData" />
      <MemberSignature Language="VB.NET" Value="Public Property PrivateData As Object" />
      <MemberSignature Language="F#" Value="member this.PrivateData : obj with get, set" Usage="Microsoft.PowerShell.Commands.NewModuleManifestCommand.PrivateData" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Management.Automation.AllowNull</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Management.Automation.Parameter(Mandatory=false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Specify any module-specific private data here.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessorArchitecture">
      <MemberSignature Language="C#" Value="public System.Reflection.ProcessorArchitecture ProcessorArchitecture { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Reflection.ProcessorArchitecture ProcessorArchitecture" />
      <MemberSignature Language="DocId" Value="P:Microsoft.PowerShell.Commands.NewModuleManifestCommand.ProcessorArchitecture" />
      <MemberSignature Language="VB.NET" Value="Public Property ProcessorArchitecture As ProcessorArchitecture" />
      <MemberSignature Language="F#" Value="member this.ProcessorArchitecture : System.Reflection.ProcessorArchitecture with get, set" Usage="Microsoft.PowerShell.Commands.NewModuleManifestCommand.ProcessorArchitecture" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Management.Automation.Parameter</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.ProcessorArchitecture</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Set the ProcessorArchitecture required by this module
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProjectUri">
      <MemberSignature Language="C#" Value="public Uri ProjectUri { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri ProjectUri" />
      <MemberSignature Language="DocId" Value="P:Microsoft.PowerShell.Commands.NewModuleManifestCommand.ProjectUri" />
      <MemberSignature Language="VB.NET" Value="Public Property ProjectUri As Uri" />
      <MemberSignature Language="F#" Value="member this.ProjectUri : Uri with get, set" Usage="Microsoft.PowerShell.Commands.NewModuleManifestCommand.ProjectUri" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Management.Automation.Parameter(Mandatory=false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Management.Automation.ValidateNotNullOrEmpty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Specify the ProjectUri.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReleaseNotes">
      <MemberSignature Language="C#" Value="public string ReleaseNotes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ReleaseNotes" />
      <MemberSignature Language="DocId" Value="P:Microsoft.PowerShell.Commands.NewModuleManifestCommand.ReleaseNotes" />
      <MemberSignature Language="VB.NET" Value="Public Property ReleaseNotes As String" />
      <MemberSignature Language="F#" Value="member this.ReleaseNotes : string with get, set" Usage="Microsoft.PowerShell.Commands.NewModuleManifestCommand.ReleaseNotes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Management.Automation.Parameter(Mandatory=false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Management.Automation.ValidateNotNullOrEmpty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Specify the ReleaseNotes.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiredAssemblies">
      <MemberSignature Language="C#" Value="public string[] RequiredAssemblies { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] RequiredAssemblies" />
      <MemberSignature Language="DocId" Value="P:Microsoft.PowerShell.Commands.NewModuleManifestCommand.RequiredAssemblies" />
      <MemberSignature Language="VB.NET" Value="Public Property RequiredAssemblies As String()" />
      <MemberSignature Language="F#" Value="member this.RequiredAssemblies : string[] with get, set" Usage="Microsoft.PowerShell.Commands.NewModuleManifestCommand.RequiredAssemblies" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Management.Automation.AllowEmptyCollection</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Management.Automation.Parameter</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Set the list of assemblies to load for this module.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiredModules">
      <MemberSignature Language="C#" Value="public object[] RequiredModules { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object[] RequiredModules" />
      <MemberSignature Language="DocId" Value="P:Microsoft.PowerShell.Commands.NewModuleManifestCommand.RequiredModules" />
      <MemberSignature Language="VB.NET" Value="Public Property RequiredModules As Object()" />
      <MemberSignature Language="F#" Value="member this.RequiredModules : obj[] with get, set" Usage="Microsoft.PowerShell.Commands.NewModuleManifestCommand.RequiredModules" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Management.Automation.Parameter</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Sets the list of Dependencies for the module
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RootModule">
      <MemberSignature Language="C#" Value="public string RootModule { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RootModule" />
      <MemberSignature Language="DocId" Value="P:Microsoft.PowerShell.Commands.NewModuleManifestCommand.RootModule" />
      <MemberSignature Language="VB.NET" Value="Public Property RootModule As String" />
      <MemberSignature Language="F#" Value="member this.RootModule : string with get, set" Usage="Microsoft.PowerShell.Commands.NewModuleManifestCommand.RootModule" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Management.Automation.Alias(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Management.Automation.AllowEmptyString</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Management.Automation.Parameter</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Set the module version...
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScriptsToProcess">
      <MemberSignature Language="C#" Value="public string[] ScriptsToProcess { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] ScriptsToProcess" />
      <MemberSignature Language="DocId" Value="P:Microsoft.PowerShell.Commands.NewModuleManifestCommand.ScriptsToProcess" />
      <MemberSignature Language="VB.NET" Value="Public Property ScriptsToProcess As String()" />
      <MemberSignature Language="F#" Value="member this.ScriptsToProcess : string[] with get, set" Usage="Microsoft.PowerShell.Commands.NewModuleManifestCommand.ScriptsToProcess" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Management.Automation.AllowEmptyCollection</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Management.Automation.Parameter</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Sets the list of ps1 scripts to run in the session state of the import-module invocation.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Tags">
      <MemberSignature Language="C#" Value="public string[] Tags { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] Tags" />
      <MemberSignature Language="DocId" Value="P:Microsoft.PowerShell.Commands.NewModuleManifestCommand.Tags" />
      <MemberSignature Language="VB.NET" Value="Public Property Tags As String()" />
      <MemberSignature Language="F#" Value="member this.Tags : string[] with get, set" Usage="Microsoft.PowerShell.Commands.NewModuleManifestCommand.Tags" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Management.Automation.Parameter(Mandatory=false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Management.Automation.ValidateNotNullOrEmpty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Specify any Tags.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TypesToProcess">
      <MemberSignature Language="C#" Value="public string[] TypesToProcess { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] TypesToProcess" />
      <MemberSignature Language="DocId" Value="P:Microsoft.PowerShell.Commands.NewModuleManifestCommand.TypesToProcess" />
      <MemberSignature Language="VB.NET" Value="Public Property TypesToProcess As String()" />
      <MemberSignature Language="F#" Value="member this.TypesToProcess : string[] with get, set" Usage="Microsoft.PowerShell.Commands.NewModuleManifestCommand.TypesToProcess" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Management.Automation.AllowEmptyCollection</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Management.Automation.Parameter</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Sets the list of types files for the module
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VariablesToExport">
      <MemberSignature Language="C#" Value="public string[] VariablesToExport { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] VariablesToExport" />
      <MemberSignature Language="DocId" Value="P:Microsoft.PowerShell.Commands.NewModuleManifestCommand.VariablesToExport" />
      <MemberSignature Language="VB.NET" Value="Public Property VariablesToExport As String()" />
      <MemberSignature Language="F#" Value="member this.VariablesToExport : string[] with get, set" Usage="Microsoft.PowerShell.Commands.NewModuleManifestCommand.VariablesToExport" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Management.Automation.AllowEmptyCollection</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Management.Automation.Parameter</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Specify any variables to export from this manifest.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>