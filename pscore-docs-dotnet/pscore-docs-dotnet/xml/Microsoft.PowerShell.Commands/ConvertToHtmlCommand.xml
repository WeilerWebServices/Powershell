<Type Name="ConvertToHtmlCommand" FullName="Microsoft.PowerShell.Commands.ConvertToHtmlCommand">
  <TypeSignature Language="C#" Value="public sealed class ConvertToHtmlCommand : System.Management.Automation.PSCmdlet" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ConvertToHtmlCommand extends System.Management.Automation.PSCmdlet" />
  <TypeSignature Language="DocId" Value="T:Microsoft.PowerShell.Commands.ConvertToHtmlCommand" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ConvertToHtmlCommand&#xA;Inherits PSCmdlet" />
  <TypeSignature Language="F#" Value="type ConvertToHtmlCommand = class&#xA;    inherit PSCmdlet" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.PowerShell.Commands.Utility</AssemblyName>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Management.Automation.PSCmdlet</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Management.Automation.Cmdlet("ConvertTo", "Html", DefaultParameterSetName="Page", HelpUri="https://go.microsoft.com/fwlink/?LinkID=113290", RemotingCapability=System.Management.Automation.RemotingCapability.None)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            
             Class comment
            
             </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ConvertToHtmlCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.PowerShell.Commands.ConvertToHtmlCommand.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.PowerShell.Commands.Utility</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="As">
      <MemberSignature Language="C#" Value="public string As { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string As" />
      <MemberSignature Language="DocId" Value="P:Microsoft.PowerShell.Commands.ConvertToHtmlCommand.As" />
      <MemberSignature Language="VB.NET" Value="Public Property As As String" />
      <MemberSignature Language="F#" Value="member this.As : string with get, set" Usage="Microsoft.PowerShell.Commands.ConvertToHtmlCommand.As" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.PowerShell.Commands.Utility</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Management.Automation.Parameter</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Management.Automation.ValidateNotNullOrEmpty</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Management.Automation.ValidateSet(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            This specifies whether the objects should
            be rendered as an HTML TABLE or
            HTML LIST
            </summary>
        <value />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginProcessing">
      <MemberSignature Language="C#" Value="protected override void BeginProcessing ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void BeginProcessing() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.PowerShell.Commands.ConvertToHtmlCommand.BeginProcessing" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub BeginProcessing ()" />
      <MemberSignature Language="F#" Value="override this.BeginProcessing : unit -&gt; unit" Usage="convertToHtmlCommand.BeginProcessing " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.PowerShell.Commands.Utility</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Body">
      <MemberSignature Language="C#" Value="public string[] Body { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] Body" />
      <MemberSignature Language="DocId" Value="P:Microsoft.PowerShell.Commands.ConvertToHtmlCommand.Body" />
      <MemberSignature Language="VB.NET" Value="Public Property Body As String()" />
      <MemberSignature Language="F#" Value="member this.Body : string[] with get, set" Usage="Microsoft.PowerShell.Commands.ConvertToHtmlCommand.Body" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.PowerShell.Commands.Utility</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Management.Automation.Parameter(ParameterSetName="Page", Position=3)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Text to go after the opening body tag
            and before the table
            </summary>
        <value />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Charset">
      <MemberSignature Language="C#" Value="public string Charset { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Charset" />
      <MemberSignature Language="DocId" Value="P:Microsoft.PowerShell.Commands.ConvertToHtmlCommand.Charset" />
      <MemberSignature Language="VB.NET" Value="Public Property Charset As String" />
      <MemberSignature Language="F#" Value="member this.Charset : string with get, set" Usage="Microsoft.PowerShell.Commands.ConvertToHtmlCommand.Charset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.PowerShell.Commands.Utility</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Management.Automation.Parameter(ParameterSetName="Page")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Management.Automation.ValidateNotNullOrEmpty</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Management.Automation.ValidatePattern("^[A-Za-z0-9]\w+\S+[A-Za-z0-9]$")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Specifies the charset encoding for the HTML document
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CssUri">
      <MemberSignature Language="C#" Value="public Uri CssUri { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri CssUri" />
      <MemberSignature Language="DocId" Value="P:Microsoft.PowerShell.Commands.ConvertToHtmlCommand.CssUri" />
      <MemberSignature Language="VB.NET" Value="Public Property CssUri As Uri" />
      <MemberSignature Language="F#" Value="member this.CssUri : Uri with get, set" Usage="Microsoft.PowerShell.Commands.ConvertToHtmlCommand.CssUri" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.PowerShell.Commands.Utility</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Management.Automation.Alias(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Management.Automation.Parameter(ParameterSetName="Page")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Management.Automation.ValidateNotNullOrEmpty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            This specifies a full or partial URI
            for the CSS information.
            The html should reference the css file specified
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndProcessing">
      <MemberSignature Language="C#" Value="protected override void EndProcessing ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void EndProcessing() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.PowerShell.Commands.ConvertToHtmlCommand.EndProcessing" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub EndProcessing ()" />
      <MemberSignature Language="F#" Value="override this.EndProcessing : unit -&gt; unit" Usage="convertToHtmlCommand.EndProcessing " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.PowerShell.Commands.Utility</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Fragment">
      <MemberSignature Language="C#" Value="public System.Management.Automation.SwitchParameter Fragment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Management.Automation.SwitchParameter Fragment" />
      <MemberSignature Language="DocId" Value="P:Microsoft.PowerShell.Commands.ConvertToHtmlCommand.Fragment" />
      <MemberSignature Language="VB.NET" Value="Public Property Fragment As SwitchParameter" />
      <MemberSignature Language="F#" Value="member this.Fragment : System.Management.Automation.SwitchParameter with get, set" Usage="Microsoft.PowerShell.Commands.ConvertToHtmlCommand.Fragment" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.PowerShell.Commands.Utility</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Management.Automation.Parameter(ParameterSetName="Fragment")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Management.Automation.ValidateNotNullOrEmpty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Management.Automation.SwitchParameter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            When this switch is specified generate only the
            HTML representation of the incoming object
            without the HTML,HEAD,TITLE,BODY,etc tags.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Head">
      <MemberSignature Language="C#" Value="public string[] Head { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] Head" />
      <MemberSignature Language="DocId" Value="P:Microsoft.PowerShell.Commands.ConvertToHtmlCommand.Head" />
      <MemberSignature Language="VB.NET" Value="Public Property Head As String()" />
      <MemberSignature Language="F#" Value="member this.Head : string[] with get, set" Usage="Microsoft.PowerShell.Commands.ConvertToHtmlCommand.Head" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.PowerShell.Commands.Utility</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Management.Automation.Parameter(ParameterSetName="Page", Position=1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Text to go into the head section
            of the html doc
            </summary>
        <value />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InputObject">
      <MemberSignature Language="C#" Value="public System.Management.Automation.PSObject InputObject { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Management.Automation.PSObject InputObject" />
      <MemberSignature Language="DocId" Value="P:Microsoft.PowerShell.Commands.ConvertToHtmlCommand.InputObject" />
      <MemberSignature Language="VB.NET" Value="Public Property InputObject As PSObject" />
      <MemberSignature Language="F#" Value="member this.InputObject : System.Management.Automation.PSObject with get, set" Usage="Microsoft.PowerShell.Commands.ConvertToHtmlCommand.InputObject" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.PowerShell.Commands.Utility</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Management.Automation.Parameter(ValueFromPipeline=true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Management.Automation.PSObject</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The incoming object</summary>
        <value />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Meta">
      <MemberSignature Language="C#" Value="public System.Collections.Hashtable Meta { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Hashtable Meta" />
      <MemberSignature Language="DocId" Value="P:Microsoft.PowerShell.Commands.ConvertToHtmlCommand.Meta" />
      <MemberSignature Language="VB.NET" Value="Public Property Meta As Hashtable" />
      <MemberSignature Language="F#" Value="member this.Meta : System.Collections.Hashtable with get, set" Usage="Microsoft.PowerShell.Commands.ConvertToHtmlCommand.Meta" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.PowerShell.Commands.Utility</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Management.Automation.Parameter(ParameterSetName="Page")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Management.Automation.ValidateNotNullOrEmpty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Hashtable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Sets and Gets the meta property of the HTML head
            </summary>
        <value />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PostContent">
      <MemberSignature Language="C#" Value="public string[] PostContent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] PostContent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.PowerShell.Commands.ConvertToHtmlCommand.PostContent" />
      <MemberSignature Language="VB.NET" Value="Public Property PostContent As String()" />
      <MemberSignature Language="F#" Value="member this.PostContent : string[] with get, set" Usage="Microsoft.PowerShell.Commands.ConvertToHtmlCommand.PostContent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.PowerShell.Commands.Utility</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Management.Automation.Parameter</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Management.Automation.ValidateNotNullOrEmpty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Specifies the text to include prior the
            closing body tag of the HTML output
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreContent">
      <MemberSignature Language="C#" Value="public string[] PreContent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] PreContent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.PowerShell.Commands.ConvertToHtmlCommand.PreContent" />
      <MemberSignature Language="VB.NET" Value="Public Property PreContent As String()" />
      <MemberSignature Language="F#" Value="member this.PreContent : string[] with get, set" Usage="Microsoft.PowerShell.Commands.ConvertToHtmlCommand.PreContent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.PowerShell.Commands.Utility</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Management.Automation.Parameter</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Management.Automation.ValidateNotNullOrEmpty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Specifies the text to include after the
            body tag of the HTML output
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessRecord">
      <MemberSignature Language="C#" Value="protected override void ProcessRecord ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void ProcessRecord() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.PowerShell.Commands.ConvertToHtmlCommand.ProcessRecord" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub ProcessRecord ()" />
      <MemberSignature Language="F#" Value="override this.ProcessRecord : unit -&gt; unit" Usage="convertToHtmlCommand.ProcessRecord " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.PowerShell.Commands.Utility</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Property">
      <MemberSignature Language="C#" Value="public object[] Property { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object[] Property" />
      <MemberSignature Language="DocId" Value="P:Microsoft.PowerShell.Commands.ConvertToHtmlCommand.Property" />
      <MemberSignature Language="VB.NET" Value="Public Property Property As Object()" />
      <MemberSignature Language="F#" Value="member this.Property : obj[] with get, set" Usage="Microsoft.PowerShell.Commands.ConvertToHtmlCommand.Property" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.PowerShell.Commands.Utility</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Management.Automation.Parameter(Position=0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The list of properties to display
            These take the form of an MshExpression
            </summary>
        <value />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Title">
      <MemberSignature Language="C#" Value="public string Title { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Title" />
      <MemberSignature Language="DocId" Value="P:Microsoft.PowerShell.Commands.ConvertToHtmlCommand.Title" />
      <MemberSignature Language="VB.NET" Value="Public Property Title As String" />
      <MemberSignature Language="F#" Value="member this.Title : string with get, set" Usage="Microsoft.PowerShell.Commands.ConvertToHtmlCommand.Title" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.PowerShell.Commands.Utility</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Management.Automation.Parameter(ParameterSetName="Page", Position=2)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Management.Automation.ValidateNotNullOrEmpty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The string for the title tag
            The title is also placed in the body of the document
            before the table between h3 tags
            If the -Head parameter is used, this parameter has no
            effect.
            </summary>
        <value />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Transitional">
      <MemberSignature Language="C#" Value="public System.Management.Automation.SwitchParameter Transitional { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Management.Automation.SwitchParameter Transitional" />
      <MemberSignature Language="DocId" Value="P:Microsoft.PowerShell.Commands.ConvertToHtmlCommand.Transitional" />
      <MemberSignature Language="VB.NET" Value="Public Property Transitional As SwitchParameter" />
      <MemberSignature Language="F#" Value="member this.Transitional : System.Management.Automation.SwitchParameter with get, set" Usage="Microsoft.PowerShell.Commands.ConvertToHtmlCommand.Transitional" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.PowerShell.Commands.Utility</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Management.Automation.Parameter(ParameterSetName="Page")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Management.Automation.ValidateNotNullOrEmpty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Management.Automation.SwitchParameter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            When this switch statement is specified,
            it will change the DOCTYPE to XHTML Transitional DTD
            </summary>
        <value />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>