<Type Name="TestPathType" FullName="Microsoft.PowerShell.Commands.TestPathType">
  <TypeSignature Language="C#" Value="public enum TestPathType" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed TestPathType extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:Microsoft.PowerShell.Commands.TestPathType" />
  <TypeSignature Language="VB.NET" Value="Public Enum TestPathType" />
  <TypeSignature Language="F#" Value="type TestPathType = " />
  <AssemblyInfo>
    <AssemblyName>Microsoft.PowerShell.Commands.Management</AssemblyName>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>
            The valid values for the -PathType parameter for test-path
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Any">
      <MemberSignature Language="C#" Value="Any" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.PowerShell.Commands.TestPathType Any = int32(0)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.PowerShell.Commands.TestPathType.Any" />
      <MemberSignature Language="VB.NET" Value="Any" />
      <MemberSignature Language="F#" Value="Any = 0" Usage="Microsoft.PowerShell.Commands.TestPathType.Any" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.PowerShell.Commands.Management</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.PowerShell.Commands.TestPathType</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>
            If the item at the path exists, true will be returned.
            </summary>
      </Docs>
    </Member>
    <Member MemberName="Container">
      <MemberSignature Language="C#" Value="Container" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.PowerShell.Commands.TestPathType Container = int32(1)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.PowerShell.Commands.TestPathType.Container" />
      <MemberSignature Language="VB.NET" Value="Container" />
      <MemberSignature Language="F#" Value="Container = 1" Usage="Microsoft.PowerShell.Commands.TestPathType.Container" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.PowerShell.Commands.Management</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.PowerShell.Commands.TestPathType</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>
            If the item at the path exists and is a container, true will be returned.
            </summary>
      </Docs>
    </Member>
    <Member MemberName="Leaf">
      <MemberSignature Language="C#" Value="Leaf" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.PowerShell.Commands.TestPathType Leaf = int32(2)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.PowerShell.Commands.TestPathType.Leaf" />
      <MemberSignature Language="VB.NET" Value="Leaf" />
      <MemberSignature Language="F#" Value="Leaf = 2" Usage="Microsoft.PowerShell.Commands.TestPathType.Leaf" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.PowerShell.Commands.Management</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.PowerShell.Commands.TestPathType</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>
            If the item at the path exists and is not a container, true will be returned.
            </summary>
      </Docs>
    </Member>
  </Members>
</Type>