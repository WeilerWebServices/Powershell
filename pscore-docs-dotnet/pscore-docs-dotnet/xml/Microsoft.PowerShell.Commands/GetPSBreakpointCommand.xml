<Type Name="GetPSBreakpointCommand" FullName="Microsoft.PowerShell.Commands.GetPSBreakpointCommand">
  <TypeSignature Language="C#" Value="public class GetPSBreakpointCommand : System.Management.Automation.PSCmdlet" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit GetPSBreakpointCommand extends System.Management.Automation.PSCmdlet" />
  <TypeSignature Language="DocId" Value="T:Microsoft.PowerShell.Commands.GetPSBreakpointCommand" />
  <TypeSignature Language="VB.NET" Value="Public Class GetPSBreakpointCommand&#xA;Inherits PSCmdlet" />
  <TypeSignature Language="F#" Value="type GetPSBreakpointCommand = class&#xA;    inherit PSCmdlet" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.PowerShell.Commands.Utility</AssemblyName>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Management.Automation.PSCmdlet</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Management.Automation.Cmdlet("Get", "PSBreakpoint", DefaultParameterSetName="Script", HelpUri="https://go.microsoft.com/fwlink/?LinkID=113325")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Management.Automation.OutputType(typeof(System.Management.Automation.Breakpoint))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            This class implements Remove-PSBreakpoint
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GetPSBreakpointCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.PowerShell.Commands.GetPSBreakpointCommand.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.PowerShell.Commands.Utility</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Command">
      <MemberSignature Language="C#" Value="public string[] Command { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] Command" />
      <MemberSignature Language="DocId" Value="P:Microsoft.PowerShell.Commands.GetPSBreakpointCommand.Command" />
      <MemberSignature Language="VB.NET" Value="Public Property Command As String()" />
      <MemberSignature Language="F#" Value="member this.Command : string[] with get, set" Usage="Microsoft.PowerShell.Commands.GetPSBreakpointCommand.Command" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.PowerShell.Commands.Utility</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Management.Automation.Parameter(Mandatory=true, ParameterSetName="Command")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Management.Automation.ValidateNotNull</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Commands of the breakpoints to output
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public int[] Id { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32[] Id" />
      <MemberSignature Language="DocId" Value="P:Microsoft.PowerShell.Commands.GetPSBreakpointCommand.Id" />
      <MemberSignature Language="VB.NET" Value="Public Property Id As Integer()" />
      <MemberSignature Language="F#" Value="member this.Id : int[] with get, set" Usage="Microsoft.PowerShell.Commands.GetPSBreakpointCommand.Id" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.PowerShell.Commands.Utility</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Management.Automation.Parameter(Mandatory=true, ParameterSetName="Id", Position=0, ValueFromPipeline=true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Management.Automation.ValidateNotNull</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            IDs of the breakpoints to output
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessRecord">
      <MemberSignature Language="C#" Value="protected override void ProcessRecord ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void ProcessRecord() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.PowerShell.Commands.GetPSBreakpointCommand.ProcessRecord" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub ProcessRecord ()" />
      <MemberSignature Language="F#" Value="override this.ProcessRecord : unit -&gt; unit" Usage="getPSBreakpointCommand.ProcessRecord " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.PowerShell.Commands.Utility</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            remove breakpoints
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Script">
      <MemberSignature Language="C#" Value="public string[] Script { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] Script" />
      <MemberSignature Language="DocId" Value="P:Microsoft.PowerShell.Commands.GetPSBreakpointCommand.Script" />
      <MemberSignature Language="VB.NET" Value="Public Property Script As String()" />
      <MemberSignature Language="F#" Value="member this.Script : string[] with get, set" Usage="Microsoft.PowerShell.Commands.GetPSBreakpointCommand.Script" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.PowerShell.Commands.Utility</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Management.Automation.Parameter(ParameterSetName="Script", Position=0, ValueFromPipeline=true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Management.Automation.Parameter(ParameterSetName="Variable")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Management.Automation.Parameter(ParameterSetName="Command")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Management.Automation.Parameter(ParameterSetName="Type")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Management.Automation.ValidateNotNullOrEmpty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Scripts of the breakpoints to output
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public Microsoft.PowerShell.Commands.BreakpointType[] Type { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.PowerShell.Commands.BreakpointType[] Type" />
      <MemberSignature Language="DocId" Value="P:Microsoft.PowerShell.Commands.GetPSBreakpointCommand.Type" />
      <MemberSignature Language="VB.NET" Value="Public Property Type As BreakpointType()" />
      <MemberSignature Language="F#" Value="member this.Type : Microsoft.PowerShell.Commands.BreakpointType[] with get, set" Usage="Microsoft.PowerShell.Commands.GetPSBreakpointCommand.Type" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.PowerShell.Commands.Utility</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Management.Automation.Parameter(Mandatory=true, ParameterSetName="Type", Position=0, ValueFromPipeline=true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Management.Automation.ValidateNotNull</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.PowerShell.Commands.BreakpointType[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Commands of the breakpoints to output
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Variable">
      <MemberSignature Language="C#" Value="public string[] Variable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] Variable" />
      <MemberSignature Language="DocId" Value="P:Microsoft.PowerShell.Commands.GetPSBreakpointCommand.Variable" />
      <MemberSignature Language="VB.NET" Value="Public Property Variable As String()" />
      <MemberSignature Language="F#" Value="member this.Variable : string[] with get, set" Usage="Microsoft.PowerShell.Commands.GetPSBreakpointCommand.Variable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.PowerShell.Commands.Utility</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Management.Automation.Parameter(Mandatory=true, ParameterSetName="Variable")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Management.Automation.ValidateNotNull</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Variables of the breakpoints to output
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>