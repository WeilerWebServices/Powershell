<Type Name="GetVariableCommand" FullName="Microsoft.PowerShell.Commands.GetVariableCommand">
  <TypeSignature Language="C#" Value="public class GetVariableCommand : Microsoft.PowerShell.Commands.VariableCommandBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit GetVariableCommand extends Microsoft.PowerShell.Commands.VariableCommandBase" />
  <TypeSignature Language="DocId" Value="T:Microsoft.PowerShell.Commands.GetVariableCommand" />
  <TypeSignature Language="VB.NET" Value="Public Class GetVariableCommand&#xA;Inherits VariableCommandBase" />
  <TypeSignature Language="F#" Value="type GetVariableCommand = class&#xA;    inherit VariableCommandBase" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.PowerShell.Commands.Utility</AssemblyName>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.PowerShell.Commands.VariableCommandBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Management.Automation.Cmdlet("Get", "Variable", HelpUri="https://go.microsoft.com/fwlink/?LinkID=113336")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Management.Automation.OutputType(typeof(System.Management.Automation.PSVariable))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            Implements get-variable command.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GetVariableCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.PowerShell.Commands.GetVariableCommand.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.PowerShell.Commands.Utility</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Exclude">
      <MemberSignature Language="C#" Value="public string[] Exclude { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] Exclude" />
      <MemberSignature Language="DocId" Value="P:Microsoft.PowerShell.Commands.GetVariableCommand.Exclude" />
      <MemberSignature Language="VB.NET" Value="Public Property Exclude As String()" />
      <MemberSignature Language="F#" Value="member this.Exclude : string[] with get, set" Usage="Microsoft.PowerShell.Commands.GetVariableCommand.Exclude" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.PowerShell.Commands.Utility</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Management.Automation.Parameter</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
             The Exclude parameter for all the variable commands
             </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Include">
      <MemberSignature Language="C#" Value="public string[] Include { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] Include" />
      <MemberSignature Language="DocId" Value="P:Microsoft.PowerShell.Commands.GetVariableCommand.Include" />
      <MemberSignature Language="VB.NET" Value="Public Property Include As String()" />
      <MemberSignature Language="F#" Value="member this.Include : string[] with get, set" Usage="Microsoft.PowerShell.Commands.GetVariableCommand.Include" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.PowerShell.Commands.Utility</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Management.Automation.Parameter</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
             The Include parameter for all the variable commands
             </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string[] Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] Name" />
      <MemberSignature Language="DocId" Value="P:Microsoft.PowerShell.Commands.GetVariableCommand.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String()" />
      <MemberSignature Language="F#" Value="member this.Name : string[] with get, set" Usage="Microsoft.PowerShell.Commands.GetVariableCommand.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.PowerShell.Commands.Utility</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Management.Automation.Parameter(Position=0, ValueFromPipeline=true, ValueFromPipelineByPropertyName=true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Management.Automation.ValidateNotNullOrEmpty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Name of the PSVariable
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessRecord">
      <MemberSignature Language="C#" Value="protected override void ProcessRecord ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void ProcessRecord() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.PowerShell.Commands.GetVariableCommand.ProcessRecord" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub ProcessRecord ()" />
      <MemberSignature Language="F#" Value="override this.ProcessRecord : unit -&gt; unit" Usage="getVariableCommand.ProcessRecord " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.PowerShell.Commands.Utility</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Implements ProcessRecord() method for get-variable's command.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValueOnly">
      <MemberSignature Language="C#" Value="public System.Management.Automation.SwitchParameter ValueOnly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Management.Automation.SwitchParameter ValueOnly" />
      <MemberSignature Language="DocId" Value="P:Microsoft.PowerShell.Commands.GetVariableCommand.ValueOnly" />
      <MemberSignature Language="VB.NET" Value="Public Property ValueOnly As SwitchParameter" />
      <MemberSignature Language="F#" Value="member this.ValueOnly : System.Management.Automation.SwitchParameter with get, set" Usage="Microsoft.PowerShell.Commands.GetVariableCommand.ValueOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.PowerShell.Commands.Utility</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Management.Automation.Parameter</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Management.Automation.SwitchParameter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Output only the value(s) of the requested variable(s).
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>