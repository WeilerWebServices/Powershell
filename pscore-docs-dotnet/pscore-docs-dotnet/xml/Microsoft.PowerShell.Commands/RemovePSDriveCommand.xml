<Type Name="RemovePSDriveCommand" FullName="Microsoft.PowerShell.Commands.RemovePSDriveCommand">
  <TypeSignature Language="C#" Value="public class RemovePSDriveCommand : Microsoft.PowerShell.Commands.DriveMatchingCoreCommandBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RemovePSDriveCommand extends Microsoft.PowerShell.Commands.DriveMatchingCoreCommandBase" />
  <TypeSignature Language="DocId" Value="T:Microsoft.PowerShell.Commands.RemovePSDriveCommand" />
  <TypeSignature Language="VB.NET" Value="Public Class RemovePSDriveCommand&#xA;Inherits DriveMatchingCoreCommandBase" />
  <TypeSignature Language="F#" Value="type RemovePSDriveCommand = class&#xA;    inherit DriveMatchingCoreCommandBase" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.PowerShell.Commands.Management</AssemblyName>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.PowerShell.Commands.DriveMatchingCoreCommandBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Management.Automation.Cmdlet("Remove", "PSDrive", DefaultParameterSetName="Name", HelpUri="https://go.microsoft.com/fwlink/?LinkID=113376", SupportsShouldProcess=true, SupportsTransactions=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            Removes a drive that is mounted in the Monad namespace.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RemovePSDriveCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.PowerShell.Commands.RemovePSDriveCommand.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.PowerShell.Commands.Management</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Force">
      <MemberSignature Language="C#" Value="public override System.Management.Automation.SwitchParameter Force { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Management.Automation.SwitchParameter Force" />
      <MemberSignature Language="DocId" Value="P:Microsoft.PowerShell.Commands.RemovePSDriveCommand.Force" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Force As SwitchParameter" />
      <MemberSignature Language="F#" Value="member this.Force : System.Management.Automation.SwitchParameter with get, set" Usage="Microsoft.PowerShell.Commands.RemovePSDriveCommand.Force" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.PowerShell.Commands.Management</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Management.Automation.Parameter</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Management.Automation.SwitchParameter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
             Gets or sets the force property which determines if the drive
             should be removed even if there were errors.
             </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LiteralName">
      <MemberSignature Language="C#" Value="public string[] LiteralName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] LiteralName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.PowerShell.Commands.RemovePSDriveCommand.LiteralName" />
      <MemberSignature Language="VB.NET" Value="Public Property LiteralName As String()" />
      <MemberSignature Language="F#" Value="member this.LiteralName : string[] with get, set" Usage="Microsoft.PowerShell.Commands.RemovePSDriveCommand.LiteralName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.PowerShell.Commands.Management</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Management.Automation.Parameter(Mandatory=true, ParameterSetName="LiteralName", Position=0, ValueFromPipeline=false, ValueFromPipelineByPropertyName=true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the literal name parameter to the command
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string[] Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] Name" />
      <MemberSignature Language="DocId" Value="P:Microsoft.PowerShell.Commands.RemovePSDriveCommand.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String()" />
      <MemberSignature Language="F#" Value="member this.Name : string[] with get, set" Usage="Microsoft.PowerShell.Commands.RemovePSDriveCommand.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.PowerShell.Commands.Management</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Management.Automation.AllowEmptyCollection</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Management.Automation.AllowNull</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Management.Automation.Parameter(Mandatory=true, ParameterSetName="Name", Position=0, ValueFromPipelineByPropertyName=true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the name of the drive to remove.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessRecord">
      <MemberSignature Language="C#" Value="protected override void ProcessRecord ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void ProcessRecord() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.PowerShell.Commands.RemovePSDriveCommand.ProcessRecord" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub ProcessRecord ()" />
      <MemberSignature Language="F#" Value="override this.ProcessRecord : unit -&gt; unit" Usage="removePSDriveCommand.ProcessRecord " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.PowerShell.Commands.Management</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Removes the specified drive from the Monad namespace using the name
            of the drive.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProviderSupportsShouldProcess">
      <MemberSignature Language="C#" Value="protected override bool ProviderSupportsShouldProcess { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ProviderSupportsShouldProcess" />
      <MemberSignature Language="DocId" Value="P:Microsoft.PowerShell.Commands.RemovePSDriveCommand.ProviderSupportsShouldProcess" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ProviderSupportsShouldProcess As Boolean" />
      <MemberSignature Language="F#" Value="member this.ProviderSupportsShouldProcess : bool" Usage="Microsoft.PowerShell.Commands.RemovePSDriveCommand.ProviderSupportsShouldProcess" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.PowerShell.Commands.Management</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Determines if the provider for the specified path supports ShouldProcess
            </summary>
        <value />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PSProvider">
      <MemberSignature Language="C#" Value="public string[] PSProvider { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] PSProvider" />
      <MemberSignature Language="DocId" Value="P:Microsoft.PowerShell.Commands.RemovePSDriveCommand.PSProvider" />
      <MemberSignature Language="VB.NET" Value="Public Property PSProvider As String()" />
      <MemberSignature Language="F#" Value="member this.PSProvider : string[] with get, set" Usage="Microsoft.PowerShell.Commands.RemovePSDriveCommand.PSProvider" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.PowerShell.Commands.Management</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Management.Automation.Parameter(ValueFromPipelineByPropertyName=true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the name provider(s) for which the drives should be removed.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Scope">
      <MemberSignature Language="C#" Value="public string Scope { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Scope" />
      <MemberSignature Language="DocId" Value="P:Microsoft.PowerShell.Commands.RemovePSDriveCommand.Scope" />
      <MemberSignature Language="VB.NET" Value="Public Property Scope As String" />
      <MemberSignature Language="F#" Value="member this.Scope : string with get, set" Usage="Microsoft.PowerShell.Commands.RemovePSDriveCommand.Scope" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.PowerShell.Commands.Management</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Management.Automation.Parameter(ValueFromPipelineByPropertyName=true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the scope identifier from which to remove the drive.
            If the scope is null or empty, the scope hierarchy will be searched
            starting at the current scope through all the parent scopes to the
            global scope until a drive of the given name is found to remove.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>