<Type Name="RemoveModuleCommand" FullName="Microsoft.PowerShell.Commands.RemoveModuleCommand">
  <TypeSignature Language="C#" Value="public sealed class RemoveModuleCommand : Microsoft.PowerShell.Commands.ModuleCmdletBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit RemoveModuleCommand extends Microsoft.PowerShell.Commands.ModuleCmdletBase" />
  <TypeSignature Language="DocId" Value="T:Microsoft.PowerShell.Commands.RemoveModuleCommand" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class RemoveModuleCommand&#xA;Inherits ModuleCmdletBase" />
  <TypeSignature Language="F#" Value="type RemoveModuleCommand = class&#xA;    inherit ModuleCmdletBase" />
  <AssemblyInfo>
    <AssemblyName>System.Management.Automation</AssemblyName>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.PowerShell.Commands.ModuleCmdletBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Management.Automation.Cmdlet("Remove", "Module", HelpUri="https://go.microsoft.com/fwlink/?LinkID=141556", SupportsShouldProcess=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            Implements a cmdlet that gets the list of loaded modules...
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RemoveModuleCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.PowerShell.Commands.RemoveModuleCommand.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndProcessing">
      <MemberSignature Language="C#" Value="protected override void EndProcessing ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void EndProcessing() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.PowerShell.Commands.RemoveModuleCommand.EndProcessing" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub EndProcessing ()" />
      <MemberSignature Language="F#" Value="override this.EndProcessing : unit -&gt; unit" Usage="removeModuleCommand.EndProcessing " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Reports an error if no modules were removed...
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Force">
      <MemberSignature Language="C#" Value="public System.Management.Automation.SwitchParameter Force { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Management.Automation.SwitchParameter Force" />
      <MemberSignature Language="DocId" Value="P:Microsoft.PowerShell.Commands.RemoveModuleCommand.Force" />
      <MemberSignature Language="VB.NET" Value="Public Property Force As SwitchParameter" />
      <MemberSignature Language="F#" Value="member this.Force : System.Management.Automation.SwitchParameter with get, set" Usage="Microsoft.PowerShell.Commands.RemoveModuleCommand.Force" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Management.Automation.Parameter</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Management.Automation.SwitchParameter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            If provided, this parameter will allow readonly modules to be removed.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FullyQualifiedName">
      <MemberSignature Language="C#" Value="public Microsoft.PowerShell.Commands.ModuleSpecification[] FullyQualifiedName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.PowerShell.Commands.ModuleSpecification[] FullyQualifiedName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.PowerShell.Commands.RemoveModuleCommand.FullyQualifiedName" />
      <MemberSignature Language="VB.NET" Value="Public Property FullyQualifiedName As ModuleSpecification()" />
      <MemberSignature Language="F#" Value="member this.FullyQualifiedName : Microsoft.PowerShell.Commands.ModuleSpecification[] with get, set" Usage="Microsoft.PowerShell.Commands.RemoveModuleCommand.FullyQualifiedName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Management.Automation.Parameter(Mandatory=true, ParameterSetName="FullyQualifiedName", Position=0, ValueFromPipeline=true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.PowerShell.Commands.ModuleSpecification[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            This parameter specifies the current pipeline object
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ModuleInfo">
      <MemberSignature Language="C#" Value="public System.Management.Automation.PSModuleInfo[] ModuleInfo { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Management.Automation.PSModuleInfo[] ModuleInfo" />
      <MemberSignature Language="DocId" Value="P:Microsoft.PowerShell.Commands.RemoveModuleCommand.ModuleInfo" />
      <MemberSignature Language="VB.NET" Value="Public Property ModuleInfo As PSModuleInfo()" />
      <MemberSignature Language="F#" Value="member this.ModuleInfo : System.Management.Automation.PSModuleInfo[] with get, set" Usage="Microsoft.PowerShell.Commands.RemoveModuleCommand.ModuleInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Management.Automation.Parameter(Mandatory=true, ParameterSetName="ModuleInfo", Position=0, ValueFromPipeline=true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Management.Automation.PSModuleInfo[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            This parameter specifies the current pipeline object
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string[] Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] Name" />
      <MemberSignature Language="DocId" Value="P:Microsoft.PowerShell.Commands.RemoveModuleCommand.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String()" />
      <MemberSignature Language="F#" Value="member this.Name : string[] with get, set" Usage="Microsoft.PowerShell.Commands.RemoveModuleCommand.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Management.Automation.Parameter(Mandatory=true, ParameterSetName="name", Position=0, ValueFromPipeline=true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            This parameter specifies the current pipeline object
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessRecord">
      <MemberSignature Language="C#" Value="protected override void ProcessRecord ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void ProcessRecord() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.PowerShell.Commands.RemoveModuleCommand.ProcessRecord" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub ProcessRecord ()" />
      <MemberSignature Language="F#" Value="override this.ProcessRecord : unit -&gt; unit" Usage="removeModuleCommand.ProcessRecord " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Remove the specified modules. Modules can be specified either through a ModuleInfo or a name.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>