<Type Name="EnableRunspaceDebugCommand" FullName="Microsoft.PowerShell.Commands.EnableRunspaceDebugCommand">
  <TypeSignature Language="C#" Value="public sealed class EnableRunspaceDebugCommand : Microsoft.PowerShell.Commands.CommonRunspaceCommandBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit EnableRunspaceDebugCommand extends Microsoft.PowerShell.Commands.CommonRunspaceCommandBase" />
  <TypeSignature Language="DocId" Value="T:Microsoft.PowerShell.Commands.EnableRunspaceDebugCommand" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class EnableRunspaceDebugCommand&#xA;Inherits CommonRunspaceCommandBase" />
  <TypeSignature Language="F#" Value="type EnableRunspaceDebugCommand = class&#xA;    inherit CommonRunspaceCommandBase" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.PowerShell.Commands.Utility</AssemblyName>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.PowerShell.Commands.CommonRunspaceCommandBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Management.Automation.Cmdlet("Enable", "RunspaceDebug", DefaultParameterSetName="RunspaceNameParameterSet", HelpUri="https://go.microsoft.com/fwlink/?LinkId=403732")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            This cmdlet enables debugging for selected runspaces in the current or specified process.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EnableRunspaceDebugCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.PowerShell.Commands.EnableRunspaceDebugCommand.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.PowerShell.Commands.Utility</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BreakAll">
      <MemberSignature Language="C#" Value="public System.Management.Automation.SwitchParameter BreakAll { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Management.Automation.SwitchParameter BreakAll" />
      <MemberSignature Language="DocId" Value="P:Microsoft.PowerShell.Commands.EnableRunspaceDebugCommand.BreakAll" />
      <MemberSignature Language="VB.NET" Value="Public Property BreakAll As SwitchParameter" />
      <MemberSignature Language="F#" Value="member this.BreakAll : System.Management.Automation.SwitchParameter with get, set" Usage="Microsoft.PowerShell.Commands.EnableRunspaceDebugCommand.BreakAll" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.PowerShell.Commands.Utility</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Management.Automation.Parameter(ParameterSetName="RunspaceParameterSet", Position=1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Management.Automation.Parameter(ParameterSetName="RunspaceNameParameterSet", Position=1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Management.Automation.Parameter(ParameterSetName="RunspaceIdParameterSet", Position=1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Management.Automation.SwitchParameter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            When true this property will cause any running command or script in the Runspace
            to stop in step mode, regardless of whether a debugger is currently attached.  The
            script or command will remain stopped until a debugger is attached to debug the
            current stop point.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessRecord">
      <MemberSignature Language="C#" Value="protected override void ProcessRecord ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void ProcessRecord() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.PowerShell.Commands.EnableRunspaceDebugCommand.ProcessRecord" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub ProcessRecord ()" />
      <MemberSignature Language="F#" Value="override this.ProcessRecord : unit -&gt; unit" Usage="enableRunspaceDebugCommand.ProcessRecord " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.PowerShell.Commands.Utility</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Process Record
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>