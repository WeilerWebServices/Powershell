<Type Name="ConvertFromCsvCommand" FullName="Microsoft.PowerShell.Commands.ConvertFromCsvCommand">
  <TypeSignature Language="C#" Value="public sealed class ConvertFromCsvCommand : System.Management.Automation.PSCmdlet" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ConvertFromCsvCommand extends System.Management.Automation.PSCmdlet" />
  <TypeSignature Language="DocId" Value="T:Microsoft.PowerShell.Commands.ConvertFromCsvCommand" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ConvertFromCsvCommand&#xA;Inherits PSCmdlet" />
  <TypeSignature Language="F#" Value="type ConvertFromCsvCommand = class&#xA;    inherit PSCmdlet" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.PowerShell.Commands.Utility</AssemblyName>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Management.Automation.PSCmdlet</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Management.Automation.Cmdlet("ConvertFrom", "Csv", DefaultParameterSetName="Delimiter", HelpUri="https://go.microsoft.com/fwlink/?LinkID=135201", RemotingCapability=System.Management.Automation.RemotingCapability.None)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            Implements ConvertFrom-Csv command
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ConvertFromCsvCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.PowerShell.Commands.ConvertFromCsvCommand.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.PowerShell.Commands.Utility</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginProcessing">
      <MemberSignature Language="C#" Value="protected override void BeginProcessing ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void BeginProcessing() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.PowerShell.Commands.ConvertFromCsvCommand.BeginProcessing" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub BeginProcessing ()" />
      <MemberSignature Language="F#" Value="override this.BeginProcessing : unit -&gt; unit" Usage="convertFromCsvCommand.BeginProcessing " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.PowerShell.Commands.Utility</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            BeginProcessing override
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Delimiter">
      <MemberSignature Language="C#" Value="public char Delimiter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance char Delimiter" />
      <MemberSignature Language="DocId" Value="P:Microsoft.PowerShell.Commands.ConvertFromCsvCommand.Delimiter" />
      <MemberSignature Language="VB.NET" Value="Public Property Delimiter As Char" />
      <MemberSignature Language="F#" Value="member this.Delimiter : char with get, set" Usage="Microsoft.PowerShell.Commands.ConvertFromCsvCommand.Delimiter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.PowerShell.Commands.Utility</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Management.Automation.Parameter(ParameterSetName="Delimiter", Position=1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Management.Automation.ValidateNotNull</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Management.Automation.ValidateNotNullOrEmpty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Property that sets delimiter
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Header">
      <MemberSignature Language="C#" Value="public string[] Header { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] Header" />
      <MemberSignature Language="DocId" Value="P:Microsoft.PowerShell.Commands.ConvertFromCsvCommand.Header" />
      <MemberSignature Language="VB.NET" Value="Public Property Header As String()" />
      <MemberSignature Language="F#" Value="member this.Header : string[] with get, set" Usage="Microsoft.PowerShell.Commands.ConvertFromCsvCommand.Header" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.PowerShell.Commands.Utility</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Management.Automation.Parameter(Mandatory=false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Management.Automation.ValidateNotNull</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Management.Automation.ValidateNotNullOrEmpty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
             Header property to customize the names
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InputObject">
      <MemberSignature Language="C#" Value="public System.Management.Automation.PSObject[] InputObject { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Management.Automation.PSObject[] InputObject" />
      <MemberSignature Language="DocId" Value="P:Microsoft.PowerShell.Commands.ConvertFromCsvCommand.InputObject" />
      <MemberSignature Language="VB.NET" Value="Public Property InputObject As PSObject()" />
      <MemberSignature Language="F#" Value="member this.InputObject : System.Management.Automation.PSObject[] with get, set" Usage="Microsoft.PowerShell.Commands.ConvertFromCsvCommand.InputObject" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.PowerShell.Commands.Utility</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Management.Automation.Parameter(Mandatory=true, Position=0, ValueFromPipeline=true, ValueFromPipelineByPropertyName=true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Management.Automation.ValidateNotNull</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Management.Automation.ValidateNotNullOrEmpty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Management.Automation.PSObject[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Input Object which is written in Csv format
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessRecord">
      <MemberSignature Language="C#" Value="protected override void ProcessRecord ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void ProcessRecord() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.PowerShell.Commands.ConvertFromCsvCommand.ProcessRecord" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub ProcessRecord ()" />
      <MemberSignature Language="F#" Value="override this.ProcessRecord : unit -&gt; unit" Usage="convertFromCsvCommand.ProcessRecord " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.PowerShell.Commands.Utility</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Convert the current input object to Csv and write to stream/WriteObject
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UseCulture">
      <MemberSignature Language="C#" Value="public System.Management.Automation.SwitchParameter UseCulture { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Management.Automation.SwitchParameter UseCulture" />
      <MemberSignature Language="DocId" Value="P:Microsoft.PowerShell.Commands.ConvertFromCsvCommand.UseCulture" />
      <MemberSignature Language="VB.NET" Value="Public Property UseCulture As SwitchParameter" />
      <MemberSignature Language="F#" Value="member this.UseCulture : System.Management.Automation.SwitchParameter with get, set" Usage="Microsoft.PowerShell.Commands.ConvertFromCsvCommand.UseCulture" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.PowerShell.Commands.Utility</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Management.Automation.Parameter(Mandatory=true, ParameterSetName="UseCulture")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Management.Automation.ValidateNotNull</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Management.Automation.ValidateNotNullOrEmpty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Management.Automation.SwitchParameter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Culture switch for csv conversion
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>