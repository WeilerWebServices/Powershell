<Type Name="OpenMode" FullName="Microsoft.PowerShell.Commands.OpenMode">
  <TypeSignature Language="C#" Value="public enum OpenMode" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed OpenMode extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:Microsoft.PowerShell.Commands.OpenMode" />
  <TypeSignature Language="VB.NET" Value="Public Enum OpenMode" />
  <TypeSignature Language="F#" Value="type OpenMode = " />
  <AssemblyInfo>
    <AssemblyName>System.Management.Automation</AssemblyName>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>
             The enum used by commands to allow the user to specify how
             a file (or other item) should be opened.
             </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="Add" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.PowerShell.Commands.OpenMode Add = int32(0)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.PowerShell.Commands.OpenMode.Add" />
      <MemberSignature Language="VB.NET" Value="Add" />
      <MemberSignature Language="F#" Value="Add = 0" Usage="Microsoft.PowerShell.Commands.OpenMode.Add" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.PowerShell.Commands.OpenMode</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>
            This opens the file for appending (similar to FileMode.Append)
            </summary>
      </Docs>
    </Member>
    <Member MemberName="New">
      <MemberSignature Language="C#" Value="New" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.PowerShell.Commands.OpenMode New = int32(1)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.PowerShell.Commands.OpenMode.New" />
      <MemberSignature Language="VB.NET" Value="New" />
      <MemberSignature Language="F#" Value="New = 1" Usage="Microsoft.PowerShell.Commands.OpenMode.New" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.PowerShell.Commands.OpenMode</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>
            The file must be created new. If the file exists it is an error (similar to FileMode.CreateNew)
            </summary>
      </Docs>
    </Member>
    <Member MemberName="Overwrite">
      <MemberSignature Language="C#" Value="Overwrite" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.PowerShell.Commands.OpenMode Overwrite = int32(2)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.PowerShell.Commands.OpenMode.Overwrite" />
      <MemberSignature Language="VB.NET" Value="Overwrite" />
      <MemberSignature Language="F#" Value="Overwrite = 2" Usage="Microsoft.PowerShell.Commands.OpenMode.Overwrite" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.PowerShell.Commands.OpenMode</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>
            Creates a new file, if the file already exists it is overwritten (similar to FileMode.Create)
            </summary>
      </Docs>
    </Member>
  </Members>
</Type>