<Type Name="NewModuleCommand" FullName="Microsoft.PowerShell.Commands.NewModuleCommand">
  <TypeSignature Language="C#" Value="public sealed class NewModuleCommand : Microsoft.PowerShell.Commands.ModuleCmdletBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit NewModuleCommand extends Microsoft.PowerShell.Commands.ModuleCmdletBase" />
  <TypeSignature Language="DocId" Value="T:Microsoft.PowerShell.Commands.NewModuleCommand" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class NewModuleCommand&#xA;Inherits ModuleCmdletBase" />
  <TypeSignature Language="F#" Value="type NewModuleCommand = class&#xA;    inherit ModuleCmdletBase" />
  <AssemblyInfo>
    <AssemblyName>System.Management.Automation</AssemblyName>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.PowerShell.Commands.ModuleCmdletBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Management.Automation.Cmdlet("New", "Module", DefaultParameterSetName="ScriptBlock", HelpUri="https://go.microsoft.com/fwlink/?LinkID=141554")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Management.Automation.OutputType(typeof(System.Management.Automation.PSModuleInfo))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            Implements a cmdlet that creates a dynamic module from a scriptblock..
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NewModuleCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.PowerShell.Commands.NewModuleCommand.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ArgumentList">
      <MemberSignature Language="C#" Value="public object[] ArgumentList { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object[] ArgumentList" />
      <MemberSignature Language="DocId" Value="P:Microsoft.PowerShell.Commands.NewModuleCommand.ArgumentList" />
      <MemberSignature Language="VB.NET" Value="Public Property ArgumentList As Object()" />
      <MemberSignature Language="F#" Value="member this.ArgumentList : obj[] with get, set" Usage="Microsoft.PowerShell.Commands.NewModuleCommand.ArgumentList" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Management.Automation.Alias(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Management.Automation.Parameter(ValueFromRemainingArguments=true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The arguments to pass to the scriptblock used to create the module
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AsCustomObject">
      <MemberSignature Language="C#" Value="public System.Management.Automation.SwitchParameter AsCustomObject { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Management.Automation.SwitchParameter AsCustomObject" />
      <MemberSignature Language="DocId" Value="P:Microsoft.PowerShell.Commands.NewModuleCommand.AsCustomObject" />
      <MemberSignature Language="VB.NET" Value="Public Property AsCustomObject As SwitchParameter" />
      <MemberSignature Language="F#" Value="member this.AsCustomObject : System.Management.Automation.SwitchParameter with get, set" Usage="Microsoft.PowerShell.Commands.NewModuleCommand.AsCustomObject" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Management.Automation.Parameter</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Management.Automation.SwitchParameter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            This parameter causes the session state instance to be written...
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Cmdlet">
      <MemberSignature Language="C#" Value="public string[] Cmdlet { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] Cmdlet" />
      <MemberSignature Language="DocId" Value="P:Microsoft.PowerShell.Commands.NewModuleCommand.Cmdlet" />
      <MemberSignature Language="VB.NET" Value="Public Property Cmdlet As String()" />
      <MemberSignature Language="F#" Value="member this.Cmdlet : string[] with get, set" Usage="Microsoft.PowerShell.Commands.NewModuleCommand.Cmdlet" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Management.Automation.Parameter</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Management.Automation.ValidateNotNull</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            This parameter specifies the patterns matching the cmdlets to import from the module...
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndProcessing">
      <MemberSignature Language="C#" Value="protected override void EndProcessing ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void EndProcessing() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.PowerShell.Commands.NewModuleCommand.EndProcessing" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub EndProcessing ()" />
      <MemberSignature Language="F#" Value="override this.EndProcessing : unit -&gt; unit" Usage="newModuleCommand.EndProcessing " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Create the new module...
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Function">
      <MemberSignature Language="C#" Value="public string[] Function { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] Function" />
      <MemberSignature Language="DocId" Value="P:Microsoft.PowerShell.Commands.NewModuleCommand.Function" />
      <MemberSignature Language="VB.NET" Value="Public Property Function As String()" />
      <MemberSignature Language="F#" Value="member this.Function : string[] with get, set" Usage="Microsoft.PowerShell.Commands.NewModuleCommand.Function" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Management.Automation.Parameter</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Management.Automation.ValidateNotNull</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            This parameter specifies the patterns matching the functions to import from the module...
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Microsoft.PowerShell.Commands.NewModuleCommand.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="Microsoft.PowerShell.Commands.NewModuleCommand.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Management.Automation.Parameter(Mandatory=true, ParameterSetName="Name", Position=0, ValueFromPipeline=true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            This parameter specifies the name to assign to the dynamic module.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReturnResult">
      <MemberSignature Language="C#" Value="public System.Management.Automation.SwitchParameter ReturnResult { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Management.Automation.SwitchParameter ReturnResult" />
      <MemberSignature Language="DocId" Value="P:Microsoft.PowerShell.Commands.NewModuleCommand.ReturnResult" />
      <MemberSignature Language="VB.NET" Value="Public Property ReturnResult As SwitchParameter" />
      <MemberSignature Language="F#" Value="member this.ReturnResult : System.Management.Automation.SwitchParameter with get, set" Usage="Microsoft.PowerShell.Commands.NewModuleCommand.ReturnResult" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Management.Automation.Parameter</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Management.Automation.SwitchParameter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            This parameter causes the session state instance to be written...
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScriptBlock">
      <MemberSignature Language="C#" Value="public System.Management.Automation.ScriptBlock ScriptBlock { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Management.Automation.ScriptBlock ScriptBlock" />
      <MemberSignature Language="DocId" Value="P:Microsoft.PowerShell.Commands.NewModuleCommand.ScriptBlock" />
      <MemberSignature Language="VB.NET" Value="Public Property ScriptBlock As ScriptBlock" />
      <MemberSignature Language="F#" Value="member this.ScriptBlock : System.Management.Automation.ScriptBlock with get, set" Usage="Microsoft.PowerShell.Commands.NewModuleCommand.ScriptBlock" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Management.Automation.Parameter(Mandatory=true, ParameterSetName="Name", Position=1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Management.Automation.Parameter(Mandatory=true, ParameterSetName="ScriptBlock", Position=0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Management.Automation.ValidateNotNull</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Management.Automation.ScriptBlock</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Specify a scriptblock to use for the module body...
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>