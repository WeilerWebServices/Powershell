<Type Name="GetContentCommand" FullName="Microsoft.PowerShell.Commands.GetContentCommand">
  <TypeSignature Language="C#" Value="public class GetContentCommand : Microsoft.PowerShell.Commands.ContentCommandBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit GetContentCommand extends Microsoft.PowerShell.Commands.ContentCommandBase" />
  <TypeSignature Language="DocId" Value="T:Microsoft.PowerShell.Commands.GetContentCommand" />
  <TypeSignature Language="VB.NET" Value="Public Class GetContentCommand&#xA;Inherits ContentCommandBase" />
  <TypeSignature Language="F#" Value="type GetContentCommand = class&#xA;    inherit ContentCommandBase" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.PowerShell.Commands.Management</AssemblyName>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.PowerShell.Commands.ContentCommandBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Management.Automation.Cmdlet("Get", "Content", DefaultParameterSetName="Path", HelpUri="https://go.microsoft.com/fwlink/?LinkID=113310", SupportsTransactions=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            A command to get the content of an item at a specified path
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GetContentCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.PowerShell.Commands.GetContentCommand.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.PowerShell.Commands.Management</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndProcessing">
      <MemberSignature Language="C#" Value="protected override void EndProcessing ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void EndProcessing() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.PowerShell.Commands.GetContentCommand.EndProcessing" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub EndProcessing ()" />
      <MemberSignature Language="F#" Value="override this.EndProcessing : unit -&gt; unit" Usage="getContentCommand.EndProcessing " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.PowerShell.Commands.Management</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Be sure to clean up
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessRecord">
      <MemberSignature Language="C#" Value="protected override void ProcessRecord ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void ProcessRecord() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.PowerShell.Commands.GetContentCommand.ProcessRecord" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub ProcessRecord ()" />
      <MemberSignature Language="F#" Value="override this.ProcessRecord : unit -&gt; unit" Usage="getContentCommand.ProcessRecord " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.PowerShell.Commands.Management</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Gets the content of an item at the specified path
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadCount">
      <MemberSignature Language="C#" Value="public long ReadCount { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 ReadCount" />
      <MemberSignature Language="DocId" Value="P:Microsoft.PowerShell.Commands.GetContentCommand.ReadCount" />
      <MemberSignature Language="VB.NET" Value="Public Property ReadCount As Long" />
      <MemberSignature Language="F#" Value="member this.ReadCount : int64 with get, set" Usage="Microsoft.PowerShell.Commands.GetContentCommand.ReadCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.PowerShell.Commands.Management</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Management.Automation.Parameter(ValueFromPipelineByPropertyName=true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
             The number of content items to retrieve per block.
             By default this value is 1 which means read one block
             at a time.  To read all blocks at once, set this value
             to a negative number.
             </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Tail">
      <MemberSignature Language="C#" Value="public int Tail { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Tail" />
      <MemberSignature Language="DocId" Value="P:Microsoft.PowerShell.Commands.GetContentCommand.Tail" />
      <MemberSignature Language="VB.NET" Value="Public Property Tail As Integer" />
      <MemberSignature Language="F#" Value="member this.Tail : int with get, set" Usage="Microsoft.PowerShell.Commands.GetContentCommand.Tail" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.PowerShell.Commands.Management</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Management.Automation.Alias(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Management.Automation.Parameter(ValueFromPipelineByPropertyName=true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The number of content items to retrieve from the back of the file.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TotalCount">
      <MemberSignature Language="C#" Value="public long TotalCount { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 TotalCount" />
      <MemberSignature Language="DocId" Value="P:Microsoft.PowerShell.Commands.GetContentCommand.TotalCount" />
      <MemberSignature Language="VB.NET" Value="Public Property TotalCount As Long" />
      <MemberSignature Language="F#" Value="member this.TotalCount : int64 with get, set" Usage="Microsoft.PowerShell.Commands.GetContentCommand.TotalCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.PowerShell.Commands.Management</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Management.Automation.Alias(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Management.Automation.Parameter(ValueFromPipelineByPropertyName=true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
             The number of content items to retrieve. By default this
             value is -1 which means read all the content
             </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>