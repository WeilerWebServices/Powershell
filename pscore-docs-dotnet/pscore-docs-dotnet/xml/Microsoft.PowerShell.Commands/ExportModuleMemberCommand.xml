<Type Name="ExportModuleMemberCommand" FullName="Microsoft.PowerShell.Commands.ExportModuleMemberCommand">
  <TypeSignature Language="C#" Value="public sealed class ExportModuleMemberCommand : System.Management.Automation.PSCmdlet" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ExportModuleMemberCommand extends System.Management.Automation.PSCmdlet" />
  <TypeSignature Language="DocId" Value="T:Microsoft.PowerShell.Commands.ExportModuleMemberCommand" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ExportModuleMemberCommand&#xA;Inherits PSCmdlet" />
  <TypeSignature Language="F#" Value="type ExportModuleMemberCommand = class&#xA;    inherit PSCmdlet" />
  <AssemblyInfo>
    <AssemblyName>System.Management.Automation</AssemblyName>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Management.Automation.PSCmdlet</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Management.Automation.Cmdlet("Export", "ModuleMember", HelpUri="https://go.microsoft.com/fwlink/?LinkID=141551")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            Implements a cmdlet that loads a module
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ExportModuleMemberCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.PowerShell.Commands.ExportModuleMemberCommand.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Alias">
      <MemberSignature Language="C#" Value="public string[] Alias { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] Alias" />
      <MemberSignature Language="DocId" Value="P:Microsoft.PowerShell.Commands.ExportModuleMemberCommand.Alias" />
      <MemberSignature Language="VB.NET" Value="Public Property Alias As String()" />
      <MemberSignature Language="F#" Value="member this.Alias : string[] with get, set" Usage="Microsoft.PowerShell.Commands.ExportModuleMemberCommand.Alias" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Management.Automation.Parameter(ValueFromPipelineByPropertyName=true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Management.Automation.ValidateNotNull</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            This parameter specifies the aliases to import from the module...
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Cmdlet">
      <MemberSignature Language="C#" Value="public string[] Cmdlet { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] Cmdlet" />
      <MemberSignature Language="DocId" Value="P:Microsoft.PowerShell.Commands.ExportModuleMemberCommand.Cmdlet" />
      <MemberSignature Language="VB.NET" Value="Public Property Cmdlet As String()" />
      <MemberSignature Language="F#" Value="member this.Cmdlet : string[] with get, set" Usage="Microsoft.PowerShell.Commands.ExportModuleMemberCommand.Cmdlet" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Management.Automation.AllowEmptyCollection</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Management.Automation.Parameter(ValueFromPipelineByPropertyName=true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            This parameter specifies the functions to import from the module...
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Function">
      <MemberSignature Language="C#" Value="public string[] Function { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] Function" />
      <MemberSignature Language="DocId" Value="P:Microsoft.PowerShell.Commands.ExportModuleMemberCommand.Function" />
      <MemberSignature Language="VB.NET" Value="Public Property Function As String()" />
      <MemberSignature Language="F#" Value="member this.Function : string[] with get, set" Usage="Microsoft.PowerShell.Commands.ExportModuleMemberCommand.Function" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Management.Automation.AllowEmptyCollection</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Management.Automation.Parameter(Position=0, ValueFromPipeline=true, ValueFromPipelineByPropertyName=true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            This parameter specifies the functions to import from the module...
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessRecord">
      <MemberSignature Language="C#" Value="protected override void ProcessRecord ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void ProcessRecord() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.PowerShell.Commands.ExportModuleMemberCommand.ProcessRecord" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub ProcessRecord ()" />
      <MemberSignature Language="F#" Value="override this.ProcessRecord : unit -&gt; unit" Usage="exportModuleMemberCommand.ProcessRecord " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Export the specified functions...
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Variable">
      <MemberSignature Language="C#" Value="public string[] Variable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] Variable" />
      <MemberSignature Language="DocId" Value="P:Microsoft.PowerShell.Commands.ExportModuleMemberCommand.Variable" />
      <MemberSignature Language="VB.NET" Value="Public Property Variable As String()" />
      <MemberSignature Language="F#" Value="member this.Variable : string[] with get, set" Usage="Microsoft.PowerShell.Commands.ExportModuleMemberCommand.Variable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Management.Automation.Parameter(ValueFromPipelineByPropertyName=true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Management.Automation.ValidateNotNull</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            This parameter specifies the variables to import from the module...
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>