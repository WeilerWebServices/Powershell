<Type Name="GetExecutionPolicyCommand" FullName="Microsoft.PowerShell.Commands.GetExecutionPolicyCommand">
  <TypeSignature Language="C#" Value="public class GetExecutionPolicyCommand : System.Management.Automation.PSCmdlet" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit GetExecutionPolicyCommand extends System.Management.Automation.PSCmdlet" />
  <TypeSignature Language="DocId" Value="T:Microsoft.PowerShell.Commands.GetExecutionPolicyCommand" />
  <TypeSignature Language="VB.NET" Value="Public Class GetExecutionPolicyCommand&#xA;Inherits PSCmdlet" />
  <TypeSignature Language="F#" Value="type GetExecutionPolicyCommand = class&#xA;    inherit PSCmdlet" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.PowerShell.Security</AssemblyName>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Management.Automation.PSCmdlet</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Management.Automation.Cmdlet("Get", "ExecutionPolicy", HelpUri="https://go.microsoft.com/fwlink/?LinkID=113315")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Management.Automation.OutputType(typeof(Microsoft.PowerShell.ExecutionPolicy))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
             Defines the implementation of the 'Get-ExecutionPolicy' cmdlet.
             This cmdlet gets the effective execution policy of the shell.
            
             In priority-order (highest priority first,) these come from:
                - Machine-wide Group Policy
                - Current-user Group Policy
                - Current session preference
                - Current user machine preference
                - Local machine preference
             </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GetExecutionPolicyCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.PowerShell.Commands.GetExecutionPolicyCommand.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.PowerShell.Security</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginProcessing">
      <MemberSignature Language="C#" Value="protected override void BeginProcessing ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void BeginProcessing() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.PowerShell.Commands.GetExecutionPolicyCommand.BeginProcessing" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub BeginProcessing ()" />
      <MemberSignature Language="F#" Value="override this.BeginProcessing : unit -&gt; unit" Usage="getExecutionPolicyCommand.BeginProcessing " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.PowerShell.Security</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Outputs the execution policy.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="List">
      <MemberSignature Language="C#" Value="public System.Management.Automation.SwitchParameter List { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Management.Automation.SwitchParameter List" />
      <MemberSignature Language="DocId" Value="P:Microsoft.PowerShell.Commands.GetExecutionPolicyCommand.List" />
      <MemberSignature Language="VB.NET" Value="Public Property List As SwitchParameter" />
      <MemberSignature Language="F#" Value="member this.List : System.Management.Automation.SwitchParameter with get, set" Usage="Microsoft.PowerShell.Commands.GetExecutionPolicyCommand.List" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.PowerShell.Security</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Management.Automation.Parameter(Mandatory=false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Management.Automation.SwitchParameter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the List parameter, which lists all scopes and their execution
            policies.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Scope">
      <MemberSignature Language="C#" Value="public Microsoft.PowerShell.ExecutionPolicyScope Scope { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.PowerShell.ExecutionPolicyScope Scope" />
      <MemberSignature Language="DocId" Value="P:Microsoft.PowerShell.Commands.GetExecutionPolicyCommand.Scope" />
      <MemberSignature Language="VB.NET" Value="Public Property Scope As ExecutionPolicyScope" />
      <MemberSignature Language="F#" Value="member this.Scope : Microsoft.PowerShell.ExecutionPolicyScope with get, set" Usage="Microsoft.PowerShell.Commands.GetExecutionPolicyCommand.Scope" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.PowerShell.Security</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Management.Automation.Parameter(Mandatory=false, Position=0, ValueFromPipelineByPropertyName=true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.PowerShell.ExecutionPolicyScope</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the scope of the execution policy.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>