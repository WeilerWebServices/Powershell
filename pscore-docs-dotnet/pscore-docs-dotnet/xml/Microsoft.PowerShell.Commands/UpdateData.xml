<Type Name="UpdateData" FullName="Microsoft.PowerShell.Commands.UpdateData">
  <TypeSignature Language="C#" Value="public class UpdateData : System.Management.Automation.PSCmdlet" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit UpdateData extends System.Management.Automation.PSCmdlet" />
  <TypeSignature Language="DocId" Value="T:Microsoft.PowerShell.Commands.UpdateData" />
  <TypeSignature Language="VB.NET" Value="Public Class UpdateData&#xA;Inherits PSCmdlet" />
  <TypeSignature Language="F#" Value="type UpdateData = class&#xA;    inherit PSCmdlet" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.PowerShell.Commands.Utility</AssemblyName>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Management.Automation.PSCmdlet</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            This is the base class for update-typedata and update-formatdata
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UpdateData ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.PowerShell.Commands.UpdateData.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.PowerShell.Commands.Utility</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendPath">
      <MemberSignature Language="C#" Value="public string[] AppendPath { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] AppendPath" />
      <MemberSignature Language="DocId" Value="P:Microsoft.PowerShell.Commands.UpdateData.AppendPath" />
      <MemberSignature Language="VB.NET" Value="Public Property AppendPath As String()" />
      <MemberSignature Language="F#" Value="member this.AppendPath : string[] with get, set" Usage="Microsoft.PowerShell.Commands.UpdateData.AppendPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.PowerShell.Commands.Utility</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Management.Automation.Alias(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Management.Automation.Parameter(ParameterSetName="FileSet", Position=0, ValueFromPipeline=true, ValueFromPipelineByPropertyName=true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Management.Automation.ValidateNotNull</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Files to append to the existing set
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FileParameterSet">
      <MemberSignature Language="C#" Value="protected const string FileParameterSet;" />
      <MemberSignature Language="ILAsm" Value=".field family static literal string FileParameterSet" />
      <MemberSignature Language="DocId" Value="F:Microsoft.PowerShell.Commands.UpdateData.FileParameterSet" />
      <MemberSignature Language="VB.NET" Value="Protected Const FileParameterSet As String " />
      <MemberSignature Language="F#" Value="val mutable FileParameterSet : string" Usage="Microsoft.PowerShell.Commands.UpdateData.FileParameterSet" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.PowerShell.Commands.Utility</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            File parameter set name
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrependPath">
      <MemberSignature Language="C#" Value="public string[] PrependPath { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] PrependPath" />
      <MemberSignature Language="DocId" Value="P:Microsoft.PowerShell.Commands.UpdateData.PrependPath" />
      <MemberSignature Language="VB.NET" Value="Public Property PrependPath As String()" />
      <MemberSignature Language="F#" Value="member this.PrependPath : string[] with get, set" Usage="Microsoft.PowerShell.Commands.UpdateData.PrependPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.PowerShell.Commands.Utility</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Management.Automation.Parameter(ParameterSetName="FileSet")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Management.Automation.ValidateNotNull</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Files to prepend to the existing set
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>