<Type Name="SetAuthenticodeSignatureCommand" FullName="Microsoft.PowerShell.Commands.SetAuthenticodeSignatureCommand">
  <TypeSignature Language="C#" Value="public sealed class SetAuthenticodeSignatureCommand : Microsoft.PowerShell.Commands.SignatureCommandsBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SetAuthenticodeSignatureCommand extends Microsoft.PowerShell.Commands.SignatureCommandsBase" />
  <TypeSignature Language="DocId" Value="T:Microsoft.PowerShell.Commands.SetAuthenticodeSignatureCommand" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SetAuthenticodeSignatureCommand&#xA;Inherits SignatureCommandsBase" />
  <TypeSignature Language="F#" Value="type SetAuthenticodeSignatureCommand = class&#xA;    inherit SignatureCommandsBase" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.PowerShell.Security</AssemblyName>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.PowerShell.Commands.SignatureCommandsBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Management.Automation.Cmdlet("Set", "AuthenticodeSignature", DefaultParameterSetName="ByPath", HelpUri="https://go.microsoft.com/fwlink/?LinkID=113391", SupportsShouldProcess=true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Management.Automation.OutputType(typeof(System.Management.Automation.Signature))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            Defines the implementation of the 'set-AuthenticodeSignature' cmdlet.
            This cmdlet sets the digital signature on a given file.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SetAuthenticodeSignatureCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.PowerShell.Commands.SetAuthenticodeSignatureCommand.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.PowerShell.Security</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Initializes a new instance of the SetAuthenticodeSignatureCommand class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Certificate">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.X509Certificates.X509Certificate2 Certificate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.X509Certificates.X509Certificate2 Certificate" />
      <MemberSignature Language="DocId" Value="P:Microsoft.PowerShell.Commands.SetAuthenticodeSignatureCommand.Certificate" />
      <MemberSignature Language="VB.NET" Value="Public Property Certificate As X509Certificate2" />
      <MemberSignature Language="F#" Value="member this.Certificate : System.Security.Cryptography.X509Certificates.X509Certificate2 with get, set" Usage="Microsoft.PowerShell.Commands.SetAuthenticodeSignatureCommand.Certificate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.PowerShell.Security</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Management.Automation.Parameter(Mandatory=true, Position=1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509Certificate2</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the certificate with which to sign the
            file.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Force">
      <MemberSignature Language="C#" Value="public System.Management.Automation.SwitchParameter Force { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Management.Automation.SwitchParameter Force" />
      <MemberSignature Language="DocId" Value="P:Microsoft.PowerShell.Commands.SetAuthenticodeSignatureCommand.Force" />
      <MemberSignature Language="VB.NET" Value="Public Property Force As SwitchParameter" />
      <MemberSignature Language="F#" Value="member this.Force : System.Management.Automation.SwitchParameter with get, set" Usage="Microsoft.PowerShell.Commands.SetAuthenticodeSignatureCommand.Force" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.PowerShell.Security</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Management.Automation.Parameter</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Management.Automation.SwitchParameter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Property that sets force parameter.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HashAlgorithm">
      <MemberSignature Language="C#" Value="public string HashAlgorithm { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HashAlgorithm" />
      <MemberSignature Language="DocId" Value="P:Microsoft.PowerShell.Commands.SetAuthenticodeSignatureCommand.HashAlgorithm" />
      <MemberSignature Language="VB.NET" Value="Public Property HashAlgorithm As String" />
      <MemberSignature Language="F#" Value="member this.HashAlgorithm : string with get, set" Usage="Microsoft.PowerShell.Commands.SetAuthenticodeSignatureCommand.HashAlgorithm" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.PowerShell.Security</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Management.Automation.Parameter(Mandatory=false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the hash algorithm used for signing.
            This string value must represent the name of a Cryptographic Algorithm
            Identifier supported by Windows.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IncludeChain">
      <MemberSignature Language="C#" Value="public string IncludeChain { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string IncludeChain" />
      <MemberSignature Language="DocId" Value="P:Microsoft.PowerShell.Commands.SetAuthenticodeSignatureCommand.IncludeChain" />
      <MemberSignature Language="VB.NET" Value="Public Property IncludeChain As String" />
      <MemberSignature Language="F#" Value="member this.IncludeChain : string with get, set" Usage="Microsoft.PowerShell.Commands.SetAuthenticodeSignatureCommand.IncludeChain" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.PowerShell.Security</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Management.Automation.Parameter(Mandatory=false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Management.Automation.ValidateSet(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
             Gets or sets the additional certificates to
             include in the digital signature.
             Use 'signer' to include only the signer's certificate.
             Use 'notroot' to include all certificates in the certificate
                chain, except for the root authority.
             Use 'all' to include all certificates in the certificate chain.
            
             Defaults to 'notroot'.
             </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PerformAction">
      <MemberSignature Language="C#" Value="protected override System.Management.Automation.Signature PerformAction (string filePath);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Management.Automation.Signature PerformAction(string filePath) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.PowerShell.Commands.SetAuthenticodeSignatureCommand.PerformAction(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function PerformAction (filePath As String) As Signature" />
      <MemberSignature Language="F#" Value="override this.PerformAction : string -&gt; System.Management.Automation.Signature" Usage="setAuthenticodeSignatureCommand.PerformAction filePath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.PowerShell.Security</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Signature</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filePath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filePath">
            The name of the file on which to perform the action.
            </param>
        <summary>
            Sets the digital signature on the specified file.
            </summary>
        <returns>
            The signature on the specified file.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PerformAction">
      <MemberSignature Language="C#" Value="protected override System.Management.Automation.Signature PerformAction (string sourcePathOrExtension, byte[] content);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Management.Automation.Signature PerformAction(string sourcePathOrExtension, unsigned int8[] content) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.PowerShell.Commands.SetAuthenticodeSignatureCommand.PerformAction(System.String,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function PerformAction (sourcePathOrExtension As String, content As Byte()) As Signature" />
      <MemberSignature Language="F#" Value="override this.PerformAction : string * byte[] -&gt; System.Management.Automation.Signature" Usage="setAuthenticodeSignatureCommand.PerformAction (sourcePathOrExtension, content)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.PowerShell.Security</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Signature</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourcePathOrExtension" Type="System.String" />
        <Parameter Name="content" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="sourcePathOrExtension">To be added.</param>
        <param name="content">To be added.</param>
        <summary>
            Not implemented
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TimestampServer">
      <MemberSignature Language="C#" Value="public string TimestampServer { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TimestampServer" />
      <MemberSignature Language="DocId" Value="P:Microsoft.PowerShell.Commands.SetAuthenticodeSignatureCommand.TimestampServer" />
      <MemberSignature Language="VB.NET" Value="Public Property TimestampServer As String" />
      <MemberSignature Language="F#" Value="member this.TimestampServer : string with get, set" Usage="Microsoft.PowerShell.Commands.SetAuthenticodeSignatureCommand.TimestampServer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.PowerShell.Security</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Management.Automation.Parameter(Mandatory=false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the Url of the time stamping server.
            The time stamping server certifies the exact time
            that the certificate was added to the file.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>