<Type Name="SetLocationCommand" FullName="Microsoft.PowerShell.Commands.SetLocationCommand">
  <TypeSignature Language="C#" Value="public class SetLocationCommand : Microsoft.PowerShell.Commands.CoreCommandBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SetLocationCommand extends Microsoft.PowerShell.Commands.CoreCommandBase" />
  <TypeSignature Language="DocId" Value="T:Microsoft.PowerShell.Commands.SetLocationCommand" />
  <TypeSignature Language="VB.NET" Value="Public Class SetLocationCommand&#xA;Inherits CoreCommandBase" />
  <TypeSignature Language="F#" Value="type SetLocationCommand = class&#xA;    inherit CoreCommandBase" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.PowerShell.Commands.Management</AssemblyName>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.PowerShell.Commands.CoreCommandBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Management.Automation.Cmdlet("Set", "Location", DefaultParameterSetName="Path", HelpUri="https://go.microsoft.com/fwlink/?LinkID=113397", SupportsTransactions=true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Management.Automation.OutputType(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            The core command for setting/changing location.
            This is the equivalent of cd command.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SetLocationCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.PowerShell.Commands.SetLocationCommand.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.PowerShell.Commands.Management</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LiteralPath">
      <MemberSignature Language="C#" Value="public string LiteralPath { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LiteralPath" />
      <MemberSignature Language="DocId" Value="P:Microsoft.PowerShell.Commands.SetLocationCommand.LiteralPath" />
      <MemberSignature Language="VB.NET" Value="Public Property LiteralPath As String" />
      <MemberSignature Language="F#" Value="member this.LiteralPath : string with get, set" Usage="Microsoft.PowerShell.Commands.SetLocationCommand.LiteralPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.PowerShell.Commands.Management</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Management.Automation.Alias(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Management.Automation.Parameter(Mandatory=true, ParameterSetName="LiteralPath", ValueFromPipeline=false, ValueFromPipelineByPropertyName=true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the path path property, when bound from the pipeline.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PassThru">
      <MemberSignature Language="C#" Value="public System.Management.Automation.SwitchParameter PassThru { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Management.Automation.SwitchParameter PassThru" />
      <MemberSignature Language="DocId" Value="P:Microsoft.PowerShell.Commands.SetLocationCommand.PassThru" />
      <MemberSignature Language="VB.NET" Value="Public Property PassThru As SwitchParameter" />
      <MemberSignature Language="F#" Value="member this.PassThru : System.Management.Automation.SwitchParameter with get, set" Usage="Microsoft.PowerShell.Commands.SetLocationCommand.PassThru" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.PowerShell.Commands.Management</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Management.Automation.Parameter</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Management.Automation.SwitchParameter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the parameter -passThru which states output from
            the command should be placed in the pipeline.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Path">
      <MemberSignature Language="C#" Value="public string Path { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Path" />
      <MemberSignature Language="DocId" Value="P:Microsoft.PowerShell.Commands.SetLocationCommand.Path" />
      <MemberSignature Language="VB.NET" Value="Public Property Path As String" />
      <MemberSignature Language="F#" Value="member this.Path : string with get, set" Usage="Microsoft.PowerShell.Commands.SetLocationCommand.Path" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.PowerShell.Commands.Management</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Management.Automation.Parameter(ParameterSetName="Path", Position=0, ValueFromPipeline=true, ValueFromPipelineByPropertyName=true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the path property
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessRecord">
      <MemberSignature Language="C#" Value="protected override void ProcessRecord ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void ProcessRecord() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.PowerShell.Commands.SetLocationCommand.ProcessRecord" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub ProcessRecord ()" />
      <MemberSignature Language="F#" Value="override this.ProcessRecord : unit -&gt; unit" Usage="setLocationCommand.ProcessRecord " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.PowerShell.Commands.Management</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            The functional part of the code that does the changing of the current
            working directory.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StackName">
      <MemberSignature Language="C#" Value="public string StackName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StackName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.PowerShell.Commands.SetLocationCommand.StackName" />
      <MemberSignature Language="VB.NET" Value="Public Property StackName As String" />
      <MemberSignature Language="F#" Value="member this.StackName : string with get, set" Usage="Microsoft.PowerShell.Commands.SetLocationCommand.StackName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.PowerShell.Commands.Management</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Management.Automation.Parameter(ParameterSetName="Stack", ValueFromPipelineByPropertyName=true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the StackName parameter which determines which location stack
            to use for the push. If the parameter is missing or empty the default
            location stack is used.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>