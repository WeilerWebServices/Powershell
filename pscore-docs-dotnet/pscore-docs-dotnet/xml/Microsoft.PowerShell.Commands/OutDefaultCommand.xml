<Type Name="OutDefaultCommand" FullName="Microsoft.PowerShell.Commands.OutDefaultCommand">
  <TypeSignature Language="C#" Value="public class OutDefaultCommand : Microsoft.PowerShell.Commands.Internal.Format.FrontEndCommandBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit OutDefaultCommand extends Microsoft.PowerShell.Commands.Internal.Format.FrontEndCommandBase" />
  <TypeSignature Language="DocId" Value="T:Microsoft.PowerShell.Commands.OutDefaultCommand" />
  <TypeSignature Language="VB.NET" Value="Public Class OutDefaultCommand&#xA;Inherits FrontEndCommandBase" />
  <TypeSignature Language="F#" Value="type OutDefaultCommand = class&#xA;    inherit FrontEndCommandBase" />
  <AssemblyInfo>
    <AssemblyName>System.Management.Automation</AssemblyName>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.PowerShell.Commands.Internal.Format.FrontEndCommandBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Management.Automation.Cmdlet("Out", "Default", HelpUri="https://go.microsoft.com/fwlink/?LinkID=113362", RemotingCapability=System.Management.Automation.RemotingCapability.None)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            implementation for the out-default command
            this command it implicitly inject by the
            powershell host at the end of the pipeline as the
            default sink (display to console screen)
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OutDefaultCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.PowerShell.Commands.OutDefaultCommand.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            set inner command
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginProcessing">
      <MemberSignature Language="C#" Value="protected override void BeginProcessing ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void BeginProcessing() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.PowerShell.Commands.OutDefaultCommand.BeginProcessing" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub BeginProcessing ()" />
      <MemberSignature Language="F#" Value="override this.BeginProcessing : unit -&gt; unit" Usage="outDefaultCommand.BeginProcessing " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            just hook up the LineOutput interface
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndProcessing">
      <MemberSignature Language="C#" Value="protected override void EndProcessing ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void EndProcessing() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.PowerShell.Commands.OutDefaultCommand.EndProcessing" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub EndProcessing ()" />
      <MemberSignature Language="F#" Value="override this.EndProcessing : unit -&gt; unit" Usage="outDefaultCommand.EndProcessing " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Swap the outVar with what we've processed, if OutVariable is set.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InternalDispose">
      <MemberSignature Language="C#" Value="protected override void InternalDispose ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void InternalDispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.PowerShell.Commands.OutDefaultCommand.InternalDispose" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub InternalDispose ()" />
      <MemberSignature Language="F#" Value="override this.InternalDispose : unit -&gt; unit" Usage="outDefaultCommand.InternalDispose " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Revert transcription state on Dispose
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessRecord">
      <MemberSignature Language="C#" Value="protected override void ProcessRecord ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void ProcessRecord() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.PowerShell.Commands.OutDefaultCommand.ProcessRecord" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub ProcessRecord ()" />
      <MemberSignature Language="F#" Value="override this.ProcessRecord : unit -&gt; unit" Usage="outDefaultCommand.ProcessRecord " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Process the OutVar, if set
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Transcript">
      <MemberSignature Language="C#" Value="public System.Management.Automation.SwitchParameter Transcript { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Management.Automation.SwitchParameter Transcript" />
      <MemberSignature Language="DocId" Value="P:Microsoft.PowerShell.Commands.OutDefaultCommand.Transcript" />
      <MemberSignature Language="VB.NET" Value="Public Property Transcript As SwitchParameter" />
      <MemberSignature Language="F#" Value="member this.Transcript : System.Management.Automation.SwitchParameter with get, set" Usage="Microsoft.PowerShell.Commands.OutDefaultCommand.Transcript" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Management.Automation.Parameter</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Management.Automation.SwitchParameter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Determines whether objects should be sent to API consumers.
            This command is automatically added to the pipeline when PowerShell is transcribing and
            invoked via API. This ensures that the objects pass through the formatting and output
            system, but can still make it to the API consumer.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>