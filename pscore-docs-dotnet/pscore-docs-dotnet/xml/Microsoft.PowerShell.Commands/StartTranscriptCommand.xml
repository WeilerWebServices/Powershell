<Type Name="StartTranscriptCommand" FullName="Microsoft.PowerShell.Commands.StartTranscriptCommand">
  <TypeSignature Language="C#" Value="public sealed class StartTranscriptCommand : System.Management.Automation.PSCmdlet" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit StartTranscriptCommand extends System.Management.Automation.PSCmdlet" />
  <TypeSignature Language="DocId" Value="T:Microsoft.PowerShell.Commands.StartTranscriptCommand" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class StartTranscriptCommand&#xA;Inherits PSCmdlet" />
  <TypeSignature Language="F#" Value="type StartTranscriptCommand = class&#xA;    inherit PSCmdlet" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.PowerShell.ConsoleHost</AssemblyName>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Management.Automation.PSCmdlet</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Management.Automation.Cmdlet("Start", "Transcript", DefaultParameterSetName="ByPath", HelpUri="https://go.microsoft.com/fwlink/?LinkID=113408", SupportsShouldProcess=true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Management.Automation.OutputType(typeof(System.String))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            
             Implements the start-transcript cmdlet
            
             </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StartTranscriptCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.PowerShell.Commands.StartTranscriptCommand.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.PowerShell.ConsoleHost</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public System.Management.Automation.SwitchParameter Append { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Management.Automation.SwitchParameter Append" />
      <MemberSignature Language="DocId" Value="P:Microsoft.PowerShell.Commands.StartTranscriptCommand.Append" />
      <MemberSignature Language="VB.NET" Value="Public Property Append As SwitchParameter" />
      <MemberSignature Language="F#" Value="member this.Append : System.Management.Automation.SwitchParameter with get, set" Usage="Microsoft.PowerShell.Commands.StartTranscriptCommand.Append" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.PowerShell.ConsoleHost</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Management.Automation.Parameter</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Management.Automation.SwitchParameter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            
             Describes the current state of the activity.
            
             </summary>
        <value />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginProcessing">
      <MemberSignature Language="C#" Value="protected override void BeginProcessing ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void BeginProcessing() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.PowerShell.Commands.StartTranscriptCommand.BeginProcessing" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub BeginProcessing ()" />
      <MemberSignature Language="F#" Value="override this.BeginProcessing : unit -&gt; unit" Usage="startTranscriptCommand.BeginProcessing " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.PowerShell.ConsoleHost</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            
             Starts the transcription
             </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Force">
      <MemberSignature Language="C#" Value="public System.Management.Automation.SwitchParameter Force { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Management.Automation.SwitchParameter Force" />
      <MemberSignature Language="DocId" Value="P:Microsoft.PowerShell.Commands.StartTranscriptCommand.Force" />
      <MemberSignature Language="VB.NET" Value="Public Property Force As SwitchParameter" />
      <MemberSignature Language="F#" Value="member this.Force : System.Management.Automation.SwitchParameter with get, set" Usage="Microsoft.PowerShell.Commands.StartTranscriptCommand.Force" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.PowerShell.ConsoleHost</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Management.Automation.Parameter</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Management.Automation.SwitchParameter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Property that sets force parameter.  This will reset the read-only
            attribute on an existing file.
            </summary>
        <value>To be added.</value>
        <remarks>
            The read-only attribute will not be replaced when the transcript is done.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="IncludeInvocationHeader">
      <MemberSignature Language="C#" Value="public System.Management.Automation.SwitchParameter IncludeInvocationHeader { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Management.Automation.SwitchParameter IncludeInvocationHeader" />
      <MemberSignature Language="DocId" Value="P:Microsoft.PowerShell.Commands.StartTranscriptCommand.IncludeInvocationHeader" />
      <MemberSignature Language="VB.NET" Value="Public Property IncludeInvocationHeader As SwitchParameter" />
      <MemberSignature Language="F#" Value="member this.IncludeInvocationHeader : System.Management.Automation.SwitchParameter with get, set" Usage="Microsoft.PowerShell.Commands.StartTranscriptCommand.IncludeInvocationHeader" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.PowerShell.ConsoleHost</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Management.Automation.Parameter</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Management.Automation.SwitchParameter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Whether to include command invocation time headers between commands.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LiteralPath">
      <MemberSignature Language="C#" Value="public string LiteralPath { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LiteralPath" />
      <MemberSignature Language="DocId" Value="P:Microsoft.PowerShell.Commands.StartTranscriptCommand.LiteralPath" />
      <MemberSignature Language="VB.NET" Value="Public Property LiteralPath As String" />
      <MemberSignature Language="F#" Value="member this.LiteralPath : string with get, set" Usage="Microsoft.PowerShell.Commands.StartTranscriptCommand.LiteralPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.PowerShell.ConsoleHost</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Management.Automation.Alias(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Management.Automation.Parameter(ParameterSetName="ByLiteralPath", Position=0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Management.Automation.ValidateNotNullOrEmpty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The literal name of the file in which to write the transcript.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NoClobber">
      <MemberSignature Language="C#" Value="public System.Management.Automation.SwitchParameter NoClobber { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Management.Automation.SwitchParameter NoClobber" />
      <MemberSignature Language="DocId" Value="P:Microsoft.PowerShell.Commands.StartTranscriptCommand.NoClobber" />
      <MemberSignature Language="VB.NET" Value="Public Property NoClobber As SwitchParameter" />
      <MemberSignature Language="F#" Value="member this.NoClobber : System.Management.Automation.SwitchParameter with get, set" Usage="Microsoft.PowerShell.Commands.StartTranscriptCommand.NoClobber" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.PowerShell.ConsoleHost</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Management.Automation.Alias(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Management.Automation.Parameter</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Management.Automation.SwitchParameter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Property that prevents file overwrite.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OutputDirectory">
      <MemberSignature Language="C#" Value="public string OutputDirectory { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OutputDirectory" />
      <MemberSignature Language="DocId" Value="P:Microsoft.PowerShell.Commands.StartTranscriptCommand.OutputDirectory" />
      <MemberSignature Language="VB.NET" Value="Public Property OutputDirectory As String" />
      <MemberSignature Language="F#" Value="member this.OutputDirectory : string with get, set" Usage="Microsoft.PowerShell.Commands.StartTranscriptCommand.OutputDirectory" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.PowerShell.ConsoleHost</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Management.Automation.Parameter(ParameterSetName="ByOutputDirectory", Position=0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Management.Automation.ValidateNotNullOrEmpty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The literal name of the file in which to write the transcript.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Path">
      <MemberSignature Language="C#" Value="public string Path { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Path" />
      <MemberSignature Language="DocId" Value="P:Microsoft.PowerShell.Commands.StartTranscriptCommand.Path" />
      <MemberSignature Language="VB.NET" Value="Public Property Path As String" />
      <MemberSignature Language="F#" Value="member this.Path : string with get, set" Usage="Microsoft.PowerShell.Commands.StartTranscriptCommand.Path" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.PowerShell.ConsoleHost</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Management.Automation.Parameter(ParameterSetName="ByPath", Position=0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Management.Automation.ValidateNotNullOrEmpty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            
             The name of the file in which to write the transcript. If not provided, the file indicated by the variable
             $TRANSCRIPT is used.  If neither the filename is supplied or $TRANSCRIPT is not set, the filename shall be $HOME/My
             Documents/PowerShell_transcript.YYYYMMDDmmss.txt
            
             </summary>
        <value />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>