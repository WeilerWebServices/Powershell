<Type Name="NewPSSessionOptionCommand" FullName="Microsoft.PowerShell.Commands.NewPSSessionOptionCommand">
  <TypeSignature Language="C#" Value="public sealed class NewPSSessionOptionCommand : System.Management.Automation.PSCmdlet" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit NewPSSessionOptionCommand extends System.Management.Automation.PSCmdlet" />
  <TypeSignature Language="DocId" Value="T:Microsoft.PowerShell.Commands.NewPSSessionOptionCommand" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class NewPSSessionOptionCommand&#xA;Inherits PSCmdlet" />
  <TypeSignature Language="F#" Value="type NewPSSessionOptionCommand = class&#xA;    inherit PSCmdlet" />
  <AssemblyInfo>
    <AssemblyName>System.Management.Automation</AssemblyName>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Management.Automation.PSCmdlet</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Management.Automation.Cmdlet("New", "PSSessionOption", HelpUri="https://go.microsoft.com/fwlink/?LinkID=144305", RemotingCapability=System.Management.Automation.RemotingCapability.None)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Management.Automation.OutputType(typeof(System.Management.Automation.Remoting.PSSessionOption))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            This class implements New-PSSessionOption cmdlet.  
            Spec: TBD
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NewPSSessionOptionCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.PowerShell.Commands.NewPSSessionOptionCommand.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplicationArguments">
      <MemberSignature Language="C#" Value="public System.Management.Automation.PSPrimitiveDictionary ApplicationArguments { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Management.Automation.PSPrimitiveDictionary ApplicationArguments" />
      <MemberSignature Language="DocId" Value="P:Microsoft.PowerShell.Commands.NewPSSessionOptionCommand.ApplicationArguments" />
      <MemberSignature Language="VB.NET" Value="Public Property ApplicationArguments As PSPrimitiveDictionary" />
      <MemberSignature Language="F#" Value="member this.ApplicationArguments : System.Management.Automation.PSPrimitiveDictionary with get, set" Usage="Microsoft.PowerShell.Commands.NewPSSessionOptionCommand.ApplicationArguments" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Management.Automation.Parameter</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Management.Automation.ValidateNotNull</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Management.Automation.PSPrimitiveDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Application arguments the server can see in <see cref="P:System.Management.Automation.Remoting.PSSenderInfo.ApplicationArguments" /></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginProcessing">
      <MemberSignature Language="C#" Value="protected override void BeginProcessing ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void BeginProcessing() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.PowerShell.Commands.NewPSSessionOptionCommand.BeginProcessing" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub BeginProcessing ()" />
      <MemberSignature Language="F#" Value="override this.BeginProcessing : unit -&gt; unit" Usage="newPSSessionOptionCommand.BeginProcessing " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Performs initialization of cmdlet execution.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CancelTimeout">
      <MemberSignature Language="C#" Value="public int CancelTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CancelTimeout" />
      <MemberSignature Language="DocId" Value="P:Microsoft.PowerShell.Commands.NewPSSessionOptionCommand.CancelTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property CancelTimeout As Integer" />
      <MemberSignature Language="F#" Value="member this.CancelTimeout : int with get, set" Usage="Microsoft.PowerShell.Commands.NewPSSessionOptionCommand.CancelTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Management.Automation.Alias(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Management.Automation.Parameter</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Management.Automation.ValidateRange(Mono.Cecil.CustomAttributeArgument, Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The duration for which PowerShell should wait (in milliseconds) before it 
            times out on cancel operations (close runspace or stop powershell). For
            instance, when the user hits ctrl-C, New-PSSession cmdlet tries to call a
            stop on all remote runspaces which are in the Opening state. The user 
            wouldn’t mind waiting for 15 seconds, but this should be time bound and of a 
            shorter duration. A high timeout here like 3 minutes will give the user
            a feeling that the PowerShell client has hung.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Culture">
      <MemberSignature Language="C#" Value="public System.Globalization.CultureInfo Culture { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.CultureInfo Culture" />
      <MemberSignature Language="DocId" Value="P:Microsoft.PowerShell.Commands.NewPSSessionOptionCommand.Culture" />
      <MemberSignature Language="VB.NET" Value="Public Property Culture As CultureInfo" />
      <MemberSignature Language="F#" Value="member this.Culture : System.Globalization.CultureInfo with get, set" Usage="Microsoft.PowerShell.Commands.NewPSSessionOptionCommand.Culture" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Management.Automation.Parameter</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Management.Automation.ValidateNotNull</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Culture that the remote session should use
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IdleTimeout">
      <MemberSignature Language="C#" Value="public int IdleTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 IdleTimeout" />
      <MemberSignature Language="DocId" Value="P:Microsoft.PowerShell.Commands.NewPSSessionOptionCommand.IdleTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property IdleTimeout As Integer" />
      <MemberSignature Language="F#" Value="member this.IdleTimeout : int with get, set" Usage="Microsoft.PowerShell.Commands.NewPSSessionOptionCommand.IdleTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Management.Automation.Alias(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Management.Automation.Parameter</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Management.Automation.ValidateRange(Mono.Cecil.CustomAttributeArgument, Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The duration for which a Runspace on server needs to wait (in milliseconds) before it
            declares the client dead and closes itself down. 
            This is especially important as these values may have to be configured differently 
            for enterprise administration scenarios.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IncludePortInSPN">
      <MemberSignature Language="C#" Value="public System.Management.Automation.SwitchParameter IncludePortInSPN { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Management.Automation.SwitchParameter IncludePortInSPN" />
      <MemberSignature Language="DocId" Value="P:Microsoft.PowerShell.Commands.NewPSSessionOptionCommand.IncludePortInSPN" />
      <MemberSignature Language="VB.NET" Value="Public Property IncludePortInSPN As SwitchParameter" />
      <MemberSignature Language="F#" Value="member this.IncludePortInSPN : System.Management.Automation.SwitchParameter with get, set" Usage="Microsoft.PowerShell.Commands.NewPSSessionOptionCommand.IncludePortInSPN" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Management.Automation.Parameter</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Management.Automation.SwitchParameter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Uses Service Principal Name (SPN) along with the Port number during authentication.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxConnectionRetryCount">
      <MemberSignature Language="C#" Value="public int MaxConnectionRetryCount { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxConnectionRetryCount" />
      <MemberSignature Language="DocId" Value="P:Microsoft.PowerShell.Commands.NewPSSessionOptionCommand.MaxConnectionRetryCount" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxConnectionRetryCount As Integer" />
      <MemberSignature Language="F#" Value="member this.MaxConnectionRetryCount : int with get, set" Usage="Microsoft.PowerShell.Commands.NewPSSessionOptionCommand.MaxConnectionRetryCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Management.Automation.Parameter</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Management.Automation.ValidateRange(Mono.Cecil.CustomAttributeArgument, Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Maximum number of times a connection will be re-attempted when a connection fails due to network
            issues.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaximumReceivedDataSizePerCommand">
      <MemberSignature Language="C#" Value="public int MaximumReceivedDataSizePerCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaximumReceivedDataSizePerCommand" />
      <MemberSignature Language="DocId" Value="P:Microsoft.PowerShell.Commands.NewPSSessionOptionCommand.MaximumReceivedDataSizePerCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property MaximumReceivedDataSizePerCommand As Integer" />
      <MemberSignature Language="F#" Value="member this.MaximumReceivedDataSizePerCommand : int with get, set" Usage="Microsoft.PowerShell.Commands.NewPSSessionOptionCommand.MaximumReceivedDataSizePerCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Management.Automation.Parameter</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Total data (in bytes) that can be received from a remote machine
            targeted towards a command. If null, then the size is unlimited.
            Default is unlimited data.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaximumReceivedObjectSize">
      <MemberSignature Language="C#" Value="public int MaximumReceivedObjectSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaximumReceivedObjectSize" />
      <MemberSignature Language="DocId" Value="P:Microsoft.PowerShell.Commands.NewPSSessionOptionCommand.MaximumReceivedObjectSize" />
      <MemberSignature Language="VB.NET" Value="Public Property MaximumReceivedObjectSize As Integer" />
      <MemberSignature Language="F#" Value="member this.MaximumReceivedObjectSize : int with get, set" Usage="Microsoft.PowerShell.Commands.NewPSSessionOptionCommand.MaximumReceivedObjectSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Management.Automation.Parameter</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Maximum size (in bytes) of a deserialized object received from a remote machine.
            If null, then the size is unlimited. Default is unlimited object size.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaximumRedirection">
      <MemberSignature Language="C#" Value="public int MaximumRedirection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaximumRedirection" />
      <MemberSignature Language="DocId" Value="P:Microsoft.PowerShell.Commands.NewPSSessionOptionCommand.MaximumRedirection" />
      <MemberSignature Language="VB.NET" Value="Public Property MaximumRedirection As Integer" />
      <MemberSignature Language="F#" Value="member this.MaximumRedirection : int with get, set" Usage="Microsoft.PowerShell.Commands.NewPSSessionOptionCommand.MaximumRedirection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Management.Automation.Parameter</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The MaximumRedirection parameter enables the implicit redirection functionality
            -1 = no limit
             0 = no redirection
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NoCompression">
      <MemberSignature Language="C#" Value="public System.Management.Automation.SwitchParameter NoCompression { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Management.Automation.SwitchParameter NoCompression" />
      <MemberSignature Language="DocId" Value="P:Microsoft.PowerShell.Commands.NewPSSessionOptionCommand.NoCompression" />
      <MemberSignature Language="VB.NET" Value="Public Property NoCompression As SwitchParameter" />
      <MemberSignature Language="F#" Value="member this.NoCompression : System.Management.Automation.SwitchParameter with get, set" Usage="Microsoft.PowerShell.Commands.NewPSSessionOptionCommand.NoCompression" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Management.Automation.Parameter</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Management.Automation.SwitchParameter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            If false, underlying WSMan infrastructure will compress data sent on the network.
            If true, data will not be compressed. Compression improves performance by 
            reducing the amount of data sent on the network. Compression my require extra
            memory consumption and CPU usage. In cases where available memory / CPU is less, 
            set this property to "true".
            By default the value of this property is "false".
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NoEncryption">
      <MemberSignature Language="C#" Value="public System.Management.Automation.SwitchParameter NoEncryption { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Management.Automation.SwitchParameter NoEncryption" />
      <MemberSignature Language="DocId" Value="P:Microsoft.PowerShell.Commands.NewPSSessionOptionCommand.NoEncryption" />
      <MemberSignature Language="VB.NET" Value="Public Property NoEncryption As SwitchParameter" />
      <MemberSignature Language="F#" Value="member this.NoEncryption : System.Management.Automation.SwitchParameter with get, set" Usage="Microsoft.PowerShell.Commands.NewPSSessionOptionCommand.NoEncryption" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Management.Automation.Parameter</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Management.Automation.SwitchParameter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The following is the definition of the input parameter "UnEncrypted".
            Specifies that no encryption will be used when doing remote operations over 
            http. Unencrypted traffic is not allowed by default and must be enabled in 
            the local configuration
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NoMachineProfile">
      <MemberSignature Language="C#" Value="public System.Management.Automation.SwitchParameter NoMachineProfile { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Management.Automation.SwitchParameter NoMachineProfile" />
      <MemberSignature Language="DocId" Value="P:Microsoft.PowerShell.Commands.NewPSSessionOptionCommand.NoMachineProfile" />
      <MemberSignature Language="VB.NET" Value="Public Property NoMachineProfile As SwitchParameter" />
      <MemberSignature Language="F#" Value="member this.NoMachineProfile : System.Management.Automation.SwitchParameter with get, set" Usage="Microsoft.PowerShell.Commands.NewPSSessionOptionCommand.NoMachineProfile" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Management.Automation.Parameter</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Management.Automation.SwitchParameter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            If <c>true</c> then Operating System won't load the user profile (i.e. registry keys under HKCU) on the remote server
            which can result in a faster session creation time.  This option won't have any effect if the remote machine has
            already loaded the profile (i.e. in another session). 
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OpenTimeout">
      <MemberSignature Language="C#" Value="public int OpenTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 OpenTimeout" />
      <MemberSignature Language="DocId" Value="P:Microsoft.PowerShell.Commands.NewPSSessionOptionCommand.OpenTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property OpenTimeout As Integer" />
      <MemberSignature Language="F#" Value="member this.OpenTimeout : int with get, set" Usage="Microsoft.PowerShell.Commands.NewPSSessionOptionCommand.OpenTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Management.Automation.Alias(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Management.Automation.Parameter</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Management.Automation.ValidateRange(Mono.Cecil.CustomAttributeArgument, Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The duration for which PowerShell remoting waits (in milliseconds) before timing 
            out on a connection to a remote machine. Simply put, the timeout for a remote 
            runspace creation. 
            
            The user would like to tweak this timeout depending on whether 
            he/she is connecting to a machine in the data center or across a slow WAN.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OperationTimeout">
      <MemberSignature Language="C#" Value="public int OperationTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 OperationTimeout" />
      <MemberSignature Language="DocId" Value="P:Microsoft.PowerShell.Commands.NewPSSessionOptionCommand.OperationTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property OperationTimeout As Integer" />
      <MemberSignature Language="F#" Value="member this.OperationTimeout : int with get, set" Usage="Microsoft.PowerShell.Commands.NewPSSessionOptionCommand.OperationTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Management.Automation.Alias(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Management.Automation.Parameter</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Management.Automation.ValidateRange(Mono.Cecil.CustomAttributeArgument, Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The following is the definition of the input parameter "Timeout".
            Defines the timeout in milliseconds for the wsman operation
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OutputBufferingMode">
      <MemberSignature Language="C#" Value="public System.Management.Automation.Runspaces.OutputBufferingMode OutputBufferingMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Management.Automation.Runspaces.OutputBufferingMode OutputBufferingMode" />
      <MemberSignature Language="DocId" Value="P:Microsoft.PowerShell.Commands.NewPSSessionOptionCommand.OutputBufferingMode" />
      <MemberSignature Language="VB.NET" Value="Public Property OutputBufferingMode As OutputBufferingMode" />
      <MemberSignature Language="F#" Value="member this.OutputBufferingMode : System.Management.Automation.Runspaces.OutputBufferingMode with get, set" Usage="Microsoft.PowerShell.Commands.NewPSSessionOptionCommand.OutputBufferingMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Management.Automation.Parameter</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Runspaces.OutputBufferingMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Specifies the output mode on the server when it is in Disconnected mode
            and its output data cache becomes full.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProxyAccessType">
      <MemberSignature Language="C#" Value="public System.Management.Automation.Remoting.ProxyAccessType ProxyAccessType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Management.Automation.Remoting.ProxyAccessType ProxyAccessType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.PowerShell.Commands.NewPSSessionOptionCommand.ProxyAccessType" />
      <MemberSignature Language="VB.NET" Value="Public Property ProxyAccessType As ProxyAccessType" />
      <MemberSignature Language="F#" Value="member this.ProxyAccessType : System.Management.Automation.Remoting.ProxyAccessType with get, set" Usage="Microsoft.PowerShell.Commands.NewPSSessionOptionCommand.ProxyAccessType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Management.Automation.Parameter</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Management.Automation.ValidateNotNullOrEmpty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Remoting.ProxyAccessType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            By default, ProxyAccessType is None, that means Proxy information (ProxyAccessType, 
            ProxyAuthenticationMechanism and ProxyCredential)is not passed to WSMan at all.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProxyAuthentication">
      <MemberSignature Language="C#" Value="public System.Management.Automation.Runspaces.AuthenticationMechanism ProxyAuthentication { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Management.Automation.Runspaces.AuthenticationMechanism ProxyAuthentication" />
      <MemberSignature Language="DocId" Value="P:Microsoft.PowerShell.Commands.NewPSSessionOptionCommand.ProxyAuthentication" />
      <MemberSignature Language="VB.NET" Value="Public Property ProxyAuthentication As AuthenticationMechanism" />
      <MemberSignature Language="F#" Value="member this.ProxyAuthentication : System.Management.Automation.Runspaces.AuthenticationMechanism with get, set" Usage="Microsoft.PowerShell.Commands.NewPSSessionOptionCommand.ProxyAuthentication" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Management.Automation.Parameter</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Runspaces.AuthenticationMechanism</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The following is the definition of the input parameter "ProxyAuthentication".
            This parameter takes a set of authentication methods the user can select 
            from.  The available options should be as follows:
            - Negotiate: Use the default authentication (as defined by the underlying 
            protocol) for establishing a remote connection.
            - Basic:  Use basic authentication for establishing a remote connection
            - Digest: Use Digest authentication for establishing a remote connection
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProxyCredential">
      <MemberSignature Language="C#" Value="public System.Management.Automation.PSCredential ProxyCredential { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Management.Automation.PSCredential ProxyCredential" />
      <MemberSignature Language="DocId" Value="P:Microsoft.PowerShell.Commands.NewPSSessionOptionCommand.ProxyCredential" />
      <MemberSignature Language="VB.NET" Value="Public Property ProxyCredential As PSCredential" />
      <MemberSignature Language="F#" Value="member this.ProxyCredential : System.Management.Automation.PSCredential with get, set" Usage="Microsoft.PowerShell.Commands.NewPSSessionOptionCommand.ProxyCredential" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Management.Automation.Credential</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Management.Automation.Parameter</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Management.Automation.ValidateNotNullOrEmpty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Management.Automation.PSCredential</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The following is the definition of the input parameter "ProxyCredential".
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SkipCACheck">
      <MemberSignature Language="C#" Value="public System.Management.Automation.SwitchParameter SkipCACheck { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Management.Automation.SwitchParameter SkipCACheck" />
      <MemberSignature Language="DocId" Value="P:Microsoft.PowerShell.Commands.NewPSSessionOptionCommand.SkipCACheck" />
      <MemberSignature Language="VB.NET" Value="Public Property SkipCACheck As SwitchParameter" />
      <MemberSignature Language="F#" Value="member this.SkipCACheck : System.Management.Automation.SwitchParameter with get, set" Usage="Microsoft.PowerShell.Commands.NewPSSessionOptionCommand.SkipCACheck" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Management.Automation.Parameter</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Management.Automation.SwitchParameter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The following is the definition of the input parameter "SkipCACheck".
            When connecting over HTTPS, the client does not validate that the server 
            certificate is signed by a trusted certificate authority (CA). Use only when 
            the remote computer is trusted by other means, for example, if the remote 
            computer is part of a network that is physically secure and isolated or the 
            remote computer is listed as a trusted host in WinRM configuration
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SkipCNCheck">
      <MemberSignature Language="C#" Value="public System.Management.Automation.SwitchParameter SkipCNCheck { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Management.Automation.SwitchParameter SkipCNCheck" />
      <MemberSignature Language="DocId" Value="P:Microsoft.PowerShell.Commands.NewPSSessionOptionCommand.SkipCNCheck" />
      <MemberSignature Language="VB.NET" Value="Public Property SkipCNCheck As SwitchParameter" />
      <MemberSignature Language="F#" Value="member this.SkipCNCheck : System.Management.Automation.SwitchParameter with get, set" Usage="Microsoft.PowerShell.Commands.NewPSSessionOptionCommand.SkipCNCheck" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Management.Automation.Parameter</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Management.Automation.SwitchParameter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The following is the definition of the input parameter "SkipCNCheck".
            Indicates that certificate common name (CN) of the server need not match the 
            hostname of the server. Used only in remote operations using https. This 
            option should only be used for trusted machines
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SkipRevocationCheck">
      <MemberSignature Language="C#" Value="public System.Management.Automation.SwitchParameter SkipRevocationCheck { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Management.Automation.SwitchParameter SkipRevocationCheck" />
      <MemberSignature Language="DocId" Value="P:Microsoft.PowerShell.Commands.NewPSSessionOptionCommand.SkipRevocationCheck" />
      <MemberSignature Language="VB.NET" Value="Public Property SkipRevocationCheck As SwitchParameter" />
      <MemberSignature Language="F#" Value="member this.SkipRevocationCheck : System.Management.Automation.SwitchParameter with get, set" Usage="Microsoft.PowerShell.Commands.NewPSSessionOptionCommand.SkipRevocationCheck" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Management.Automation.Parameter</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Management.Automation.SwitchParameter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The following is the definition of the input parameter "SkipRevocation".
            Indicates that certificate common name (CN) of the server need not match the 
            hostname of the server. Used only in remote operations using https. This 
            option should only be used for trusted machines
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UICulture">
      <MemberSignature Language="C#" Value="public System.Globalization.CultureInfo UICulture { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.CultureInfo UICulture" />
      <MemberSignature Language="DocId" Value="P:Microsoft.PowerShell.Commands.NewPSSessionOptionCommand.UICulture" />
      <MemberSignature Language="VB.NET" Value="Public Property UICulture As CultureInfo" />
      <MemberSignature Language="F#" Value="member this.UICulture : System.Globalization.CultureInfo with get, set" Usage="Microsoft.PowerShell.Commands.NewPSSessionOptionCommand.UICulture" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Management.Automation.Parameter</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Management.Automation.ValidateNotNull</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            UI culture that the remote session should use
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UseUTF16">
      <MemberSignature Language="C#" Value="public System.Management.Automation.SwitchParameter UseUTF16 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Management.Automation.SwitchParameter UseUTF16" />
      <MemberSignature Language="DocId" Value="P:Microsoft.PowerShell.Commands.NewPSSessionOptionCommand.UseUTF16" />
      <MemberSignature Language="VB.NET" Value="Public Property UseUTF16 As SwitchParameter" />
      <MemberSignature Language="F#" Value="member this.UseUTF16 : System.Management.Automation.SwitchParameter with get, set" Usage="Microsoft.PowerShell.Commands.NewPSSessionOptionCommand.UseUTF16" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Management.Automation.Parameter</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Management.Automation.SwitchParameter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The following is the definition of the input parameter "UTF16".
            Indicates the request is encoded in UTF16 format rather than UTF8 format; 
            UTF8 is the default.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>