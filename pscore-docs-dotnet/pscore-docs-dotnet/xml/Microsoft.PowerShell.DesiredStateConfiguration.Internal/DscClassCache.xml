<Type Name="DscClassCache" FullName="Microsoft.PowerShell.DesiredStateConfiguration.Internal.DscClassCache">
  <TypeSignature Language="C#" Value="public static class DscClassCache" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit DscClassCache extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.PowerShell.DesiredStateConfiguration.Internal.DscClassCache" />
  <TypeSignature Language="VB.NET" Value="Public Class DscClassCache" />
  <TypeSignature Language="F#" Value="type DscClassCache = class" />
  <AssemblyInfo>
    <AssemblyName>System.Management.Automation</AssemblyName>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary />
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="ClearCache">
      <MemberSignature Language="C#" Value="public static void ClearCache ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ClearCache() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.PowerShell.DesiredStateConfiguration.Internal.DscClassCache.ClearCache" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ClearCache ()" />
      <MemberSignature Language="F#" Value="static member ClearCache : unit -&gt; unit" Usage="Microsoft.PowerShell.DesiredStateConfiguration.Internal.DscClassCache.ClearCache " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Clear out the existing collection of CIM classes and associated keywords.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DebugModeShouldHaveOneValue">
      <MemberSignature Language="C#" Value="public static System.Management.Automation.ErrorRecord DebugModeShouldHaveOneValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Management.Automation.ErrorRecord DebugModeShouldHaveOneValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.PowerShell.DesiredStateConfiguration.Internal.DscClassCache.DebugModeShouldHaveOneValue" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DebugModeShouldHaveOneValue () As ErrorRecord" />
      <MemberSignature Language="F#" Value="static member DebugModeShouldHaveOneValue : unit -&gt; System.Management.Automation.ErrorRecord" Usage="Microsoft.PowerShell.DesiredStateConfiguration.Internal.DscClassCache.DebugModeShouldHaveOneValue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.ErrorRecord</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Returns an error record to use in the case of more than one values are provided for DebugMode property
            </summary>
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisabledRefreshModeNotValidForPartialConfig">
      <MemberSignature Language="C#" Value="public static System.Management.Automation.ErrorRecord DisabledRefreshModeNotValidForPartialConfig (string resourceId);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Management.Automation.ErrorRecord DisabledRefreshModeNotValidForPartialConfig(string resourceId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.PowerShell.DesiredStateConfiguration.Internal.DscClassCache.DisabledRefreshModeNotValidForPartialConfig(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DisabledRefreshModeNotValidForPartialConfig (resourceId As String) As ErrorRecord" />
      <MemberSignature Language="F#" Value="static member DisabledRefreshModeNotValidForPartialConfig : string -&gt; System.Management.Automation.ErrorRecord" Usage="Microsoft.PowerShell.DesiredStateConfiguration.Internal.DscClassCache.DisabledRefreshModeNotValidForPartialConfig resourceId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.ErrorRecord</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="resourceId"></param>
        <summary>
            Refresh Mode can not be Disabled for the Partial Configurations.
            </summary>
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DuplicateResourceIdInNodeStatementErrorRecord">
      <MemberSignature Language="C#" Value="public static System.Management.Automation.ErrorRecord DuplicateResourceIdInNodeStatementErrorRecord (string duplicateResourceId, string nodeName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Management.Automation.ErrorRecord DuplicateResourceIdInNodeStatementErrorRecord(string duplicateResourceId, string nodeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.PowerShell.DesiredStateConfiguration.Internal.DscClassCache.DuplicateResourceIdInNodeStatementErrorRecord(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DuplicateResourceIdInNodeStatementErrorRecord (duplicateResourceId As String, nodeName As String) As ErrorRecord" />
      <MemberSignature Language="F#" Value="static member DuplicateResourceIdInNodeStatementErrorRecord : string * string -&gt; System.Management.Automation.ErrorRecord" Usage="Microsoft.PowerShell.DesiredStateConfiguration.Internal.DscClassCache.DuplicateResourceIdInNodeStatementErrorRecord (duplicateResourceId, nodeName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.ErrorRecord</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="duplicateResourceId" Type="System.String" />
        <Parameter Name="nodeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="duplicateResourceId">The duplicate resource identifier</param>
        <param name="nodeName">the node being defined.</param>
        <summary>
             Returns an error record to use in the case of a malformed resource reference in the DependsOn list
            </summary>
        <returns>The error record to use.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateMofForType">
      <MemberSignature Language="C#" Value="public static string GenerateMofForType (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GenerateMofForType(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.PowerShell.DesiredStateConfiguration.Internal.DscClassCache.GenerateMofForType(System.Type)" />
      <MemberSignature Language="F#" Value="static member GenerateMofForType : Type -&gt; string" Usage="Microsoft.PowerShell.DesiredStateConfiguration.Internal.DscClassCache.GenerateMofForType type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type"></param>
        <summary />
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBadlyFormedExclusiveResourceIdErrorRecord">
      <MemberSignature Language="C#" Value="public static System.Management.Automation.ErrorRecord GetBadlyFormedExclusiveResourceIdErrorRecord (string badExclusiveResourcereference, string definingResource);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Management.Automation.ErrorRecord GetBadlyFormedExclusiveResourceIdErrorRecord(string badExclusiveResourcereference, string definingResource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.PowerShell.DesiredStateConfiguration.Internal.DscClassCache.GetBadlyFormedExclusiveResourceIdErrorRecord(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetBadlyFormedExclusiveResourceIdErrorRecord (badExclusiveResourcereference As String, definingResource As String) As ErrorRecord" />
      <MemberSignature Language="F#" Value="static member GetBadlyFormedExclusiveResourceIdErrorRecord : string * string -&gt; System.Management.Automation.ErrorRecord" Usage="Microsoft.PowerShell.DesiredStateConfiguration.Internal.DscClassCache.GetBadlyFormedExclusiveResourceIdErrorRecord (badExclusiveResourcereference, definingResource)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.ErrorRecord</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="badExclusiveResourcereference" Type="System.String" />
        <Parameter Name="definingResource" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="badExclusiveResourcereference">the malformed resource</param>
        <param name="definingResource">The referencing resource instance</param>
        <summary>
            Returns an error record to use in the case of a malformed resource reference in the exclusive resources list
            </summary>
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBadlyFormedRequiredResourceIdErrorRecord">
      <MemberSignature Language="C#" Value="public static System.Management.Automation.ErrorRecord GetBadlyFormedRequiredResourceIdErrorRecord (string badDependsOnReference, string definingResource);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Management.Automation.ErrorRecord GetBadlyFormedRequiredResourceIdErrorRecord(string badDependsOnReference, string definingResource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.PowerShell.DesiredStateConfiguration.Internal.DscClassCache.GetBadlyFormedRequiredResourceIdErrorRecord(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetBadlyFormedRequiredResourceIdErrorRecord (badDependsOnReference As String, definingResource As String) As ErrorRecord" />
      <MemberSignature Language="F#" Value="static member GetBadlyFormedRequiredResourceIdErrorRecord : string * string -&gt; System.Management.Automation.ErrorRecord" Usage="Microsoft.PowerShell.DesiredStateConfiguration.Internal.DscClassCache.GetBadlyFormedRequiredResourceIdErrorRecord (badDependsOnReference, definingResource)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.ErrorRecord</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="badDependsOnReference" Type="System.String" />
        <Parameter Name="definingResource" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="badDependsOnReference">the malformed resource</param>
        <param name="definingResource">The referencing resource instance</param>
        <summary>
            Returns an error record to use in the case of a malformed resource reference in the DependsOn list
            </summary>
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCachedClassByFileName">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.List&lt;Microsoft.Management.Infrastructure.CimClass&gt; GetCachedClassByFileName (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.List`1&lt;class Microsoft.Management.Infrastructure.CimClass&gt; GetCachedClassByFileName(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.PowerShell.DesiredStateConfiguration.Internal.DscClassCache.GetCachedClassByFileName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCachedClassByFileName (fileName As String) As List(Of CimClass)" />
      <MemberSignature Language="F#" Value="static member GetCachedClassByFileName : string -&gt; System.Collections.Generic.List&lt;Microsoft.Management.Infrastructure.CimClass&gt;" Usage="Microsoft.PowerShell.DesiredStateConfiguration.Internal.DscClassCache.GetCachedClassByFileName fileName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.List&lt;Microsoft.Management.Infrastructure.CimClass&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName"></param>
        <summary>
            Returns the classes that we loaded from the specified file name.
            </summary>
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCachedClassByModuleName">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.List&lt;Microsoft.Management.Infrastructure.CimClass&gt; GetCachedClassByModuleName (string moduleName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.List`1&lt;class Microsoft.Management.Infrastructure.CimClass&gt; GetCachedClassByModuleName(string moduleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.PowerShell.DesiredStateConfiguration.Internal.DscClassCache.GetCachedClassByModuleName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCachedClassByModuleName (moduleName As String) As List(Of CimClass)" />
      <MemberSignature Language="F#" Value="static member GetCachedClassByModuleName : string -&gt; System.Collections.Generic.List&lt;Microsoft.Management.Infrastructure.CimClass&gt;" Usage="Microsoft.PowerShell.DesiredStateConfiguration.Internal.DscClassCache.GetCachedClassByModuleName moduleName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.List&lt;Microsoft.Management.Infrastructure.CimClass&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="moduleName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="moduleName"></param>
        <summary>
            Returns the classes associated with the specified module name.
            Per PowerShell the module name is the base name of the schema file.
            </summary>
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCachedClasses">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.List&lt;Tuple&lt;System.Management.Automation.DSCResourceRunAsCredential,Microsoft.Management.Infrastructure.CimClass&gt;&gt; GetCachedClasses ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.List`1&lt;class System.Tuple`2&lt;valuetype System.Management.Automation.DSCResourceRunAsCredential, class Microsoft.Management.Infrastructure.CimClass&gt;&gt; GetCachedClasses() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.PowerShell.DesiredStateConfiguration.Internal.DscClassCache.GetCachedClasses" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCachedClasses () As List(Of Tuple(Of DSCResourceRunAsCredential, CimClass))" />
      <MemberSignature Language="F#" Value="static member GetCachedClasses : unit -&gt; System.Collections.Generic.List&lt;System.Management.Automation.DSCResourceRunAsCredential * Microsoft.Management.Infrastructure.CimClass&gt;" Usage="Microsoft.PowerShell.DesiredStateConfiguration.Internal.DscClassCache.GetCachedClasses " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.List&lt;System.Tuple&lt;System.Management.Automation.DSCResourceRunAsCredential,Microsoft.Management.Infrastructure.CimClass&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary />
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCachedClassesForModule">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.List&lt;Microsoft.Management.Infrastructure.CimClass&gt; GetCachedClassesForModule (System.Management.Automation.PSModuleInfo module);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.List`1&lt;class Microsoft.Management.Infrastructure.CimClass&gt; GetCachedClassesForModule(class System.Management.Automation.PSModuleInfo module) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.PowerShell.DesiredStateConfiguration.Internal.DscClassCache.GetCachedClassesForModule(System.Management.Automation.PSModuleInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCachedClassesForModule (module As PSModuleInfo) As List(Of CimClass)" />
      <MemberSignature Language="F#" Value="static member GetCachedClassesForModule : System.Management.Automation.PSModuleInfo -&gt; System.Collections.Generic.List&lt;Microsoft.Management.Infrastructure.CimClass&gt;" Usage="Microsoft.PowerShell.DesiredStateConfiguration.Internal.DscClassCache.GetCachedClassesForModule module" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.List&lt;Microsoft.Management.Infrastructure.CimClass&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="module" Type="System.Management.Automation.PSModuleInfo" />
      </Parameters>
      <Docs>
        <param name="module"></param>
        <summary>
            Find cached cim classes defined under specified module
            </summary>
        <returns>List of cached cim classes</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCachedKeywords">
      <MemberSignature Language="C#" Value="public static System.Collections.ObjectModel.Collection&lt;System.Management.Automation.Language.DynamicKeyword&gt; GetCachedKeywords ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.ObjectModel.Collection`1&lt;class System.Management.Automation.Language.DynamicKeyword&gt; GetCachedKeywords() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.PowerShell.DesiredStateConfiguration.Internal.DscClassCache.GetCachedKeywords" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCachedKeywords () As Collection(Of DynamicKeyword)" />
      <MemberSignature Language="F#" Value="static member GetCachedKeywords : unit -&gt; System.Collections.ObjectModel.Collection&lt;System.Management.Automation.Language.DynamicKeyword&gt;" Usage="Microsoft.PowerShell.DesiredStateConfiguration.Internal.DscClassCache.GetCachedKeywords " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.Management.Automation.Language.DynamicKeyword&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Method to get the cached classes in the form of DynamicKeyword.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDSCResourceUsageString">
      <MemberSignature Language="C#" Value="public static string GetDSCResourceUsageString (System.Management.Automation.Language.DynamicKeyword keyword);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetDSCResourceUsageString(class System.Management.Automation.Language.DynamicKeyword keyword) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.PowerShell.DesiredStateConfiguration.Internal.DscClassCache.GetDSCResourceUsageString(System.Management.Automation.Language.DynamicKeyword)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDSCResourceUsageString (keyword As DynamicKeyword) As String" />
      <MemberSignature Language="F#" Value="static member GetDSCResourceUsageString : System.Management.Automation.Language.DynamicKeyword -&gt; string" Usage="Microsoft.PowerShell.DesiredStateConfiguration.Internal.DscClassCache.GetDSCResourceUsageString keyword" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyword" Type="System.Management.Automation.Language.DynamicKeyword" />
      </Parameters>
      <Docs>
        <param name="keyword"></param>
        <summary>
            Routine to format a usage string from keyword. The resulting string should look like:
                   User [string] #ResourceName
                   {
                       UserName = [string]
                       [ Description = [string] ]
                       [ Disabled = [bool] ]
                       [ Ensure = [string] { Absent | Present }  ]
                       [ Force = [bool] ]
                       [ FullName = [string] ]
                       [ Password = [PSCredential] ]
                       [ PasswordChangeNotAllowed = [bool] ]
                       [ PasswordChangeRequired = [bool] ]
                       [ PasswordNeverExpires = [bool] ]
                       [ DependsOn = [string[]] ]
                   }
            </summary>
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFileDefiningClass">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.List&lt;string&gt; GetFileDefiningClass (string className);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.List`1&lt;string&gt; GetFileDefiningClass(string className) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.PowerShell.DesiredStateConfiguration.Internal.DscClassCache.GetFileDefiningClass(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetFileDefiningClass (className As String) As List(Of String)" />
      <MemberSignature Language="F#" Value="static member GetFileDefiningClass : string -&gt; System.Collections.Generic.List&lt;string&gt;" Usage="Microsoft.PowerShell.DesiredStateConfiguration.Internal.DscClassCache.GetFileDefiningClass className" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.List&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="className" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="className"></param>
        <summary>
            Get the file that defined this class.
            </summary>
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLoadedFiles">
      <MemberSignature Language="C#" Value="public static string[] GetLoadedFiles ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string[] GetLoadedFiles() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.PowerShell.DesiredStateConfiguration.Internal.DscClassCache.GetLoadedFiles" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetLoadedFiles () As String()" />
      <MemberSignature Language="F#" Value="static member GetLoadedFiles : unit -&gt; string[]" Usage="Microsoft.PowerShell.DesiredStateConfiguration.Internal.DscClassCache.GetLoadedFiles " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Get a list of files from which classes have been loaded.
            </summary>
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPullModeNeedConfigurationSource">
      <MemberSignature Language="C#" Value="public static System.Management.Automation.ErrorRecord GetPullModeNeedConfigurationSource (string resourceId);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Management.Automation.ErrorRecord GetPullModeNeedConfigurationSource(string resourceId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.PowerShell.DesiredStateConfiguration.Internal.DscClassCache.GetPullModeNeedConfigurationSource(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetPullModeNeedConfigurationSource (resourceId As String) As ErrorRecord" />
      <MemberSignature Language="F#" Value="static member GetPullModeNeedConfigurationSource : string -&gt; System.Management.Automation.ErrorRecord" Usage="Microsoft.PowerShell.DesiredStateConfiguration.Internal.DscClassCache.GetPullModeNeedConfigurationSource resourceId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.ErrorRecord</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="resourceId"></param>
        <summary>
            if a partial configuration is in 'Pull' Mode, it needs a configuration source
            </summary>
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetResourceMethodsLinePosition">
      <MemberSignature Language="C#" Value="public static bool GetResourceMethodsLinePosition (System.Management.Automation.PSModuleInfo moduleInfo, string resourceName, out System.Collections.Generic.Dictionary&lt;string,int&gt; resourceMethodsLinePosition, out string resourceFilePath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool GetResourceMethodsLinePosition(class System.Management.Automation.PSModuleInfo moduleInfo, string resourceName, [out] class System.Collections.Generic.Dictionary`2&lt;string, int32&gt;&amp; resourceMethodsLinePosition, [out] string&amp; resourceFilePath) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.PowerShell.DesiredStateConfiguration.Internal.DscClassCache.GetResourceMethodsLinePosition(System.Management.Automation.PSModuleInfo,System.String,System.Collections.Generic.Dictionary{System.String,System.Int32}@,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetResourceMethodsLinePosition (moduleInfo As PSModuleInfo, resourceName As String, ByRef resourceMethodsLinePosition As Dictionary(Of String, Integer), ByRef resourceFilePath As String) As Boolean" />
      <MemberSignature Language="F#" Value="static member GetResourceMethodsLinePosition : System.Management.Automation.PSModuleInfo * string *  *  -&gt; bool" Usage="Microsoft.PowerShell.DesiredStateConfiguration.Internal.DscClassCache.GetResourceMethodsLinePosition (moduleInfo, resourceName, resourceMethodsLinePosition, resourceFilePath)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="moduleInfo" Type="System.Management.Automation.PSModuleInfo" />
        <Parameter Name="resourceName" Type="System.String" />
        <Parameter Name="resourceMethodsLinePosition" Type="System.Collections.Generic.Dictionary&lt;System.String,System.Int32&gt;&amp;" RefType="out" />
        <Parameter Name="resourceFilePath" Type="System.String&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="moduleInfo"></param>
        <param name="resourceName"></param>
        <param name="resourceMethodsLinePosition"></param>
        <param name="resourceFilePath"></param>
        <summary>
            Gets the line no for DSC Class Resource Get/Set/Test methods
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStringFromSecureString">
      <MemberSignature Language="C#" Value="public static string GetStringFromSecureString (System.Security.SecureString value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetStringFromSecureString(class System.Security.SecureString value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.PowerShell.DesiredStateConfiguration.Internal.DscClassCache.GetStringFromSecureString(System.Security.SecureString)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetStringFromSecureString (value As SecureString) As String" />
      <MemberSignature Language="F#" Value="static member GetStringFromSecureString : System.Security.SecureString -&gt; string" Usage="Microsoft.PowerShell.DesiredStateConfiguration.Internal.DscClassCache.GetStringFromSecureString value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Security.SecureString" />
      </Parameters>
      <Docs>
        <param name="value">value of SecureString</param>
        <summary>
            get text from SecureString
            </summary>
        <returns>decoded string</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ImportCimKeywordsFromModule">
      <MemberSignature Language="C#" Value="public static bool ImportCimKeywordsFromModule (System.Management.Automation.PSModuleInfo module, string resourceName, out string schemaFilePath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ImportCimKeywordsFromModule(class System.Management.Automation.PSModuleInfo module, string resourceName, [out] string&amp; schemaFilePath) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.PowerShell.DesiredStateConfiguration.Internal.DscClassCache.ImportCimKeywordsFromModule(System.Management.Automation.PSModuleInfo,System.String,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ImportCimKeywordsFromModule (module As PSModuleInfo, resourceName As String, ByRef schemaFilePath As String) As Boolean" />
      <MemberSignature Language="F#" Value="static member ImportCimKeywordsFromModule : System.Management.Automation.PSModuleInfo * string *  -&gt; bool" Usage="Microsoft.PowerShell.DesiredStateConfiguration.Internal.DscClassCache.ImportCimKeywordsFromModule (module, resourceName, schemaFilePath)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="module" Type="System.Management.Automation.PSModuleInfo" />
        <Parameter Name="resourceName" Type="System.String" />
        <Parameter Name="schemaFilePath" Type="System.String&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="module"></param>
        <param name="resourceName"></param>
        <param name="schemaFilePath">Full path of the loaded schema file...</param>
        <summary>
            Import the CIM functions from a module...
            </summary>
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ImportCimKeywordsFromModule">
      <MemberSignature Language="C#" Value="public static bool ImportCimKeywordsFromModule (System.Management.Automation.PSModuleInfo module, string resourceName, out string schemaFilePath, System.Collections.Generic.Dictionary&lt;string,System.Management.Automation.ScriptBlock&gt; functionsToDefine);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ImportCimKeywordsFromModule(class System.Management.Automation.PSModuleInfo module, string resourceName, [out] string&amp; schemaFilePath, class System.Collections.Generic.Dictionary`2&lt;string, class System.Management.Automation.ScriptBlock&gt; functionsToDefine) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.PowerShell.DesiredStateConfiguration.Internal.DscClassCache.ImportCimKeywordsFromModule(System.Management.Automation.PSModuleInfo,System.String,System.String@,System.Collections.Generic.Dictionary{System.String,System.Management.Automation.ScriptBlock})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ImportCimKeywordsFromModule (module As PSModuleInfo, resourceName As String, ByRef schemaFilePath As String, functionsToDefine As Dictionary(Of String, ScriptBlock)) As Boolean" />
      <MemberSignature Language="F#" Value="static member ImportCimKeywordsFromModule : System.Management.Automation.PSModuleInfo * string *  * System.Collections.Generic.Dictionary&lt;string, System.Management.Automation.ScriptBlock&gt; -&gt; bool" Usage="Microsoft.PowerShell.DesiredStateConfiguration.Internal.DscClassCache.ImportCimKeywordsFromModule (module, resourceName, schemaFilePath, functionsToDefine)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="module" Type="System.Management.Automation.PSModuleInfo" />
        <Parameter Name="resourceName" Type="System.String" />
        <Parameter Name="schemaFilePath" Type="System.String&amp;" RefType="out" />
        <Parameter Name="functionsToDefine" Type="System.Collections.Generic.Dictionary&lt;System.String,System.Management.Automation.ScriptBlock&gt;" />
      </Parameters>
      <Docs>
        <param name="module"></param>
        <param name="resourceName"></param>
        <param name="schemaFilePath">Full path of the loaded schema file...</param>
        <param name="functionsToDefine"></param>
        <summary>
            Import the CIM functions from a module...
            </summary>
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ImportCimKeywordsFromModule">
      <MemberSignature Language="C#" Value="public static bool ImportCimKeywordsFromModule (System.Management.Automation.PSModuleInfo module, string resourceName, out string schemaFilePath, System.Collections.Generic.Dictionary&lt;string,System.Management.Automation.ScriptBlock&gt; functionsToDefine, System.Collections.ObjectModel.Collection&lt;Exception&gt; errors);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ImportCimKeywordsFromModule(class System.Management.Automation.PSModuleInfo module, string resourceName, [out] string&amp; schemaFilePath, class System.Collections.Generic.Dictionary`2&lt;string, class System.Management.Automation.ScriptBlock&gt; functionsToDefine, class System.Collections.ObjectModel.Collection`1&lt;class System.Exception&gt; errors) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.PowerShell.DesiredStateConfiguration.Internal.DscClassCache.ImportCimKeywordsFromModule(System.Management.Automation.PSModuleInfo,System.String,System.String@,System.Collections.Generic.Dictionary{System.String,System.Management.Automation.ScriptBlock},System.Collections.ObjectModel.Collection{System.Exception})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ImportCimKeywordsFromModule (module As PSModuleInfo, resourceName As String, ByRef schemaFilePath As String, functionsToDefine As Dictionary(Of String, ScriptBlock), errors As Collection(Of Exception)) As Boolean" />
      <MemberSignature Language="F#" Value="static member ImportCimKeywordsFromModule : System.Management.Automation.PSModuleInfo * string *  * System.Collections.Generic.Dictionary&lt;string, System.Management.Automation.ScriptBlock&gt; * System.Collections.ObjectModel.Collection&lt;Exception&gt; -&gt; bool" Usage="Microsoft.PowerShell.DesiredStateConfiguration.Internal.DscClassCache.ImportCimKeywordsFromModule (module, resourceName, schemaFilePath, functionsToDefine, errors)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="module" Type="System.Management.Automation.PSModuleInfo" />
        <Parameter Name="resourceName" Type="System.String" />
        <Parameter Name="schemaFilePath" Type="System.String&amp;" RefType="out" />
        <Parameter Name="functionsToDefine" Type="System.Collections.Generic.Dictionary&lt;System.String,System.Management.Automation.ScriptBlock&gt;" />
        <Parameter Name="errors" Type="System.Collections.ObjectModel.Collection&lt;System.Exception&gt;" />
      </Parameters>
      <Docs>
        <param name="module"></param>
        <param name="resourceName"></param>
        <param name="schemaFilePath">Full path of the loaded schema file...</param>
        <param name="functionsToDefine"></param>
        <param name="errors">error reported during deserialization</param>
        <summary>
            Import the CIM functions from a module...
            </summary>
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ImportClasses">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.List&lt;Microsoft.Management.Infrastructure.CimClass&gt; ImportClasses (string path, Tuple&lt;string,Version&gt; moduleInfo, System.Collections.ObjectModel.Collection&lt;Exception&gt; errors);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.List`1&lt;class Microsoft.Management.Infrastructure.CimClass&gt; ImportClasses(string path, class System.Tuple`2&lt;string, class System.Version&gt; moduleInfo, class System.Collections.ObjectModel.Collection`1&lt;class System.Exception&gt; errors) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.PowerShell.DesiredStateConfiguration.Internal.DscClassCache.ImportClasses(System.String,System.Tuple{System.String,System.Version},System.Collections.ObjectModel.Collection{System.Exception})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ImportClasses (path As String, moduleInfo As Tuple(Of String, Version), errors As Collection(Of Exception)) As List(Of CimClass)" />
      <MemberSignature Language="F#" Value="static member ImportClasses : string * string * Version * System.Collections.ObjectModel.Collection&lt;Exception&gt; -&gt; System.Collections.Generic.List&lt;Microsoft.Management.Infrastructure.CimClass&gt;" Usage="Microsoft.PowerShell.DesiredStateConfiguration.Internal.DscClassCache.ImportClasses (path, moduleInfo, errors)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.List&lt;Microsoft.Management.Infrastructure.CimClass&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="moduleInfo" Type="System.Tuple&lt;System.String,System.Version&gt;" />
        <Parameter Name="errors" Type="System.Collections.ObjectModel.Collection&lt;System.Exception&gt;" />
      </Parameters>
      <Docs>
        <param name="path"></param>
        <param name="moduleInfo"></param>
        <param name="errors"></param>
        <summary>
            Import CIM classes from the given file
            </summary>
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ImportClassResourcesFromModule">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.List&lt;string&gt; ImportClassResourcesFromModule (System.Management.Automation.PSModuleInfo moduleInfo, System.Collections.Generic.ICollection&lt;string&gt; resourcesToImport, System.Collections.Generic.Dictionary&lt;string,System.Management.Automation.ScriptBlock&gt; functionsToDefine);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.List`1&lt;string&gt; ImportClassResourcesFromModule(class System.Management.Automation.PSModuleInfo moduleInfo, class System.Collections.Generic.ICollection`1&lt;string&gt; resourcesToImport, class System.Collections.Generic.Dictionary`2&lt;string, class System.Management.Automation.ScriptBlock&gt; functionsToDefine) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.PowerShell.DesiredStateConfiguration.Internal.DscClassCache.ImportClassResourcesFromModule(System.Management.Automation.PSModuleInfo,System.Collections.Generic.ICollection{System.String},System.Collections.Generic.Dictionary{System.String,System.Management.Automation.ScriptBlock})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ImportClassResourcesFromModule (moduleInfo As PSModuleInfo, resourcesToImport As ICollection(Of String), functionsToDefine As Dictionary(Of String, ScriptBlock)) As List(Of String)" />
      <MemberSignature Language="F#" Value="static member ImportClassResourcesFromModule : System.Management.Automation.PSModuleInfo * System.Collections.Generic.ICollection&lt;string&gt; * System.Collections.Generic.Dictionary&lt;string, System.Management.Automation.ScriptBlock&gt; -&gt; System.Collections.Generic.List&lt;string&gt;" Usage="Microsoft.PowerShell.DesiredStateConfiguration.Internal.DscClassCache.ImportClassResourcesFromModule (moduleInfo, resourcesToImport, functionsToDefine)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.List&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="moduleInfo" Type="System.Management.Automation.PSModuleInfo" />
        <Parameter Name="resourcesToImport" Type="System.Collections.Generic.ICollection&lt;System.String&gt;" />
        <Parameter Name="functionsToDefine" Type="System.Collections.Generic.Dictionary&lt;System.String,System.Management.Automation.ScriptBlock&gt;" />
      </Parameters>
      <Docs>
        <param name="moduleInfo"></param>
        <param name="resourcesToImport"></param>
        <param name="functionsToDefine"></param>
        <summary />
        <returns>The list of resources imported from this module.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ImportInstances">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.List&lt;Microsoft.Management.Infrastructure.CimInstance&gt; ImportInstances (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.List`1&lt;class Microsoft.Management.Infrastructure.CimInstance&gt; ImportInstances(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.PowerShell.DesiredStateConfiguration.Internal.DscClassCache.ImportInstances(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ImportInstances (path As String) As List(Of CimInstance)" />
      <MemberSignature Language="F#" Value="static member ImportInstances : string -&gt; System.Collections.Generic.List&lt;Microsoft.Management.Infrastructure.CimInstance&gt;" Usage="Microsoft.PowerShell.DesiredStateConfiguration.Internal.DscClassCache.ImportInstances path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.List&lt;Microsoft.Management.Infrastructure.CimInstance&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">The file to load the classes from.</param>
        <summary>
            Routine used to load a set of CIM instances from a .mof file using the
            current set of cached classes for schema validation.
            </summary>
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ImportInstances">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.List&lt;Microsoft.Management.Infrastructure.CimInstance&gt; ImportInstances (string path, int schemaValidationOption);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.List`1&lt;class Microsoft.Management.Infrastructure.CimInstance&gt; ImportInstances(string path, int32 schemaValidationOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.PowerShell.DesiredStateConfiguration.Internal.DscClassCache.ImportInstances(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ImportInstances (path As String, schemaValidationOption As Integer) As List(Of CimInstance)" />
      <MemberSignature Language="F#" Value="static member ImportInstances : string * int -&gt; System.Collections.Generic.List&lt;Microsoft.Management.Infrastructure.CimInstance&gt;" Usage="Microsoft.PowerShell.DesiredStateConfiguration.Internal.DscClassCache.ImportInstances (path, schemaValidationOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.List&lt;Microsoft.Management.Infrastructure.CimInstance&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="schemaValidationOption" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="path"></param>
        <param name="schemaValidationOption"></param>
        <summary>
            Routine used to load a set of CIM instances from a .mof file using the
            current set of cached classes for schema validation.
            </summary>
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ImportScriptKeywordsFromModule">
      <MemberSignature Language="C#" Value="public static bool ImportScriptKeywordsFromModule (System.Management.Automation.PSModuleInfo module, string resourceName, out string schemaFilePath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ImportScriptKeywordsFromModule(class System.Management.Automation.PSModuleInfo module, string resourceName, [out] string&amp; schemaFilePath) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.PowerShell.DesiredStateConfiguration.Internal.DscClassCache.ImportScriptKeywordsFromModule(System.Management.Automation.PSModuleInfo,System.String,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ImportScriptKeywordsFromModule (module As PSModuleInfo, resourceName As String, ByRef schemaFilePath As String) As Boolean" />
      <MemberSignature Language="F#" Value="static member ImportScriptKeywordsFromModule : System.Management.Automation.PSModuleInfo * string *  -&gt; bool" Usage="Microsoft.PowerShell.DesiredStateConfiguration.Internal.DscClassCache.ImportScriptKeywordsFromModule (module, resourceName, schemaFilePath)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="module" Type="System.Management.Automation.PSModuleInfo" />
        <Parameter Name="resourceName" Type="System.String" />
        <Parameter Name="schemaFilePath" Type="System.String&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="module"></param>
        <param name="resourceName"></param>
        <param name="schemaFilePath"></param>
        <summary>
            Imports configuration keywords from a .psm1 file.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ImportScriptKeywordsFromModule">
      <MemberSignature Language="C#" Value="public static bool ImportScriptKeywordsFromModule (System.Management.Automation.PSModuleInfo module, string resourceName, out string schemaFilePath, System.Collections.Generic.Dictionary&lt;string,System.Management.Automation.ScriptBlock&gt; functionsToDefine);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ImportScriptKeywordsFromModule(class System.Management.Automation.PSModuleInfo module, string resourceName, [out] string&amp; schemaFilePath, class System.Collections.Generic.Dictionary`2&lt;string, class System.Management.Automation.ScriptBlock&gt; functionsToDefine) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.PowerShell.DesiredStateConfiguration.Internal.DscClassCache.ImportScriptKeywordsFromModule(System.Management.Automation.PSModuleInfo,System.String,System.String@,System.Collections.Generic.Dictionary{System.String,System.Management.Automation.ScriptBlock})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ImportScriptKeywordsFromModule (module As PSModuleInfo, resourceName As String, ByRef schemaFilePath As String, functionsToDefine As Dictionary(Of String, ScriptBlock)) As Boolean" />
      <MemberSignature Language="F#" Value="static member ImportScriptKeywordsFromModule : System.Management.Automation.PSModuleInfo * string *  * System.Collections.Generic.Dictionary&lt;string, System.Management.Automation.ScriptBlock&gt; -&gt; bool" Usage="Microsoft.PowerShell.DesiredStateConfiguration.Internal.DscClassCache.ImportScriptKeywordsFromModule (module, resourceName, schemaFilePath, functionsToDefine)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="module" Type="System.Management.Automation.PSModuleInfo" />
        <Parameter Name="resourceName" Type="System.String" />
        <Parameter Name="schemaFilePath" Type="System.String&amp;" RefType="out" />
        <Parameter Name="functionsToDefine" Type="System.Collections.Generic.Dictionary&lt;System.String,System.Management.Automation.ScriptBlock&gt;" />
      </Parameters>
      <Docs>
        <param name="module"></param>
        <param name="resourceName"></param>
        <param name="schemaFilePath"></param>
        <param name="functionsToDefine"></param>
        <summary>
            Imports configuration keywords from a .psm1 file.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public static void Initialize ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Initialize() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.PowerShell.DesiredStateConfiguration.Internal.DscClassCache.Initialize" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Initialize ()" />
      <MemberSignature Language="F#" Value="static member Initialize : unit -&gt; unit" Usage="Microsoft.PowerShell.DesiredStateConfiguration.Internal.DscClassCache.Initialize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Initialize the class cache with the default classes in $ENV:SystemDirectory\Configuration.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public static void Initialize (System.Collections.ObjectModel.Collection&lt;Exception&gt; errors, System.Collections.Generic.List&lt;string&gt; modulePathList);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Initialize(class System.Collections.ObjectModel.Collection`1&lt;class System.Exception&gt; errors, class System.Collections.Generic.List`1&lt;string&gt; modulePathList) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.PowerShell.DesiredStateConfiguration.Internal.DscClassCache.Initialize(System.Collections.ObjectModel.Collection{System.Exception},System.Collections.Generic.List{System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Initialize (errors As Collection(Of Exception), modulePathList As List(Of String))" />
      <MemberSignature Language="F#" Value="static member Initialize : System.Collections.ObjectModel.Collection&lt;Exception&gt; * System.Collections.Generic.List&lt;string&gt; -&gt; unit" Usage="Microsoft.PowerShell.DesiredStateConfiguration.Internal.DscClassCache.Initialize (errors, modulePathList)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="errors" Type="System.Collections.ObjectModel.Collection&lt;System.Exception&gt;" />
        <Parameter Name="modulePathList" Type="System.Collections.Generic.List&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="errors">Collection of any errors encountered during initialization.</param>
        <param name="modulePathList">List of module path from where DSC PS modules will be loaded</param>
        <summary>
            Initialize the class cache with the default classes in $ENV:SystemDirectory\Configuration.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvalidConfigurationNameErrorRecord">
      <MemberSignature Language="C#" Value="public static System.Management.Automation.ErrorRecord InvalidConfigurationNameErrorRecord (string configurationName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Management.Automation.ErrorRecord InvalidConfigurationNameErrorRecord(string configurationName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.PowerShell.DesiredStateConfiguration.Internal.DscClassCache.InvalidConfigurationNameErrorRecord(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function InvalidConfigurationNameErrorRecord (configurationName As String) As ErrorRecord" />
      <MemberSignature Language="F#" Value="static member InvalidConfigurationNameErrorRecord : string -&gt; System.Management.Automation.ErrorRecord" Usage="Microsoft.PowerShell.DesiredStateConfiguration.Internal.DscClassCache.InvalidConfigurationNameErrorRecord configurationName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.ErrorRecord</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="configurationName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="configurationName"></param>
        <summary>
            Returns an error record to use in the case of a configuration name is invalid
            </summary>
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvalidLocalConfigurationManagerPropertyErrorRecord">
      <MemberSignature Language="C#" Value="public static System.Management.Automation.ErrorRecord InvalidLocalConfigurationManagerPropertyErrorRecord (string propertyName, string validProperties);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Management.Automation.ErrorRecord InvalidLocalConfigurationManagerPropertyErrorRecord(string propertyName, string validProperties) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.PowerShell.DesiredStateConfiguration.Internal.DscClassCache.InvalidLocalConfigurationManagerPropertyErrorRecord(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function InvalidLocalConfigurationManagerPropertyErrorRecord (propertyName As String, validProperties As String) As ErrorRecord" />
      <MemberSignature Language="F#" Value="static member InvalidLocalConfigurationManagerPropertyErrorRecord : string * string -&gt; System.Management.Automation.ErrorRecord" Usage="Microsoft.PowerShell.DesiredStateConfiguration.Internal.DscClassCache.InvalidLocalConfigurationManagerPropertyErrorRecord (propertyName, validProperties)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.ErrorRecord</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="validProperties" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName"></param>
        <param name="validProperties"></param>
        <summary>
            Returns an error record to use in case the given property is not valid LocalConfigurationManager property
            </summary>
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvalidValueForPropertyErrorRecord">
      <MemberSignature Language="C#" Value="public static System.Management.Automation.ErrorRecord InvalidValueForPropertyErrorRecord (string propertyName, string value, string keywordName, string validValues);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Management.Automation.ErrorRecord InvalidValueForPropertyErrorRecord(string propertyName, string value, string keywordName, string validValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.PowerShell.DesiredStateConfiguration.Internal.DscClassCache.InvalidValueForPropertyErrorRecord(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function InvalidValueForPropertyErrorRecord (propertyName As String, value As String, keywordName As String, validValues As String) As ErrorRecord" />
      <MemberSignature Language="F#" Value="static member InvalidValueForPropertyErrorRecord : string * string * string * string -&gt; System.Management.Automation.ErrorRecord" Usage="Microsoft.PowerShell.DesiredStateConfiguration.Internal.DscClassCache.InvalidValueForPropertyErrorRecord (propertyName, value, keywordName, validValues)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.ErrorRecord</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="keywordName" Type="System.String" />
        <Parameter Name="validValues" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName"></param>
        <param name="value"></param>
        <param name="keywordName"></param>
        <param name="validValues"></param>
        <summary>
            Returns an error record to use in the case of the given value for a property is invalid
            </summary>
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadDefaultCimKeywords">
      <MemberSignature Language="C#" Value="public static void LoadDefaultCimKeywords ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void LoadDefaultCimKeywords() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.PowerShell.DesiredStateConfiguration.Internal.DscClassCache.LoadDefaultCimKeywords" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub LoadDefaultCimKeywords ()" />
      <MemberSignature Language="F#" Value="static member LoadDefaultCimKeywords : unit -&gt; unit" Usage="Microsoft.PowerShell.DesiredStateConfiguration.Internal.DscClassCache.LoadDefaultCimKeywords " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Load the default system CIM classes and create the corresponding keywords.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadDefaultCimKeywords">
      <MemberSignature Language="C#" Value="public static void LoadDefaultCimKeywords (System.Collections.Generic.Dictionary&lt;string,System.Management.Automation.ScriptBlock&gt; functionsToDefine);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void LoadDefaultCimKeywords(class System.Collections.Generic.Dictionary`2&lt;string, class System.Management.Automation.ScriptBlock&gt; functionsToDefine) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.PowerShell.DesiredStateConfiguration.Internal.DscClassCache.LoadDefaultCimKeywords(System.Collections.Generic.Dictionary{System.String,System.Management.Automation.ScriptBlock})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub LoadDefaultCimKeywords (functionsToDefine As Dictionary(Of String, ScriptBlock))" />
      <MemberSignature Language="F#" Value="static member LoadDefaultCimKeywords : System.Collections.Generic.Dictionary&lt;string, System.Management.Automation.ScriptBlock&gt; -&gt; unit" Usage="Microsoft.PowerShell.DesiredStateConfiguration.Internal.DscClassCache.LoadDefaultCimKeywords functionsToDefine" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="functionsToDefine" Type="System.Collections.Generic.Dictionary&lt;System.String,System.Management.Automation.ScriptBlock&gt;" />
      </Parameters>
      <Docs>
        <param name="functionsToDefine">To be added.</param>
        <summary>
            Load the default system CIM classes and create the corresponding keywords.
            <param name="functionsToDefine">A dictionary to add the defined functions to, may be null</param></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadDefaultCimKeywords">
      <MemberSignature Language="C#" Value="public static void LoadDefaultCimKeywords (System.Collections.Generic.List&lt;string&gt; modulePathList);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void LoadDefaultCimKeywords(class System.Collections.Generic.List`1&lt;string&gt; modulePathList) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.PowerShell.DesiredStateConfiguration.Internal.DscClassCache.LoadDefaultCimKeywords(System.Collections.Generic.List{System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub LoadDefaultCimKeywords (modulePathList As List(Of String))" />
      <MemberSignature Language="F#" Value="static member LoadDefaultCimKeywords : System.Collections.Generic.List&lt;string&gt; -&gt; unit" Usage="Microsoft.PowerShell.DesiredStateConfiguration.Internal.DscClassCache.LoadDefaultCimKeywords modulePathList" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modulePathList" Type="System.Collections.Generic.List&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="modulePathList">List of module path from where DSC PS modules will be loaded</param>
        <summary>
            Load the default system CIM classes and create the corresponding keywords.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadDefaultCimKeywords">
      <MemberSignature Language="C#" Value="public static void LoadDefaultCimKeywords (System.Collections.ObjectModel.Collection&lt;Exception&gt; errors);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void LoadDefaultCimKeywords(class System.Collections.ObjectModel.Collection`1&lt;class System.Exception&gt; errors) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.PowerShell.DesiredStateConfiguration.Internal.DscClassCache.LoadDefaultCimKeywords(System.Collections.ObjectModel.Collection{System.Exception})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub LoadDefaultCimKeywords (errors As Collection(Of Exception))" />
      <MemberSignature Language="F#" Value="static member LoadDefaultCimKeywords : System.Collections.ObjectModel.Collection&lt;Exception&gt; -&gt; unit" Usage="Microsoft.PowerShell.DesiredStateConfiguration.Internal.DscClassCache.LoadDefaultCimKeywords errors" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="errors" Type="System.Collections.ObjectModel.Collection&lt;System.Exception&gt;" />
      </Parameters>
      <Docs>
        <param name="errors">Collection of any errors encountered while loading keywords.</param>
        <summary>
            Load the default system CIM classes and create the corresponding keywords.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadDefaultCimKeywords">
      <MemberSignature Language="C#" Value="public static void LoadDefaultCimKeywords (System.Collections.ObjectModel.Collection&lt;Exception&gt; errors, bool cacheResourcesFromMultipleModuleVersions);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void LoadDefaultCimKeywords(class System.Collections.ObjectModel.Collection`1&lt;class System.Exception&gt; errors, bool cacheResourcesFromMultipleModuleVersions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.PowerShell.DesiredStateConfiguration.Internal.DscClassCache.LoadDefaultCimKeywords(System.Collections.ObjectModel.Collection{System.Exception},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub LoadDefaultCimKeywords (errors As Collection(Of Exception), cacheResourcesFromMultipleModuleVersions As Boolean)" />
      <MemberSignature Language="F#" Value="static member LoadDefaultCimKeywords : System.Collections.ObjectModel.Collection&lt;Exception&gt; * bool -&gt; unit" Usage="Microsoft.PowerShell.DesiredStateConfiguration.Internal.DscClassCache.LoadDefaultCimKeywords (errors, cacheResourcesFromMultipleModuleVersions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="errors" Type="System.Collections.ObjectModel.Collection&lt;System.Exception&gt;" />
        <Parameter Name="cacheResourcesFromMultipleModuleVersions" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="errors">Collection of any errors encountered while loading keywords.</param>
        <param name="cacheResourcesFromMultipleModuleVersions">Allow caching the resources from multiple versions of modules.</param>
        <summary>
            Load the default system CIM classes and create the corresponding keywords.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadResourcesFromModule">
      <MemberSignature Language="C#" Value="public static void LoadResourcesFromModule (System.Management.Automation.Language.IScriptExtent scriptExtent, Microsoft.PowerShell.Commands.ModuleSpecification[] moduleSpecifications, string[] resourceNames, System.Collections.Generic.List&lt;System.Management.Automation.Language.ParseError&gt; errorList);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void LoadResourcesFromModule(class System.Management.Automation.Language.IScriptExtent scriptExtent, class Microsoft.PowerShell.Commands.ModuleSpecification[] moduleSpecifications, string[] resourceNames, class System.Collections.Generic.List`1&lt;class System.Management.Automation.Language.ParseError&gt; errorList) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.PowerShell.DesiredStateConfiguration.Internal.DscClassCache.LoadResourcesFromModule(System.Management.Automation.Language.IScriptExtent,Microsoft.PowerShell.Commands.ModuleSpecification[],System.String[],System.Collections.Generic.List{System.Management.Automation.Language.ParseError})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub LoadResourcesFromModule (scriptExtent As IScriptExtent, moduleSpecifications As ModuleSpecification(), resourceNames As String(), errorList As List(Of ParseError))" />
      <MemberSignature Language="F#" Value="static member LoadResourcesFromModule : System.Management.Automation.Language.IScriptExtent * Microsoft.PowerShell.Commands.ModuleSpecification[] * string[] * System.Collections.Generic.List&lt;System.Management.Automation.Language.ParseError&gt; -&gt; unit" Usage="Microsoft.PowerShell.DesiredStateConfiguration.Internal.DscClassCache.LoadResourcesFromModule (scriptExtent, moduleSpecifications, resourceNames, errorList)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scriptExtent" Type="System.Management.Automation.Language.IScriptExtent" />
        <Parameter Name="moduleSpecifications" Type="Microsoft.PowerShell.Commands.ModuleSpecification[]" />
        <Parameter Name="resourceNames" Type="System.String[]" />
        <Parameter Name="errorList" Type="System.Collections.Generic.List&lt;System.Management.Automation.Language.ParseError&gt;" />
      </Parameters>
      <Docs>
        <param name="scriptExtent">Script statement loading the module, can be null</param>
        <param name="moduleSpecifications">Module information, can be null.</param>
        <param name="resourceNames">Name of the resource to be loaded from module</param>
        <param name="errorList">List of errors reported by the method</param>
        <summary>
            Load DSC resources from specified module.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MissingValueForMandatoryPropertyErrorRecord">
      <MemberSignature Language="C#" Value="public static System.Management.Automation.ErrorRecord MissingValueForMandatoryPropertyErrorRecord (string keywordName, string typeName, string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Management.Automation.ErrorRecord MissingValueForMandatoryPropertyErrorRecord(string keywordName, string typeName, string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.PowerShell.DesiredStateConfiguration.Internal.DscClassCache.MissingValueForMandatoryPropertyErrorRecord(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MissingValueForMandatoryPropertyErrorRecord (keywordName As String, typeName As String, propertyName As String) As ErrorRecord" />
      <MemberSignature Language="F#" Value="static member MissingValueForMandatoryPropertyErrorRecord : string * string * string -&gt; System.Management.Automation.ErrorRecord" Usage="Microsoft.PowerShell.DesiredStateConfiguration.Internal.DscClassCache.MissingValueForMandatoryPropertyErrorRecord (keywordName, typeName, propertyName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.ErrorRecord</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keywordName" Type="System.String" />
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="keywordName"></param>
        <param name="typeName"></param>
        <param name="propertyName"></param>
        <summary>
            Returns an error record to use in the case of no value is provided for a mandatory property
            </summary>
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PsDscRunAsCredentialMergeErrorForCompositeResources">
      <MemberSignature Language="C#" Value="public static System.Management.Automation.ErrorRecord PsDscRunAsCredentialMergeErrorForCompositeResources (string resourceId);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Management.Automation.ErrorRecord PsDscRunAsCredentialMergeErrorForCompositeResources(string resourceId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.PowerShell.DesiredStateConfiguration.Internal.DscClassCache.PsDscRunAsCredentialMergeErrorForCompositeResources(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PsDscRunAsCredentialMergeErrorForCompositeResources (resourceId As String) As ErrorRecord" />
      <MemberSignature Language="F#" Value="static member PsDscRunAsCredentialMergeErrorForCompositeResources : string -&gt; System.Management.Automation.ErrorRecord" Usage="Microsoft.PowerShell.DesiredStateConfiguration.Internal.DscClassCache.PsDscRunAsCredentialMergeErrorForCompositeResources resourceId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.ErrorRecord</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="resourceId">resourceId of resource</param>
        <summary>
            Returns an error record to use when composite resource and its resource instances both has PsDscRunAsCredentials value
            </summary>
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnsupportedValueForPropertyErrorRecord">
      <MemberSignature Language="C#" Value="public static System.Management.Automation.ErrorRecord UnsupportedValueForPropertyErrorRecord (string propertyName, string value, string keywordName, string validValues);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Management.Automation.ErrorRecord UnsupportedValueForPropertyErrorRecord(string propertyName, string value, string keywordName, string validValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.PowerShell.DesiredStateConfiguration.Internal.DscClassCache.UnsupportedValueForPropertyErrorRecord(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UnsupportedValueForPropertyErrorRecord (propertyName As String, value As String, keywordName As String, validValues As String) As ErrorRecord" />
      <MemberSignature Language="F#" Value="static member UnsupportedValueForPropertyErrorRecord : string * string * string * string -&gt; System.Management.Automation.ErrorRecord" Usage="Microsoft.PowerShell.DesiredStateConfiguration.Internal.DscClassCache.UnsupportedValueForPropertyErrorRecord (propertyName, value, keywordName, validValues)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.ErrorRecord</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="keywordName" Type="System.String" />
        <Parameter Name="validValues" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName"></param>
        <param name="value"></param>
        <param name="keywordName"></param>
        <param name="validValues"></param>
        <summary>
            Returns an error record to use in the case of the given value for a property is not supported
            </summary>
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateInstanceText">
      <MemberSignature Language="C#" Value="public static void ValidateInstanceText (string instanceText);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ValidateInstanceText(string instanceText) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.PowerShell.DesiredStateConfiguration.Internal.DscClassCache.ValidateInstanceText(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ValidateInstanceText (instanceText As String)" />
      <MemberSignature Language="F#" Value="static member ValidateInstanceText : string -&gt; unit" Usage="Microsoft.PowerShell.DesiredStateConfiguration.Internal.DscClassCache.ValidateInstanceText instanceText" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceText" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="instanceText"></param>
        <summary>
            A routine that validates a string containing MOF instances against the
            current set of cached classes.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValueNotInRangeErrorRecord">
      <MemberSignature Language="C#" Value="public static System.Management.Automation.ErrorRecord ValueNotInRangeErrorRecord (string property, string name, int providedValue, int lower, int upper);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Management.Automation.ErrorRecord ValueNotInRangeErrorRecord(string property, string name, int32 providedValue, int32 lower, int32 upper) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.PowerShell.DesiredStateConfiguration.Internal.DscClassCache.ValueNotInRangeErrorRecord(System.String,System.String,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ValueNotInRangeErrorRecord (property As String, name As String, providedValue As Integer, lower As Integer, upper As Integer) As ErrorRecord" />
      <MemberSignature Language="F#" Value="static member ValueNotInRangeErrorRecord : string * string * int * int * int -&gt; System.Management.Automation.ErrorRecord" Usage="Microsoft.PowerShell.DesiredStateConfiguration.Internal.DscClassCache.ValueNotInRangeErrorRecord (property, name, providedValue, lower, upper)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.ErrorRecord</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="providedValue" Type="System.Int32" />
        <Parameter Name="lower" Type="System.Int32" />
        <Parameter Name="upper" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="property"></param>
        <param name="name"></param>
        <param name="providedValue"></param>
        <param name="lower"></param>
        <param name="upper"></param>
        <summary>
             Return an error to indicate a value is out of range for a dynamic keyword property
            </summary>
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>