<Type Name="AttributedExpressionAst" FullName="System.Management.Automation.Language.AttributedExpressionAst">
  <TypeSignature Language="C#" Value="public class AttributedExpressionAst : System.Management.Automation.Language.ExpressionAst" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AttributedExpressionAst extends System.Management.Automation.Language.ExpressionAst" />
  <TypeSignature Language="DocId" Value="T:System.Management.Automation.Language.AttributedExpressionAst" />
  <TypeSignature Language="VB.NET" Value="Public Class AttributedExpressionAst&#xA;Inherits ExpressionAst" />
  <TypeSignature Language="F#" Value="type AttributedExpressionAst = class&#xA;    inherit ExpressionAst&#xA;    interface ISupportsAssignment&#xA;    interface IAssignableValue" />
  <AssemblyInfo>
    <AssemblyName>System.Management.Automation</AssemblyName>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Management.Automation.Language.ExpressionAst</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            The ast that represents an expression with an attribute.  This is normally allowed only on parameters or variables
            being assigned, e.g. <c>[Parameter()]$PassThru</c> or <c>[ValidateScript({$true})$abc = 42</c>.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AttributedExpressionAst (System.Management.Automation.Language.IScriptExtent extent, System.Management.Automation.Language.AttributeBaseAst attribute, System.Management.Automation.Language.ExpressionAst child);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Management.Automation.Language.IScriptExtent extent, class System.Management.Automation.Language.AttributeBaseAst attribute, class System.Management.Automation.Language.ExpressionAst child) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Automation.Language.AttributedExpressionAst.#ctor(System.Management.Automation.Language.IScriptExtent,System.Management.Automation.Language.AttributeBaseAst,System.Management.Automation.Language.ExpressionAst)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (extent As IScriptExtent, attribute As AttributeBaseAst, child As ExpressionAst)" />
      <MemberSignature Language="F#" Value="new System.Management.Automation.Language.AttributedExpressionAst : System.Management.Automation.Language.IScriptExtent * System.Management.Automation.Language.AttributeBaseAst * System.Management.Automation.Language.ExpressionAst -&gt; System.Management.Automation.Language.AttributedExpressionAst" Usage="new System.Management.Automation.Language.AttributedExpressionAst (extent, attribute, child)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="extent" Type="System.Management.Automation.Language.IScriptExtent" />
        <Parameter Name="attribute" Type="System.Management.Automation.Language.AttributeBaseAst" />
        <Parameter Name="child" Type="System.Management.Automation.Language.ExpressionAst" />
      </Parameters>
      <Docs>
        <param name="extent">
            The extent of the expression, starting with the attribute and ending after the expression being attributed.
            </param>
        <param name="attribute">The attribute being applied to <paramref name="child" />.</param>
        <param name="child">The expression being attributed by <paramref name="attribute" />.</param>
        <summary>
            Construct an attributed expression.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Management.Automation.PSArgumentNullException">
            If <paramref name="extent" />, <paramref name="attribute" />, or <paramref name="child" /> is null.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Attribute">
      <MemberSignature Language="C#" Value="public System.Management.Automation.Language.AttributeBaseAst Attribute { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Management.Automation.Language.AttributeBaseAst Attribute" />
      <MemberSignature Language="DocId" Value="P:System.Management.Automation.Language.AttributedExpressionAst.Attribute" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Attribute As AttributeBaseAst" />
      <MemberSignature Language="F#" Value="member this.Attribute : System.Management.Automation.Language.AttributeBaseAst" Usage="System.Management.Automation.Language.AttributedExpressionAst.Attribute" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Language.AttributeBaseAst</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The attribute or type constraint for this expression.  This property is never null.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Child">
      <MemberSignature Language="C#" Value="public System.Management.Automation.Language.ExpressionAst Child { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Management.Automation.Language.ExpressionAst Child" />
      <MemberSignature Language="DocId" Value="P:System.Management.Automation.Language.AttributedExpressionAst.Child" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Child As ExpressionAst" />
      <MemberSignature Language="F#" Value="member this.Child : System.Management.Automation.Language.ExpressionAst" Usage="System.Management.Automation.Language.AttributedExpressionAst.Child" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Language.ExpressionAst</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The expression that has an attribute or type constraint applied to it.  This property is never null.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public override System.Management.Automation.Language.Ast Copy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Management.Automation.Language.Ast Copy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Automation.Language.AttributedExpressionAst.Copy" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Copy () As Ast" />
      <MemberSignature Language="F#" Value="override this.Copy : unit -&gt; System.Management.Automation.Language.Ast" Usage="attributedExpressionAst.Copy " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Language.Ast</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Copy the AttributedExpressionAst instance
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>