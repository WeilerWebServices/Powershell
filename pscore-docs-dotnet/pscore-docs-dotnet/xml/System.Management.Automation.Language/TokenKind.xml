<Type Name="TokenKind" FullName="System.Management.Automation.Language.TokenKind">
  <TypeSignature Language="C#" Value="public enum TokenKind" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed TokenKind extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Management.Automation.Language.TokenKind" />
  <TypeSignature Language="VB.NET" Value="Public Enum TokenKind" />
  <TypeSignature Language="F#" Value="type TokenKind = " />
  <AssemblyInfo>
    <AssemblyName>System.Management.Automation</AssemblyName>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>
            The specific kind of token.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Ampersand">
      <MemberSignature Language="C#" Value="Ampersand" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Management.Automation.Language.TokenKind Ampersand = int32(28)" />
      <MemberSignature Language="DocId" Value="F:System.Management.Automation.Language.TokenKind.Ampersand" />
      <MemberSignature Language="VB.NET" Value="Ampersand" />
      <MemberSignature Language="F#" Value="Ampersand = 28" Usage="System.Management.Automation.Language.TokenKind.Ampersand" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Language.TokenKind</ReturnType>
      </ReturnValue>
      <MemberValue>28</MemberValue>
      <Docs>
        <summary>The invocation operator '&amp;'.</summary>
      </Docs>
    </Member>
    <Member MemberName="And">
      <MemberSignature Language="C#" Value="And" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Management.Automation.Language.TokenKind And = int32(53)" />
      <MemberSignature Language="DocId" Value="F:System.Management.Automation.Language.TokenKind.And" />
      <MemberSignature Language="VB.NET" Value="And" />
      <MemberSignature Language="F#" Value="And = 53" Usage="System.Management.Automation.Language.TokenKind.And" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Language.TokenKind</ReturnType>
      </ReturnValue>
      <MemberValue>53</MemberValue>
      <Docs>
        <summary>The logical and operator '-and'.</summary>
      </Docs>
    </Member>
    <Member MemberName="AndAnd">
      <MemberSignature Language="C#" Value="AndAnd" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Management.Automation.Language.TokenKind AndAnd = int32(26)" />
      <MemberSignature Language="DocId" Value="F:System.Management.Automation.Language.TokenKind.AndAnd" />
      <MemberSignature Language="VB.NET" Value="AndAnd" />
      <MemberSignature Language="F#" Value="AndAnd = 26" Usage="System.Management.Automation.Language.TokenKind.AndAnd" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Language.TokenKind</ReturnType>
      </ReturnValue>
      <MemberValue>26</MemberValue>
      <Docs>
        <summary>The (unimplemented) operator '&amp;&amp;'.</summary>
      </Docs>
    </Member>
    <Member MemberName="As">
      <MemberSignature Language="C#" Value="As" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Management.Automation.Language.TokenKind As = int32(94)" />
      <MemberSignature Language="DocId" Value="F:System.Management.Automation.Language.TokenKind.As" />
      <MemberSignature Language="VB.NET" Value="As" />
      <MemberSignature Language="F#" Value="As = 94" Usage="System.Management.Automation.Language.TokenKind.As" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Language.TokenKind</ReturnType>
      </ReturnValue>
      <MemberValue>94</MemberValue>
      <Docs>
        <summary>The type conversion operator '-as'.</summary>
      </Docs>
    </Member>
    <Member MemberName="Assembly">
      <MemberSignature Language="C#" Value="Assembly" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Management.Automation.Language.TokenKind Assembly = int32(165)" />
      <MemberSignature Language="DocId" Value="F:System.Management.Automation.Language.TokenKind.Assembly" />
      <MemberSignature Language="VB.NET" Value="Assembly" />
      <MemberSignature Language="F#" Value="Assembly = 165" Usage="System.Management.Automation.Language.TokenKind.Assembly" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Language.TokenKind</ReturnType>
      </ReturnValue>
      <MemberValue>165</MemberValue>
      <Docs>
        <summary>The 'assembly' keyword</summary>
      </Docs>
    </Member>
    <Member MemberName="AtCurly">
      <MemberSignature Language="C#" Value="AtCurly" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Management.Automation.Language.TokenKind AtCurly = int32(23)" />
      <MemberSignature Language="DocId" Value="F:System.Management.Automation.Language.TokenKind.AtCurly" />
      <MemberSignature Language="VB.NET" Value="AtCurly" />
      <MemberSignature Language="F#" Value="AtCurly = 23" Usage="System.Management.Automation.Language.TokenKind.AtCurly" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Language.TokenKind</ReturnType>
      </ReturnValue>
      <MemberValue>23</MemberValue>
      <Docs>
        <summary>The opening token of a hash expression '@{'.</summary>
      </Docs>
    </Member>
    <Member MemberName="AtParen">
      <MemberSignature Language="C#" Value="AtParen" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Management.Automation.Language.TokenKind AtParen = int32(22)" />
      <MemberSignature Language="DocId" Value="F:System.Management.Automation.Language.TokenKind.AtParen" />
      <MemberSignature Language="VB.NET" Value="AtParen" />
      <MemberSignature Language="F#" Value="AtParen = 22" Usage="System.Management.Automation.Language.TokenKind.AtParen" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Language.TokenKind</ReturnType>
      </ReturnValue>
      <MemberValue>22</MemberValue>
      <Docs>
        <summary>The opening token of an array expression '@('.</summary>
      </Docs>
    </Member>
    <Member MemberName="Band">
      <MemberSignature Language="C#" Value="Band" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Management.Automation.Language.TokenKind Band = int32(56)" />
      <MemberSignature Language="DocId" Value="F:System.Management.Automation.Language.TokenKind.Band" />
      <MemberSignature Language="VB.NET" Value="Band" />
      <MemberSignature Language="F#" Value="Band = 56" Usage="System.Management.Automation.Language.TokenKind.Band" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Language.TokenKind</ReturnType>
      </ReturnValue>
      <MemberValue>56</MemberValue>
      <Docs>
        <summary>The bitwise and operator '-band'.</summary>
      </Docs>
    </Member>
    <Member MemberName="Base">
      <MemberSignature Language="C#" Value="Base" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Management.Automation.Language.TokenKind Base = int32(168)" />
      <MemberSignature Language="DocId" Value="F:System.Management.Automation.Language.TokenKind.Base" />
      <MemberSignature Language="VB.NET" Value="Base" />
      <MemberSignature Language="F#" Value="Base = 168" Usage="System.Management.Automation.Language.TokenKind.Base" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Language.TokenKind</ReturnType>
      </ReturnValue>
      <MemberValue>168</MemberValue>
      <Docs>
        <summary>The 'base' keyword</summary>
      </Docs>
    </Member>
    <Member MemberName="Begin">
      <MemberSignature Language="C#" Value="Begin" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Management.Automation.Language.TokenKind Begin = int32(119)" />
      <MemberSignature Language="DocId" Value="F:System.Management.Automation.Language.TokenKind.Begin" />
      <MemberSignature Language="VB.NET" Value="Begin" />
      <MemberSignature Language="F#" Value="Begin = 119" Usage="System.Management.Automation.Language.TokenKind.Begin" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Language.TokenKind</ReturnType>
      </ReturnValue>
      <MemberValue>119</MemberValue>
      <Docs>
        <summary>The 'begin' keyword.</summary>
      </Docs>
    </Member>
    <Member MemberName="Bnot">
      <MemberSignature Language="C#" Value="Bnot" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Management.Automation.Language.TokenKind Bnot = int32(52)" />
      <MemberSignature Language="DocId" Value="F:System.Management.Automation.Language.TokenKind.Bnot" />
      <MemberSignature Language="VB.NET" Value="Bnot" />
      <MemberSignature Language="F#" Value="Bnot = 52" Usage="System.Management.Automation.Language.TokenKind.Bnot" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Language.TokenKind</ReturnType>
      </ReturnValue>
      <MemberValue>52</MemberValue>
      <Docs>
        <summary>The bitwise not operator '-bnot'.</summary>
      </Docs>
    </Member>
    <Member MemberName="Bor">
      <MemberSignature Language="C#" Value="Bor" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Management.Automation.Language.TokenKind Bor = int32(57)" />
      <MemberSignature Language="DocId" Value="F:System.Management.Automation.Language.TokenKind.Bor" />
      <MemberSignature Language="VB.NET" Value="Bor" />
      <MemberSignature Language="F#" Value="Bor = 57" Usage="System.Management.Automation.Language.TokenKind.Bor" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Language.TokenKind</ReturnType>
      </ReturnValue>
      <MemberValue>57</MemberValue>
      <Docs>
        <summary>The bitwise or operator '-bor'.</summary>
      </Docs>
    </Member>
    <Member MemberName="Break">
      <MemberSignature Language="C#" Value="Break" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Management.Automation.Language.TokenKind Break = int32(120)" />
      <MemberSignature Language="DocId" Value="F:System.Management.Automation.Language.TokenKind.Break" />
      <MemberSignature Language="VB.NET" Value="Break" />
      <MemberSignature Language="F#" Value="Break = 120" Usage="System.Management.Automation.Language.TokenKind.Break" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Language.TokenKind</ReturnType>
      </ReturnValue>
      <MemberValue>120</MemberValue>
      <Docs>
        <summary>The 'break' keyword.</summary>
      </Docs>
    </Member>
    <Member MemberName="Bxor">
      <MemberSignature Language="C#" Value="Bxor" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Management.Automation.Language.TokenKind Bxor = int32(58)" />
      <MemberSignature Language="DocId" Value="F:System.Management.Automation.Language.TokenKind.Bxor" />
      <MemberSignature Language="VB.NET" Value="Bxor" />
      <MemberSignature Language="F#" Value="Bxor = 58" Usage="System.Management.Automation.Language.TokenKind.Bxor" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Language.TokenKind</ReturnType>
      </ReturnValue>
      <MemberValue>58</MemberValue>
      <Docs>
        <summary>The bitwise exclusive or operator '-xor'.</summary>
      </Docs>
    </Member>
    <Member MemberName="Catch">
      <MemberSignature Language="C#" Value="Catch" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Management.Automation.Language.TokenKind Catch = int32(121)" />
      <MemberSignature Language="DocId" Value="F:System.Management.Automation.Language.TokenKind.Catch" />
      <MemberSignature Language="VB.NET" Value="Catch" />
      <MemberSignature Language="F#" Value="Catch = 121" Usage="System.Management.Automation.Language.TokenKind.Catch" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Language.TokenKind</ReturnType>
      </ReturnValue>
      <MemberValue>121</MemberValue>
      <Docs>
        <summary>The 'catch' keyword.</summary>
      </Docs>
    </Member>
    <Member MemberName="Ccontains">
      <MemberSignature Language="C#" Value="Ccontains" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Management.Automation.Language.TokenKind Ccontains = int32(87)" />
      <MemberSignature Language="DocId" Value="F:System.Management.Automation.Language.TokenKind.Ccontains" />
      <MemberSignature Language="VB.NET" Value="Ccontains" />
      <MemberSignature Language="F#" Value="Ccontains = 87" Usage="System.Management.Automation.Language.TokenKind.Ccontains" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Language.TokenKind</ReturnType>
      </ReturnValue>
      <MemberValue>87</MemberValue>
      <Docs>
        <summary>The case sensitive contains operator '-ccontains'.</summary>
      </Docs>
    </Member>
    <Member MemberName="Ceq">
      <MemberSignature Language="C#" Value="Ceq" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Management.Automation.Language.TokenKind Ceq = int32(76)" />
      <MemberSignature Language="DocId" Value="F:System.Management.Automation.Language.TokenKind.Ceq" />
      <MemberSignature Language="VB.NET" Value="Ceq" />
      <MemberSignature Language="F#" Value="Ceq = 76" Usage="System.Management.Automation.Language.TokenKind.Ceq" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Language.TokenKind</ReturnType>
      </ReturnValue>
      <MemberValue>76</MemberValue>
      <Docs>
        <summary>The case sensitive equal operator '-ceq'.</summary>
      </Docs>
    </Member>
    <Member MemberName="Cge">
      <MemberSignature Language="C#" Value="Cge" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Management.Automation.Language.TokenKind Cge = int32(78)" />
      <MemberSignature Language="DocId" Value="F:System.Management.Automation.Language.TokenKind.Cge" />
      <MemberSignature Language="VB.NET" Value="Cge" />
      <MemberSignature Language="F#" Value="Cge = 78" Usage="System.Management.Automation.Language.TokenKind.Cge" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Language.TokenKind</ReturnType>
      </ReturnValue>
      <MemberValue>78</MemberValue>
      <Docs>
        <summary>The case sensitive greater than or equal operator '-cge'.</summary>
      </Docs>
    </Member>
    <Member MemberName="Cgt">
      <MemberSignature Language="C#" Value="Cgt" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Management.Automation.Language.TokenKind Cgt = int32(79)" />
      <MemberSignature Language="DocId" Value="F:System.Management.Automation.Language.TokenKind.Cgt" />
      <MemberSignature Language="VB.NET" Value="Cgt" />
      <MemberSignature Language="F#" Value="Cgt = 79" Usage="System.Management.Automation.Language.TokenKind.Cgt" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Language.TokenKind</ReturnType>
      </ReturnValue>
      <MemberValue>79</MemberValue>
      <Docs>
        <summary>The case sensitive greater than operator '-cgt'.</summary>
      </Docs>
    </Member>
    <Member MemberName="Cin">
      <MemberSignature Language="C#" Value="Cin" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Management.Automation.Language.TokenKind Cin = int32(89)" />
      <MemberSignature Language="DocId" Value="F:System.Management.Automation.Language.TokenKind.Cin" />
      <MemberSignature Language="VB.NET" Value="Cin" />
      <MemberSignature Language="F#" Value="Cin = 89" Usage="System.Management.Automation.Language.TokenKind.Cin" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Language.TokenKind</ReturnType>
      </ReturnValue>
      <MemberValue>89</MemberValue>
      <Docs>
        <summary>The case sensitive in operator '-cin'.</summary>
      </Docs>
    </Member>
    <Member MemberName="Class">
      <MemberSignature Language="C#" Value="Class" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Management.Automation.Language.TokenKind Class = int32(122)" />
      <MemberSignature Language="DocId" Value="F:System.Management.Automation.Language.TokenKind.Class" />
      <MemberSignature Language="VB.NET" Value="Class" />
      <MemberSignature Language="F#" Value="Class = 122" Usage="System.Management.Automation.Language.TokenKind.Class" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Language.TokenKind</ReturnType>
      </ReturnValue>
      <MemberValue>122</MemberValue>
      <Docs>
        <summary>The 'class' keyword.</summary>
      </Docs>
    </Member>
    <Member MemberName="Cle">
      <MemberSignature Language="C#" Value="Cle" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Management.Automation.Language.TokenKind Cle = int32(81)" />
      <MemberSignature Language="DocId" Value="F:System.Management.Automation.Language.TokenKind.Cle" />
      <MemberSignature Language="VB.NET" Value="Cle" />
      <MemberSignature Language="F#" Value="Cle = 81" Usage="System.Management.Automation.Language.TokenKind.Cle" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Language.TokenKind</ReturnType>
      </ReturnValue>
      <MemberValue>81</MemberValue>
      <Docs>
        <summary>The case sensitive less than or equal operator '-cle'.</summary>
      </Docs>
    </Member>
    <Member MemberName="Clike">
      <MemberSignature Language="C#" Value="Clike" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Management.Automation.Language.TokenKind Clike = int32(82)" />
      <MemberSignature Language="DocId" Value="F:System.Management.Automation.Language.TokenKind.Clike" />
      <MemberSignature Language="VB.NET" Value="Clike" />
      <MemberSignature Language="F#" Value="Clike = 82" Usage="System.Management.Automation.Language.TokenKind.Clike" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Language.TokenKind</ReturnType>
      </ReturnValue>
      <MemberValue>82</MemberValue>
      <Docs>
        <summary>The case sensitive like operator '-clike'.</summary>
      </Docs>
    </Member>
    <Member MemberName="Clt">
      <MemberSignature Language="C#" Value="Clt" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Management.Automation.Language.TokenKind Clt = int32(80)" />
      <MemberSignature Language="DocId" Value="F:System.Management.Automation.Language.TokenKind.Clt" />
      <MemberSignature Language="VB.NET" Value="Clt" />
      <MemberSignature Language="F#" Value="Clt = 80" Usage="System.Management.Automation.Language.TokenKind.Clt" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Language.TokenKind</ReturnType>
      </ReturnValue>
      <MemberValue>80</MemberValue>
      <Docs>
        <summary>The case sensitive less than operator '-clt'.</summary>
      </Docs>
    </Member>
    <Member MemberName="Cmatch">
      <MemberSignature Language="C#" Value="Cmatch" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Management.Automation.Language.TokenKind Cmatch = int32(84)" />
      <MemberSignature Language="DocId" Value="F:System.Management.Automation.Language.TokenKind.Cmatch" />
      <MemberSignature Language="VB.NET" Value="Cmatch" />
      <MemberSignature Language="F#" Value="Cmatch = 84" Usage="System.Management.Automation.Language.TokenKind.Cmatch" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Language.TokenKind</ReturnType>
      </ReturnValue>
      <MemberValue>84</MemberValue>
      <Docs>
        <summary>The case sensitive match operator '-cmatch'.</summary>
      </Docs>
    </Member>
    <Member MemberName="Cne">
      <MemberSignature Language="C#" Value="Cne" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Management.Automation.Language.TokenKind Cne = int32(77)" />
      <MemberSignature Language="DocId" Value="F:System.Management.Automation.Language.TokenKind.Cne" />
      <MemberSignature Language="VB.NET" Value="Cne" />
      <MemberSignature Language="F#" Value="Cne = 77" Usage="System.Management.Automation.Language.TokenKind.Cne" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Language.TokenKind</ReturnType>
      </ReturnValue>
      <MemberValue>77</MemberValue>
      <Docs>
        <summary>The case sensitive not equal operator '-cne'.</summary>
      </Docs>
    </Member>
    <Member MemberName="Cnotcontains">
      <MemberSignature Language="C#" Value="Cnotcontains" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Management.Automation.Language.TokenKind Cnotcontains = int32(88)" />
      <MemberSignature Language="DocId" Value="F:System.Management.Automation.Language.TokenKind.Cnotcontains" />
      <MemberSignature Language="VB.NET" Value="Cnotcontains" />
      <MemberSignature Language="F#" Value="Cnotcontains = 88" Usage="System.Management.Automation.Language.TokenKind.Cnotcontains" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Language.TokenKind</ReturnType>
      </ReturnValue>
      <MemberValue>88</MemberValue>
      <Docs>
        <summary>The case sensitive not contains operator '-cnotcontains'.</summary>
      </Docs>
    </Member>
    <Member MemberName="Cnotin">
      <MemberSignature Language="C#" Value="Cnotin" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Management.Automation.Language.TokenKind Cnotin = int32(90)" />
      <MemberSignature Language="DocId" Value="F:System.Management.Automation.Language.TokenKind.Cnotin" />
      <MemberSignature Language="VB.NET" Value="Cnotin" />
      <MemberSignature Language="F#" Value="Cnotin = 90" Usage="System.Management.Automation.Language.TokenKind.Cnotin" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Language.TokenKind</ReturnType>
      </ReturnValue>
      <MemberValue>90</MemberValue>
      <Docs>
        <summary>The case sensitive not in operator '-notin'.</summary>
      </Docs>
    </Member>
    <Member MemberName="Cnotlike">
      <MemberSignature Language="C#" Value="Cnotlike" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Management.Automation.Language.TokenKind Cnotlike = int32(83)" />
      <MemberSignature Language="DocId" Value="F:System.Management.Automation.Language.TokenKind.Cnotlike" />
      <MemberSignature Language="VB.NET" Value="Cnotlike" />
      <MemberSignature Language="F#" Value="Cnotlike = 83" Usage="System.Management.Automation.Language.TokenKind.Cnotlike" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Language.TokenKind</ReturnType>
      </ReturnValue>
      <MemberValue>83</MemberValue>
      <Docs>
        <summary>The case sensitive notlike operator '-cnotlike'.</summary>
      </Docs>
    </Member>
    <Member MemberName="Cnotmatch">
      <MemberSignature Language="C#" Value="Cnotmatch" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Management.Automation.Language.TokenKind Cnotmatch = int32(85)" />
      <MemberSignature Language="DocId" Value="F:System.Management.Automation.Language.TokenKind.Cnotmatch" />
      <MemberSignature Language="VB.NET" Value="Cnotmatch" />
      <MemberSignature Language="F#" Value="Cnotmatch = 85" Usage="System.Management.Automation.Language.TokenKind.Cnotmatch" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Language.TokenKind</ReturnType>
      </ReturnValue>
      <MemberValue>85</MemberValue>
      <Docs>
        <summary>The case sensitive not match operator '-cnotmatch'.</summary>
      </Docs>
    </Member>
    <Member MemberName="Colon">
      <MemberSignature Language="C#" Value="Colon" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Management.Automation.Language.TokenKind Colon = int32(99)" />
      <MemberSignature Language="DocId" Value="F:System.Management.Automation.Language.TokenKind.Colon" />
      <MemberSignature Language="VB.NET" Value="Colon" />
      <MemberSignature Language="F#" Value="Colon = 99" Usage="System.Management.Automation.Language.TokenKind.Colon" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Language.TokenKind</ReturnType>
      </ReturnValue>
      <MemberValue>99</MemberValue>
      <Docs>
        <summary>The PS class base class and implemented interfaces operator ':'. Also used in base class ctor calls.</summary>
      </Docs>
    </Member>
    <Member MemberName="ColonColon">
      <MemberSignature Language="C#" Value="ColonColon" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Management.Automation.Language.TokenKind ColonColon = int32(34)" />
      <MemberSignature Language="DocId" Value="F:System.Management.Automation.Language.TokenKind.ColonColon" />
      <MemberSignature Language="VB.NET" Value="ColonColon" />
      <MemberSignature Language="F#" Value="ColonColon = 34" Usage="System.Management.Automation.Language.TokenKind.ColonColon" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Language.TokenKind</ReturnType>
      </ReturnValue>
      <MemberValue>34</MemberValue>
      <Docs>
        <summary>The static member access operator '::'.</summary>
      </Docs>
    </Member>
    <Member MemberName="Comma">
      <MemberSignature Language="C#" Value="Comma" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Management.Automation.Language.TokenKind Comma = int32(30)" />
      <MemberSignature Language="DocId" Value="F:System.Management.Automation.Language.TokenKind.Comma" />
      <MemberSignature Language="VB.NET" Value="Comma" />
      <MemberSignature Language="F#" Value="Comma = 30" Usage="System.Management.Automation.Language.TokenKind.Comma" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Language.TokenKind</ReturnType>
      </ReturnValue>
      <MemberValue>30</MemberValue>
      <Docs>
        <summary>The unary or binary array operator ','.</summary>
      </Docs>
    </Member>
    <Member MemberName="Command">
      <MemberSignature Language="C#" Value="Command" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Management.Automation.Language.TokenKind Command = int32(166)" />
      <MemberSignature Language="DocId" Value="F:System.Management.Automation.Language.TokenKind.Command" />
      <MemberSignature Language="VB.NET" Value="Command" />
      <MemberSignature Language="F#" Value="Command = 166" Usage="System.Management.Automation.Language.TokenKind.Command" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Language.TokenKind</ReturnType>
      </ReturnValue>
      <MemberValue>166</MemberValue>
      <Docs>
        <summary>The 'command' keyword</summary>
      </Docs>
    </Member>
    <Member MemberName="Comment">
      <MemberSignature Language="C#" Value="Comment" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Management.Automation.Language.TokenKind Comment = int32(10)" />
      <MemberSignature Language="DocId" Value="F:System.Management.Automation.Language.TokenKind.Comment" />
      <MemberSignature Language="VB.NET" Value="Comment" />
      <MemberSignature Language="F#" Value="Comment = 10" Usage="System.Management.Automation.Language.TokenKind.Comment" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Language.TokenKind</ReturnType>
      </ReturnValue>
      <MemberValue>10</MemberValue>
      <Docs>
        <summary>A single line comment, or a delimited comment.</summary>
      </Docs>
    </Member>
    <Member MemberName="Configuration">
      <MemberSignature Language="C#" Value="Configuration" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Management.Automation.Language.TokenKind Configuration = int32(155)" />
      <MemberSignature Language="DocId" Value="F:System.Management.Automation.Language.TokenKind.Configuration" />
      <MemberSignature Language="VB.NET" Value="Configuration" />
      <MemberSignature Language="F#" Value="Configuration = 155" Usage="System.Management.Automation.Language.TokenKind.Configuration" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Language.TokenKind</ReturnType>
      </ReturnValue>
      <MemberValue>155</MemberValue>
      <Docs>
        <summary>The "configuration" keyword</summary>
      </Docs>
    </Member>
    <Member MemberName="Continue">
      <MemberSignature Language="C#" Value="Continue" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Management.Automation.Language.TokenKind Continue = int32(123)" />
      <MemberSignature Language="DocId" Value="F:System.Management.Automation.Language.TokenKind.Continue" />
      <MemberSignature Language="VB.NET" Value="Continue" />
      <MemberSignature Language="F#" Value="Continue = 123" Usage="System.Management.Automation.Language.TokenKind.Continue" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Language.TokenKind</ReturnType>
      </ReturnValue>
      <MemberValue>123</MemberValue>
      <Docs>
        <summary>The 'continue' keyword.</summary>
      </Docs>
    </Member>
    <Member MemberName="Creplace">
      <MemberSignature Language="C#" Value="Creplace" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Management.Automation.Language.TokenKind Creplace = int32(86)" />
      <MemberSignature Language="DocId" Value="F:System.Management.Automation.Language.TokenKind.Creplace" />
      <MemberSignature Language="VB.NET" Value="Creplace" />
      <MemberSignature Language="F#" Value="Creplace = 86" Usage="System.Management.Automation.Language.TokenKind.Creplace" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Language.TokenKind</ReturnType>
      </ReturnValue>
      <MemberValue>86</MemberValue>
      <Docs>
        <summary>The case sensitive replace operator '-creplace'.</summary>
      </Docs>
    </Member>
    <Member MemberName="Csplit">
      <MemberSignature Language="C#" Value="Csplit" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Management.Automation.Language.TokenKind Csplit = int32(91)" />
      <MemberSignature Language="DocId" Value="F:System.Management.Automation.Language.TokenKind.Csplit" />
      <MemberSignature Language="VB.NET" Value="Csplit" />
      <MemberSignature Language="F#" Value="Csplit = 91" Usage="System.Management.Automation.Language.TokenKind.Csplit" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Language.TokenKind</ReturnType>
      </ReturnValue>
      <MemberValue>91</MemberValue>
      <Docs>
        <summary>The case sensitive split operator '-csplit'.</summary>
      </Docs>
    </Member>
    <Member MemberName="Data">
      <MemberSignature Language="C#" Value="Data" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Management.Automation.Language.TokenKind Data = int32(124)" />
      <MemberSignature Language="DocId" Value="F:System.Management.Automation.Language.TokenKind.Data" />
      <MemberSignature Language="VB.NET" Value="Data" />
      <MemberSignature Language="F#" Value="Data = 124" Usage="System.Management.Automation.Language.TokenKind.Data" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Language.TokenKind</ReturnType>
      </ReturnValue>
      <MemberValue>124</MemberValue>
      <Docs>
        <summary>The 'data' keyword.</summary>
      </Docs>
    </Member>
    <Member MemberName="Define">
      <MemberSignature Language="C#" Value="Define" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Management.Automation.Language.TokenKind Define = int32(125)" />
      <MemberSignature Language="DocId" Value="F:System.Management.Automation.Language.TokenKind.Define" />
      <MemberSignature Language="VB.NET" Value="Define" />
      <MemberSignature Language="F#" Value="Define = 125" Usage="System.Management.Automation.Language.TokenKind.Define" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Language.TokenKind</ReturnType>
      </ReturnValue>
      <MemberValue>125</MemberValue>
      <Docs>
        <summary>The (unimplemented) 'define' keyword.</summary>
      </Docs>
    </Member>
    <Member MemberName="Divide">
      <MemberSignature Language="C#" Value="Divide" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Management.Automation.Language.TokenKind Divide = int32(38)" />
      <MemberSignature Language="DocId" Value="F:System.Management.Automation.Language.TokenKind.Divide" />
      <MemberSignature Language="VB.NET" Value="Divide" />
      <MemberSignature Language="F#" Value="Divide = 38" Usage="System.Management.Automation.Language.TokenKind.Divide" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Language.TokenKind</ReturnType>
      </ReturnValue>
      <MemberValue>38</MemberValue>
      <Docs>
        <summary>The division operator '/'.</summary>
      </Docs>
    </Member>
    <Member MemberName="DivideEquals">
      <MemberSignature Language="C#" Value="DivideEquals" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Management.Automation.Language.TokenKind DivideEquals = int32(46)" />
      <MemberSignature Language="DocId" Value="F:System.Management.Automation.Language.TokenKind.DivideEquals" />
      <MemberSignature Language="VB.NET" Value="DivideEquals" />
      <MemberSignature Language="F#" Value="DivideEquals = 46" Usage="System.Management.Automation.Language.TokenKind.DivideEquals" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Language.TokenKind</ReturnType>
      </ReturnValue>
      <MemberValue>46</MemberValue>
      <Docs>
        <summary>The division assignment operator '/='.</summary>
      </Docs>
    </Member>
    <Member MemberName="Do">
      <MemberSignature Language="C#" Value="Do" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Management.Automation.Language.TokenKind Do = int32(126)" />
      <MemberSignature Language="DocId" Value="F:System.Management.Automation.Language.TokenKind.Do" />
      <MemberSignature Language="VB.NET" Value="Do" />
      <MemberSignature Language="F#" Value="Do = 126" Usage="System.Management.Automation.Language.TokenKind.Do" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Language.TokenKind</ReturnType>
      </ReturnValue>
      <MemberValue>126</MemberValue>
      <Docs>
        <summary>The 'do' keyword.</summary>
      </Docs>
    </Member>
    <Member MemberName="DollarParen">
      <MemberSignature Language="C#" Value="DollarParen" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Management.Automation.Language.TokenKind DollarParen = int32(24)" />
      <MemberSignature Language="DocId" Value="F:System.Management.Automation.Language.TokenKind.DollarParen" />
      <MemberSignature Language="VB.NET" Value="DollarParen" />
      <MemberSignature Language="F#" Value="DollarParen = 24" Usage="System.Management.Automation.Language.TokenKind.DollarParen" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Language.TokenKind</ReturnType>
      </ReturnValue>
      <MemberValue>24</MemberValue>
      <Docs>
        <summary>The opening token of a sub-expression '$('.</summary>
      </Docs>
    </Member>
    <Member MemberName="Dot">
      <MemberSignature Language="C#" Value="Dot" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Management.Automation.Language.TokenKind Dot = int32(35)" />
      <MemberSignature Language="DocId" Value="F:System.Management.Automation.Language.TokenKind.Dot" />
      <MemberSignature Language="VB.NET" Value="Dot" />
      <MemberSignature Language="F#" Value="Dot = 35" Usage="System.Management.Automation.Language.TokenKind.Dot" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Language.TokenKind</ReturnType>
      </ReturnValue>
      <MemberValue>35</MemberValue>
      <Docs>
        <summary>The instance member access or dot source invocation operator '.'.</summary>
      </Docs>
    </Member>
    <Member MemberName="DotDot">
      <MemberSignature Language="C#" Value="DotDot" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Management.Automation.Language.TokenKind DotDot = int32(33)" />
      <MemberSignature Language="DocId" Value="F:System.Management.Automation.Language.TokenKind.DotDot" />
      <MemberSignature Language="VB.NET" Value="DotDot" />
      <MemberSignature Language="F#" Value="DotDot = 33" Usage="System.Management.Automation.Language.TokenKind.DotDot" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Language.TokenKind</ReturnType>
      </ReturnValue>
      <MemberValue>33</MemberValue>
      <Docs>
        <summary>The range operator '..'.</summary>
      </Docs>
    </Member>
    <Member MemberName="DynamicKeyword">
      <MemberSignature Language="C#" Value="DynamicKeyword" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Management.Automation.Language.TokenKind DynamicKeyword = int32(156)" />
      <MemberSignature Language="DocId" Value="F:System.Management.Automation.Language.TokenKind.DynamicKeyword" />
      <MemberSignature Language="VB.NET" Value="DynamicKeyword" />
      <MemberSignature Language="F#" Value="DynamicKeyword = 156" Usage="System.Management.Automation.Language.TokenKind.DynamicKeyword" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Language.TokenKind</ReturnType>
      </ReturnValue>
      <MemberValue>156</MemberValue>
      <Docs>
        <summary>The token kind for dynamic keywords</summary>
      </Docs>
    </Member>
    <Member MemberName="Dynamicparam">
      <MemberSignature Language="C#" Value="Dynamicparam" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Management.Automation.Language.TokenKind Dynamicparam = int32(127)" />
      <MemberSignature Language="DocId" Value="F:System.Management.Automation.Language.TokenKind.Dynamicparam" />
      <MemberSignature Language="VB.NET" Value="Dynamicparam" />
      <MemberSignature Language="F#" Value="Dynamicparam = 127" Usage="System.Management.Automation.Language.TokenKind.Dynamicparam" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Language.TokenKind</ReturnType>
      </ReturnValue>
      <MemberValue>127</MemberValue>
      <Docs>
        <summary>The 'dynamicparam' keyword.</summary>
      </Docs>
    </Member>
    <Member MemberName="Else">
      <MemberSignature Language="C#" Value="Else" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Management.Automation.Language.TokenKind Else = int32(128)" />
      <MemberSignature Language="DocId" Value="F:System.Management.Automation.Language.TokenKind.Else" />
      <MemberSignature Language="VB.NET" Value="Else" />
      <MemberSignature Language="F#" Value="Else = 128" Usage="System.Management.Automation.Language.TokenKind.Else" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Language.TokenKind</ReturnType>
      </ReturnValue>
      <MemberValue>128</MemberValue>
      <Docs>
        <summary>The 'else' keyword.</summary>
      </Docs>
    </Member>
    <Member MemberName="ElseIf">
      <MemberSignature Language="C#" Value="ElseIf" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Management.Automation.Language.TokenKind ElseIf = int32(129)" />
      <MemberSignature Language="DocId" Value="F:System.Management.Automation.Language.TokenKind.ElseIf" />
      <MemberSignature Language="VB.NET" Value="ElseIf" />
      <MemberSignature Language="F#" Value="ElseIf = 129" Usage="System.Management.Automation.Language.TokenKind.ElseIf" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Language.TokenKind</ReturnType>
      </ReturnValue>
      <MemberValue>129</MemberValue>
      <Docs>
        <summary>The 'elseif' keyword.</summary>
      </Docs>
    </Member>
    <Member MemberName="End">
      <MemberSignature Language="C#" Value="End" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Management.Automation.Language.TokenKind End = int32(130)" />
      <MemberSignature Language="DocId" Value="F:System.Management.Automation.Language.TokenKind.End" />
      <MemberSignature Language="VB.NET" Value="End" />
      <MemberSignature Language="F#" Value="End = 130" Usage="System.Management.Automation.Language.TokenKind.End" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Language.TokenKind</ReturnType>
      </ReturnValue>
      <MemberValue>130</MemberValue>
      <Docs>
        <summary>The 'end' keyword.</summary>
      </Docs>
    </Member>
    <Member MemberName="EndOfInput">
      <MemberSignature Language="C#" Value="EndOfInput" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Management.Automation.Language.TokenKind EndOfInput = int32(11)" />
      <MemberSignature Language="DocId" Value="F:System.Management.Automation.Language.TokenKind.EndOfInput" />
      <MemberSignature Language="VB.NET" Value="EndOfInput" />
      <MemberSignature Language="F#" Value="EndOfInput = 11" Usage="System.Management.Automation.Language.TokenKind.EndOfInput" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Language.TokenKind</ReturnType>
      </ReturnValue>
      <MemberValue>11</MemberValue>
      <Docs>
        <summary>Marks the end of the input script or file.</summary>
      </Docs>
    </Member>
    <Member MemberName="Enum">
      <MemberSignature Language="C#" Value="Enum" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Management.Automation.Language.TokenKind Enum = int32(161)" />
      <MemberSignature Language="DocId" Value="F:System.Management.Automation.Language.TokenKind.Enum" />
      <MemberSignature Language="VB.NET" Value="Enum" />
      <MemberSignature Language="F#" Value="Enum = 161" Usage="System.Management.Automation.Language.TokenKind.Enum" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Language.TokenKind</ReturnType>
      </ReturnValue>
      <MemberValue>161</MemberValue>
      <Docs>
        <summary>The 'enum' keyword</summary>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="Equals" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Management.Automation.Language.TokenKind Equals = int32(42)" />
      <MemberSignature Language="DocId" Value="F:System.Management.Automation.Language.TokenKind.Equals" />
      <MemberSignature Language="VB.NET" Value="Equals" />
      <MemberSignature Language="F#" Value="Equals = 42" Usage="System.Management.Automation.Language.TokenKind.Equals" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Language.TokenKind</ReturnType>
      </ReturnValue>
      <MemberValue>42</MemberValue>
      <Docs>
        <summary>The assignment operator '='.</summary>
      </Docs>
    </Member>
    <Member MemberName="Exclaim">
      <MemberSignature Language="C#" Value="Exclaim" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Management.Automation.Language.TokenKind Exclaim = int32(36)" />
      <MemberSignature Language="DocId" Value="F:System.Management.Automation.Language.TokenKind.Exclaim" />
      <MemberSignature Language="VB.NET" Value="Exclaim" />
      <MemberSignature Language="F#" Value="Exclaim = 36" Usage="System.Management.Automation.Language.TokenKind.Exclaim" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Language.TokenKind</ReturnType>
      </ReturnValue>
      <MemberValue>36</MemberValue>
      <Docs>
        <summary>The logical not operator '!'.</summary>
      </Docs>
    </Member>
    <Member MemberName="Exit">
      <MemberSignature Language="C#" Value="Exit" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Management.Automation.Language.TokenKind Exit = int32(131)" />
      <MemberSignature Language="DocId" Value="F:System.Management.Automation.Language.TokenKind.Exit" />
      <MemberSignature Language="VB.NET" Value="Exit" />
      <MemberSignature Language="F#" Value="Exit = 131" Usage="System.Management.Automation.Language.TokenKind.Exit" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Language.TokenKind</ReturnType>
      </ReturnValue>
      <MemberValue>131</MemberValue>
      <Docs>
        <summary>The 'exit' keyword.</summary>
      </Docs>
    </Member>
    <Member MemberName="Filter">
      <MemberSignature Language="C#" Value="Filter" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Management.Automation.Language.TokenKind Filter = int32(132)" />
      <MemberSignature Language="DocId" Value="F:System.Management.Automation.Language.TokenKind.Filter" />
      <MemberSignature Language="VB.NET" Value="Filter" />
      <MemberSignature Language="F#" Value="Filter = 132" Usage="System.Management.Automation.Language.TokenKind.Filter" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Language.TokenKind</ReturnType>
      </ReturnValue>
      <MemberValue>132</MemberValue>
      <Docs>
        <summary>The 'filter' keyword.</summary>
      </Docs>
    </Member>
    <Member MemberName="Finally">
      <MemberSignature Language="C#" Value="Finally" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Management.Automation.Language.TokenKind Finally = int32(133)" />
      <MemberSignature Language="DocId" Value="F:System.Management.Automation.Language.TokenKind.Finally" />
      <MemberSignature Language="VB.NET" Value="Finally" />
      <MemberSignature Language="F#" Value="Finally = 133" Usage="System.Management.Automation.Language.TokenKind.Finally" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Language.TokenKind</ReturnType>
      </ReturnValue>
      <MemberValue>133</MemberValue>
      <Docs>
        <summary>The 'finally' keyword.</summary>
      </Docs>
    </Member>
    <Member MemberName="For">
      <MemberSignature Language="C#" Value="For" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Management.Automation.Language.TokenKind For = int32(134)" />
      <MemberSignature Language="DocId" Value="F:System.Management.Automation.Language.TokenKind.For" />
      <MemberSignature Language="VB.NET" Value="For" />
      <MemberSignature Language="F#" Value="For = 134" Usage="System.Management.Automation.Language.TokenKind.For" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Language.TokenKind</ReturnType>
      </ReturnValue>
      <MemberValue>134</MemberValue>
      <Docs>
        <summary>The 'for' keyword.</summary>
      </Docs>
    </Member>
    <Member MemberName="Foreach">
      <MemberSignature Language="C#" Value="Foreach" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Management.Automation.Language.TokenKind Foreach = int32(135)" />
      <MemberSignature Language="DocId" Value="F:System.Management.Automation.Language.TokenKind.Foreach" />
      <MemberSignature Language="VB.NET" Value="Foreach" />
      <MemberSignature Language="F#" Value="Foreach = 135" Usage="System.Management.Automation.Language.TokenKind.Foreach" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Language.TokenKind</ReturnType>
      </ReturnValue>
      <MemberValue>135</MemberValue>
      <Docs>
        <summary>The 'foreach' keyword.</summary>
      </Docs>
    </Member>
    <Member MemberName="Format">
      <MemberSignature Language="C#" Value="Format" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Management.Automation.Language.TokenKind Format = int32(50)" />
      <MemberSignature Language="DocId" Value="F:System.Management.Automation.Language.TokenKind.Format" />
      <MemberSignature Language="VB.NET" Value="Format" />
      <MemberSignature Language="F#" Value="Format = 50" Usage="System.Management.Automation.Language.TokenKind.Format" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Language.TokenKind</ReturnType>
      </ReturnValue>
      <MemberValue>50</MemberValue>
      <Docs>
        <summary>The string format operator '-f'.</summary>
      </Docs>
    </Member>
    <Member MemberName="From">
      <MemberSignature Language="C#" Value="From" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Management.Automation.Language.TokenKind From = int32(136)" />
      <MemberSignature Language="DocId" Value="F:System.Management.Automation.Language.TokenKind.From" />
      <MemberSignature Language="VB.NET" Value="From" />
      <MemberSignature Language="F#" Value="From = 136" Usage="System.Management.Automation.Language.TokenKind.From" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Language.TokenKind</ReturnType>
      </ReturnValue>
      <MemberValue>136</MemberValue>
      <Docs>
        <summary>The (unimplemented) 'from' keyword.</summary>
      </Docs>
    </Member>
    <Member MemberName="Function">
      <MemberSignature Language="C#" Value="Function" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Management.Automation.Language.TokenKind Function = int32(137)" />
      <MemberSignature Language="DocId" Value="F:System.Management.Automation.Language.TokenKind.Function" />
      <MemberSignature Language="VB.NET" Value="Function" />
      <MemberSignature Language="F#" Value="Function = 137" Usage="System.Management.Automation.Language.TokenKind.Function" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Language.TokenKind</ReturnType>
      </ReturnValue>
      <MemberValue>137</MemberValue>
      <Docs>
        <summary>The 'function' keyword.</summary>
      </Docs>
    </Member>
    <Member MemberName="Generic">
      <MemberSignature Language="C#" Value="Generic" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Management.Automation.Language.TokenKind Generic = int32(7)" />
      <MemberSignature Language="DocId" Value="F:System.Management.Automation.Language.TokenKind.Generic" />
      <MemberSignature Language="VB.NET" Value="Generic" />
      <MemberSignature Language="F#" Value="Generic = 7" Usage="System.Management.Automation.Language.TokenKind.Generic" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Language.TokenKind</ReturnType>
      </ReturnValue>
      <MemberValue>7</MemberValue>
      <Docs>
        <summary>
            A token that is only valid as a command name, command argument, function name, or configuration name.  It may contain
            characters not allowed in identifiers.
            Tokens with this kind are always instances of <see cref="T:System.Management.Automation.Language.StringLiteralToken" />
            or <see cref="T:System.Management.Automation.Language.StringExpandableToken" /> if the token contains variable
            references or subexpressions.
            </summary>
      </Docs>
    </Member>
    <Member MemberName="HereStringExpandable">
      <MemberSignature Language="C#" Value="HereStringExpandable" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Management.Automation.Language.TokenKind HereStringExpandable = int32(15)" />
      <MemberSignature Language="DocId" Value="F:System.Management.Automation.Language.TokenKind.HereStringExpandable" />
      <MemberSignature Language="VB.NET" Value="HereStringExpandable" />
      <MemberSignature Language="F#" Value="HereStringExpandable = 15" Usage="System.Management.Automation.Language.TokenKind.HereStringExpandable" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Language.TokenKind</ReturnType>
      </ReturnValue>
      <MemberValue>15</MemberValue>
      <Docs>
        <summary>
            A double quoted here string literal.
            Tokens with this kind are always instances of <see cref="T:System.Management.Automation.Language.StringExpandableToken" />.
            even if there are no nested tokens to expand.
            </summary>
      </Docs>
    </Member>
    <Member MemberName="HereStringLiteral">
      <MemberSignature Language="C#" Value="HereStringLiteral" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Management.Automation.Language.TokenKind HereStringLiteral = int32(14)" />
      <MemberSignature Language="DocId" Value="F:System.Management.Automation.Language.TokenKind.HereStringLiteral" />
      <MemberSignature Language="VB.NET" Value="HereStringLiteral" />
      <MemberSignature Language="F#" Value="HereStringLiteral = 14" Usage="System.Management.Automation.Language.TokenKind.HereStringLiteral" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Language.TokenKind</ReturnType>
      </ReturnValue>
      <MemberValue>14</MemberValue>
      <Docs>
        <summary>
            A single quoted here string literal.
            Tokens with this kind are always instances of <see cref="T:System.Management.Automation.Language.StringLiteralToken" />.
            </summary>
      </Docs>
    </Member>
    <Member MemberName="Hidden">
      <MemberSignature Language="C#" Value="Hidden" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Management.Automation.Language.TokenKind Hidden = int32(167)" />
      <MemberSignature Language="DocId" Value="F:System.Management.Automation.Language.TokenKind.Hidden" />
      <MemberSignature Language="VB.NET" Value="Hidden" />
      <MemberSignature Language="F#" Value="Hidden = 167" Usage="System.Management.Automation.Language.TokenKind.Hidden" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Language.TokenKind</ReturnType>
      </ReturnValue>
      <MemberValue>167</MemberValue>
      <Docs>
        <summary>The 'hidden' keyword</summary>
      </Docs>
    </Member>
    <Member MemberName="Icontains">
      <MemberSignature Language="C#" Value="Icontains" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Management.Automation.Language.TokenKind Icontains = int32(71)" />
      <MemberSignature Language="DocId" Value="F:System.Management.Automation.Language.TokenKind.Icontains" />
      <MemberSignature Language="VB.NET" Value="Icontains" />
      <MemberSignature Language="F#" Value="Icontains = 71" Usage="System.Management.Automation.Language.TokenKind.Icontains" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Language.TokenKind</ReturnType>
      </ReturnValue>
      <MemberValue>71</MemberValue>
      <Docs>
        <summary>The case insensitive contains operator '-icontains' or '-contains'.</summary>
      </Docs>
    </Member>
    <Member MemberName="Identifier">
      <MemberSignature Language="C#" Value="Identifier" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Management.Automation.Language.TokenKind Identifier = int32(6)" />
      <MemberSignature Language="DocId" Value="F:System.Management.Automation.Language.TokenKind.Identifier" />
      <MemberSignature Language="VB.NET" Value="Identifier" />
      <MemberSignature Language="F#" Value="Identifier = 6" Usage="System.Management.Automation.Language.TokenKind.Identifier" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Language.TokenKind</ReturnType>
      </ReturnValue>
      <MemberValue>6</MemberValue>
      <Docs>
        <summary>
            A simple identifier, always begins with a letter or '_', and is followed by letters, numbers, or '_'.
            </summary>
      </Docs>
    </Member>
    <Member MemberName="Ieq">
      <MemberSignature Language="C#" Value="Ieq" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Management.Automation.Language.TokenKind Ieq = int32(60)" />
      <MemberSignature Language="DocId" Value="F:System.Management.Automation.Language.TokenKind.Ieq" />
      <MemberSignature Language="VB.NET" Value="Ieq" />
      <MemberSignature Language="F#" Value="Ieq = 60" Usage="System.Management.Automation.Language.TokenKind.Ieq" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Language.TokenKind</ReturnType>
      </ReturnValue>
      <MemberValue>60</MemberValue>
      <Docs>
        <summary>The case insensitive equal operator '-ieq' or '-eq'.</summary>
      </Docs>
    </Member>
    <Member MemberName="If">
      <MemberSignature Language="C#" Value="If" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Management.Automation.Language.TokenKind If = int32(138)" />
      <MemberSignature Language="DocId" Value="F:System.Management.Automation.Language.TokenKind.If" />
      <MemberSignature Language="VB.NET" Value="If" />
      <MemberSignature Language="F#" Value="If = 138" Usage="System.Management.Automation.Language.TokenKind.If" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Language.TokenKind</ReturnType>
      </ReturnValue>
      <MemberValue>138</MemberValue>
      <Docs>
        <summary>The 'if' keyword.</summary>
      </Docs>
    </Member>
    <Member MemberName="Ige">
      <MemberSignature Language="C#" Value="Ige" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Management.Automation.Language.TokenKind Ige = int32(62)" />
      <MemberSignature Language="DocId" Value="F:System.Management.Automation.Language.TokenKind.Ige" />
      <MemberSignature Language="VB.NET" Value="Ige" />
      <MemberSignature Language="F#" Value="Ige = 62" Usage="System.Management.Automation.Language.TokenKind.Ige" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Language.TokenKind</ReturnType>
      </ReturnValue>
      <MemberValue>62</MemberValue>
      <Docs>
        <summary>The case insensitive greater than or equal operator '-ige' or '-ge'.</summary>
      </Docs>
    </Member>
    <Member MemberName="Igt">
      <MemberSignature Language="C#" Value="Igt" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Management.Automation.Language.TokenKind Igt = int32(63)" />
      <MemberSignature Language="DocId" Value="F:System.Management.Automation.Language.TokenKind.Igt" />
      <MemberSignature Language="VB.NET" Value="Igt" />
      <MemberSignature Language="F#" Value="Igt = 63" Usage="System.Management.Automation.Language.TokenKind.Igt" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Language.TokenKind</ReturnType>
      </ReturnValue>
      <MemberValue>63</MemberValue>
      <Docs>
        <summary>The case insensitive greater than operator '-igt' or '-gt'.</summary>
      </Docs>
    </Member>
    <Member MemberName="Iin">
      <MemberSignature Language="C#" Value="Iin" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Management.Automation.Language.TokenKind Iin = int32(73)" />
      <MemberSignature Language="DocId" Value="F:System.Management.Automation.Language.TokenKind.Iin" />
      <MemberSignature Language="VB.NET" Value="Iin" />
      <MemberSignature Language="F#" Value="Iin = 73" Usage="System.Management.Automation.Language.TokenKind.Iin" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Language.TokenKind</ReturnType>
      </ReturnValue>
      <MemberValue>73</MemberValue>
      <Docs>
        <summary>The case insensitive in operator '-iin' or '-in'.</summary>
      </Docs>
    </Member>
    <Member MemberName="Ile">
      <MemberSignature Language="C#" Value="Ile" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Management.Automation.Language.TokenKind Ile = int32(65)" />
      <MemberSignature Language="DocId" Value="F:System.Management.Automation.Language.TokenKind.Ile" />
      <MemberSignature Language="VB.NET" Value="Ile" />
      <MemberSignature Language="F#" Value="Ile = 65" Usage="System.Management.Automation.Language.TokenKind.Ile" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Language.TokenKind</ReturnType>
      </ReturnValue>
      <MemberValue>65</MemberValue>
      <Docs>
        <summary>The case insensitive less than or equal operator '-ile' or '-le'.</summary>
      </Docs>
    </Member>
    <Member MemberName="Ilike">
      <MemberSignature Language="C#" Value="Ilike" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Management.Automation.Language.TokenKind Ilike = int32(66)" />
      <MemberSignature Language="DocId" Value="F:System.Management.Automation.Language.TokenKind.Ilike" />
      <MemberSignature Language="VB.NET" Value="Ilike" />
      <MemberSignature Language="F#" Value="Ilike = 66" Usage="System.Management.Automation.Language.TokenKind.Ilike" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Language.TokenKind</ReturnType>
      </ReturnValue>
      <MemberValue>66</MemberValue>
      <Docs>
        <summary>The case insensitive like operator '-ilike' or '-like'.</summary>
      </Docs>
    </Member>
    <Member MemberName="Ilt">
      <MemberSignature Language="C#" Value="Ilt" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Management.Automation.Language.TokenKind Ilt = int32(64)" />
      <MemberSignature Language="DocId" Value="F:System.Management.Automation.Language.TokenKind.Ilt" />
      <MemberSignature Language="VB.NET" Value="Ilt" />
      <MemberSignature Language="F#" Value="Ilt = 64" Usage="System.Management.Automation.Language.TokenKind.Ilt" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Language.TokenKind</ReturnType>
      </ReturnValue>
      <MemberValue>64</MemberValue>
      <Docs>
        <summary>The case insensitive less than operator '-ilt' or '-lt'.</summary>
      </Docs>
    </Member>
    <Member MemberName="Imatch">
      <MemberSignature Language="C#" Value="Imatch" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Management.Automation.Language.TokenKind Imatch = int32(68)" />
      <MemberSignature Language="DocId" Value="F:System.Management.Automation.Language.TokenKind.Imatch" />
      <MemberSignature Language="VB.NET" Value="Imatch" />
      <MemberSignature Language="F#" Value="Imatch = 68" Usage="System.Management.Automation.Language.TokenKind.Imatch" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Language.TokenKind</ReturnType>
      </ReturnValue>
      <MemberValue>68</MemberValue>
      <Docs>
        <summary>The case insensitive match operator '-imatch' or '-match'.</summary>
      </Docs>
    </Member>
    <Member MemberName="In">
      <MemberSignature Language="C#" Value="In" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Management.Automation.Language.TokenKind In = int32(139)" />
      <MemberSignature Language="DocId" Value="F:System.Management.Automation.Language.TokenKind.In" />
      <MemberSignature Language="VB.NET" Value="In" />
      <MemberSignature Language="F#" Value="In = 139" Usage="System.Management.Automation.Language.TokenKind.In" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Language.TokenKind</ReturnType>
      </ReturnValue>
      <MemberValue>139</MemberValue>
      <Docs>
        <summary>The 'in' keyword.</summary>
      </Docs>
    </Member>
    <Member MemberName="Ine">
      <MemberSignature Language="C#" Value="Ine" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Management.Automation.Language.TokenKind Ine = int32(61)" />
      <MemberSignature Language="DocId" Value="F:System.Management.Automation.Language.TokenKind.Ine" />
      <MemberSignature Language="VB.NET" Value="Ine" />
      <MemberSignature Language="F#" Value="Ine = 61" Usage="System.Management.Automation.Language.TokenKind.Ine" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Language.TokenKind</ReturnType>
      </ReturnValue>
      <MemberValue>61</MemberValue>
      <Docs>
        <summary>The case insensitive not equal operator '-ine' or '-ne'.</summary>
      </Docs>
    </Member>
    <Member MemberName="InlineScript">
      <MemberSignature Language="C#" Value="InlineScript" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Management.Automation.Language.TokenKind InlineScript = int32(154)" />
      <MemberSignature Language="DocId" Value="F:System.Management.Automation.Language.TokenKind.InlineScript" />
      <MemberSignature Language="VB.NET" Value="InlineScript" />
      <MemberSignature Language="F#" Value="InlineScript = 154" Usage="System.Management.Automation.Language.TokenKind.InlineScript" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Language.TokenKind</ReturnType>
      </ReturnValue>
      <MemberValue>154</MemberValue>
      <Docs>
        <summary>The 'InlineScript' keyword</summary>
      </Docs>
    </Member>
    <Member MemberName="Inotcontains">
      <MemberSignature Language="C#" Value="Inotcontains" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Management.Automation.Language.TokenKind Inotcontains = int32(72)" />
      <MemberSignature Language="DocId" Value="F:System.Management.Automation.Language.TokenKind.Inotcontains" />
      <MemberSignature Language="VB.NET" Value="Inotcontains" />
      <MemberSignature Language="F#" Value="Inotcontains = 72" Usage="System.Management.Automation.Language.TokenKind.Inotcontains" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Language.TokenKind</ReturnType>
      </ReturnValue>
      <MemberValue>72</MemberValue>
      <Docs>
        <summary>The case insensitive notcontains operator '-inotcontains' or '-notcontains'.</summary>
      </Docs>
    </Member>
    <Member MemberName="Inotin">
      <MemberSignature Language="C#" Value="Inotin" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Management.Automation.Language.TokenKind Inotin = int32(74)" />
      <MemberSignature Language="DocId" Value="F:System.Management.Automation.Language.TokenKind.Inotin" />
      <MemberSignature Language="VB.NET" Value="Inotin" />
      <MemberSignature Language="F#" Value="Inotin = 74" Usage="System.Management.Automation.Language.TokenKind.Inotin" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Language.TokenKind</ReturnType>
      </ReturnValue>
      <MemberValue>74</MemberValue>
      <Docs>
        <summary>The case insensitive notin operator '-inotin' or '-notin'</summary>
      </Docs>
    </Member>
    <Member MemberName="Inotlike">
      <MemberSignature Language="C#" Value="Inotlike" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Management.Automation.Language.TokenKind Inotlike = int32(67)" />
      <MemberSignature Language="DocId" Value="F:System.Management.Automation.Language.TokenKind.Inotlike" />
      <MemberSignature Language="VB.NET" Value="Inotlike" />
      <MemberSignature Language="F#" Value="Inotlike = 67" Usage="System.Management.Automation.Language.TokenKind.Inotlike" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Language.TokenKind</ReturnType>
      </ReturnValue>
      <MemberValue>67</MemberValue>
      <Docs>
        <summary>The case insensitive not like operator '-inotlike' or '-notlike'.</summary>
      </Docs>
    </Member>
    <Member MemberName="Inotmatch">
      <MemberSignature Language="C#" Value="Inotmatch" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Management.Automation.Language.TokenKind Inotmatch = int32(69)" />
      <MemberSignature Language="DocId" Value="F:System.Management.Automation.Language.TokenKind.Inotmatch" />
      <MemberSignature Language="VB.NET" Value="Inotmatch" />
      <MemberSignature Language="F#" Value="Inotmatch = 69" Usage="System.Management.Automation.Language.TokenKind.Inotmatch" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Language.TokenKind</ReturnType>
      </ReturnValue>
      <MemberValue>69</MemberValue>
      <Docs>
        <summary>The case insensitive not match operator '-inotmatch' or '-notmatch'.</summary>
      </Docs>
    </Member>
    <Member MemberName="Interface">
      <MemberSignature Language="C#" Value="Interface" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Management.Automation.Language.TokenKind Interface = int32(160)" />
      <MemberSignature Language="DocId" Value="F:System.Management.Automation.Language.TokenKind.Interface" />
      <MemberSignature Language="VB.NET" Value="Interface" />
      <MemberSignature Language="F#" Value="Interface = 160" Usage="System.Management.Automation.Language.TokenKind.Interface" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Language.TokenKind</ReturnType>
      </ReturnValue>
      <MemberValue>160</MemberValue>
      <Docs>
        <summary>The 'interface' keyword</summary>
      </Docs>
    </Member>
    <Member MemberName="Ireplace">
      <MemberSignature Language="C#" Value="Ireplace" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Management.Automation.Language.TokenKind Ireplace = int32(70)" />
      <MemberSignature Language="DocId" Value="F:System.Management.Automation.Language.TokenKind.Ireplace" />
      <MemberSignature Language="VB.NET" Value="Ireplace" />
      <MemberSignature Language="F#" Value="Ireplace = 70" Usage="System.Management.Automation.Language.TokenKind.Ireplace" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Language.TokenKind</ReturnType>
      </ReturnValue>
      <MemberValue>70</MemberValue>
      <Docs>
        <summary>The case insensitive replace operator '-ireplace' or '-replace'.</summary>
      </Docs>
    </Member>
    <Member MemberName="Is">
      <MemberSignature Language="C#" Value="Is" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Management.Automation.Language.TokenKind Is = int32(92)" />
      <MemberSignature Language="DocId" Value="F:System.Management.Automation.Language.TokenKind.Is" />
      <MemberSignature Language="VB.NET" Value="Is" />
      <MemberSignature Language="F#" Value="Is = 92" Usage="System.Management.Automation.Language.TokenKind.Is" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Language.TokenKind</ReturnType>
      </ReturnValue>
      <MemberValue>92</MemberValue>
      <Docs>
        <summary>The type test operator '-is'.</summary>
      </Docs>
    </Member>
    <Member MemberName="IsNot">
      <MemberSignature Language="C#" Value="IsNot" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Management.Automation.Language.TokenKind IsNot = int32(93)" />
      <MemberSignature Language="DocId" Value="F:System.Management.Automation.Language.TokenKind.IsNot" />
      <MemberSignature Language="VB.NET" Value="IsNot" />
      <MemberSignature Language="F#" Value="IsNot = 93" Usage="System.Management.Automation.Language.TokenKind.IsNot" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Language.TokenKind</ReturnType>
      </ReturnValue>
      <MemberValue>93</MemberValue>
      <Docs>
        <summary>The type test operator '-isnot'.</summary>
      </Docs>
    </Member>
    <Member MemberName="Isplit">
      <MemberSignature Language="C#" Value="Isplit" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Management.Automation.Language.TokenKind Isplit = int32(75)" />
      <MemberSignature Language="DocId" Value="F:System.Management.Automation.Language.TokenKind.Isplit" />
      <MemberSignature Language="VB.NET" Value="Isplit" />
      <MemberSignature Language="F#" Value="Isplit = 75" Usage="System.Management.Automation.Language.TokenKind.Isplit" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Language.TokenKind</ReturnType>
      </ReturnValue>
      <MemberValue>75</MemberValue>
      <Docs>
        <summary>The case insensitive split operator '-isplit' or '-split'.</summary>
      </Docs>
    </Member>
    <Member MemberName="Join">
      <MemberSignature Language="C#" Value="Join" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Management.Automation.Language.TokenKind Join = int32(59)" />
      <MemberSignature Language="DocId" Value="F:System.Management.Automation.Language.TokenKind.Join" />
      <MemberSignature Language="VB.NET" Value="Join" />
      <MemberSignature Language="F#" Value="Join = 59" Usage="System.Management.Automation.Language.TokenKind.Join" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Language.TokenKind</ReturnType>
      </ReturnValue>
      <MemberValue>59</MemberValue>
      <Docs>
        <summary>The join operator '-join'.</summary>
      </Docs>
    </Member>
    <Member MemberName="Label">
      <MemberSignature Language="C#" Value="Label" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Management.Automation.Language.TokenKind Label = int32(5)" />
      <MemberSignature Language="DocId" Value="F:System.Management.Automation.Language.TokenKind.Label" />
      <MemberSignature Language="VB.NET" Value="Label" />
      <MemberSignature Language="F#" Value="Label = 5" Usage="System.Management.Automation.Language.TokenKind.Label" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Language.TokenKind</ReturnType>
      </ReturnValue>
      <MemberValue>5</MemberValue>
      <Docs>
        <summary>
            A label token - always begins with ':', followed by the label name.
            Tokens with this kind are always instances of <see cref="T:System.Management.Automation.Language.LabelToken" />.
            </summary>
      </Docs>
    </Member>
    <Member MemberName="LBracket">
      <MemberSignature Language="C#" Value="LBracket" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Management.Automation.Language.TokenKind LBracket = int32(20)" />
      <MemberSignature Language="DocId" Value="F:System.Management.Automation.Language.TokenKind.LBracket" />
      <MemberSignature Language="VB.NET" Value="LBracket" />
      <MemberSignature Language="F#" Value="LBracket = 20" Usage="System.Management.Automation.Language.TokenKind.LBracket" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Language.TokenKind</ReturnType>
      </ReturnValue>
      <MemberValue>20</MemberValue>
      <Docs>
        <summary>The opening square brace token '['.</summary>
      </Docs>
    </Member>
    <Member MemberName="LCurly">
      <MemberSignature Language="C#" Value="LCurly" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Management.Automation.Language.TokenKind LCurly = int32(18)" />
      <MemberSignature Language="DocId" Value="F:System.Management.Automation.Language.TokenKind.LCurly" />
      <MemberSignature Language="VB.NET" Value="LCurly" />
      <MemberSignature Language="F#" Value="LCurly = 18" Usage="System.Management.Automation.Language.TokenKind.LCurly" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Language.TokenKind</ReturnType>
      </ReturnValue>
      <MemberValue>18</MemberValue>
      <Docs>
        <summary>The opening curly brace token '{'.</summary>
      </Docs>
    </Member>
    <Member MemberName="LineContinuation">
      <MemberSignature Language="C#" Value="LineContinuation" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Management.Automation.Language.TokenKind LineContinuation = int32(9)" />
      <MemberSignature Language="DocId" Value="F:System.Management.Automation.Language.TokenKind.LineContinuation" />
      <MemberSignature Language="VB.NET" Value="LineContinuation" />
      <MemberSignature Language="F#" Value="LineContinuation = 9" Usage="System.Management.Automation.Language.TokenKind.LineContinuation" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Language.TokenKind</ReturnType>
      </ReturnValue>
      <MemberValue>9</MemberValue>
      <Docs>
        <summary>A line continuation (backtick followed by newline).</summary>
      </Docs>
    </Member>
    <Member MemberName="LParen">
      <MemberSignature Language="C#" Value="LParen" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Management.Automation.Language.TokenKind LParen = int32(16)" />
      <MemberSignature Language="DocId" Value="F:System.Management.Automation.Language.TokenKind.LParen" />
      <MemberSignature Language="VB.NET" Value="LParen" />
      <MemberSignature Language="F#" Value="LParen = 16" Usage="System.Management.Automation.Language.TokenKind.LParen" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Language.TokenKind</ReturnType>
      </ReturnValue>
      <MemberValue>16</MemberValue>
      <Docs>
        <summary>The opening parenthesis token '('.</summary>
      </Docs>
    </Member>
    <Member MemberName="Minus">
      <MemberSignature Language="C#" Value="Minus" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Management.Automation.Language.TokenKind Minus = int32(41)" />
      <MemberSignature Language="DocId" Value="F:System.Management.Automation.Language.TokenKind.Minus" />
      <MemberSignature Language="VB.NET" Value="Minus" />
      <MemberSignature Language="F#" Value="Minus = 41" Usage="System.Management.Automation.Language.TokenKind.Minus" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Language.TokenKind</ReturnType>
      </ReturnValue>
      <MemberValue>41</MemberValue>
      <Docs>
        <summary>The substraction operator '-'.</summary>
      </Docs>
    </Member>
    <Member MemberName="MinusEquals">
      <MemberSignature Language="C#" Value="MinusEquals" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Management.Automation.Language.TokenKind MinusEquals = int32(44)" />
      <MemberSignature Language="DocId" Value="F:System.Management.Automation.Language.TokenKind.MinusEquals" />
      <MemberSignature Language="VB.NET" Value="MinusEquals" />
      <MemberSignature Language="F#" Value="MinusEquals = 44" Usage="System.Management.Automation.Language.TokenKind.MinusEquals" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Language.TokenKind</ReturnType>
      </ReturnValue>
      <MemberValue>44</MemberValue>
      <Docs>
        <summary>The subtraction assignment operator '-='.</summary>
      </Docs>
    </Member>
    <Member MemberName="MinusMinus">
      <MemberSignature Language="C#" Value="MinusMinus" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Management.Automation.Language.TokenKind MinusMinus = int32(31)" />
      <MemberSignature Language="DocId" Value="F:System.Management.Automation.Language.TokenKind.MinusMinus" />
      <MemberSignature Language="VB.NET" Value="MinusMinus" />
      <MemberSignature Language="F#" Value="MinusMinus = 31" Usage="System.Management.Automation.Language.TokenKind.MinusMinus" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Language.TokenKind</ReturnType>
      </ReturnValue>
      <MemberValue>31</MemberValue>
      <Docs>
        <summary>The pre-decrement operator '--'.</summary>
      </Docs>
    </Member>
    <Member MemberName="Module">
      <MemberSignature Language="C#" Value="Module" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Management.Automation.Language.TokenKind Module = int32(163)" />
      <MemberSignature Language="DocId" Value="F:System.Management.Automation.Language.TokenKind.Module" />
      <MemberSignature Language="VB.NET" Value="Module" />
      <MemberSignature Language="F#" Value="Module = 163" Usage="System.Management.Automation.Language.TokenKind.Module" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Language.TokenKind</ReturnType>
      </ReturnValue>
      <MemberValue>163</MemberValue>
      <Docs>
        <summary>The 'module' keyword</summary>
      </Docs>
    </Member>
    <Member MemberName="Multiply">
      <MemberSignature Language="C#" Value="Multiply" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Management.Automation.Language.TokenKind Multiply = int32(37)" />
      <MemberSignature Language="DocId" Value="F:System.Management.Automation.Language.TokenKind.Multiply" />
      <MemberSignature Language="VB.NET" Value="Multiply" />
      <MemberSignature Language="F#" Value="Multiply = 37" Usage="System.Management.Automation.Language.TokenKind.Multiply" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Language.TokenKind</ReturnType>
      </ReturnValue>
      <MemberValue>37</MemberValue>
      <Docs>
        <summary>The multiplication operator '*'.</summary>
      </Docs>
    </Member>
    <Member MemberName="MultiplyEquals">
      <MemberSignature Language="C#" Value="MultiplyEquals" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Management.Automation.Language.TokenKind MultiplyEquals = int32(45)" />
      <MemberSignature Language="DocId" Value="F:System.Management.Automation.Language.TokenKind.MultiplyEquals" />
      <MemberSignature Language="VB.NET" Value="MultiplyEquals" />
      <MemberSignature Language="F#" Value="MultiplyEquals = 45" Usage="System.Management.Automation.Language.TokenKind.MultiplyEquals" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Language.TokenKind</ReturnType>
      </ReturnValue>
      <MemberValue>45</MemberValue>
      <Docs>
        <summary>The multiplication assignment operator '*='.</summary>
      </Docs>
    </Member>
    <Member MemberName="Namespace">
      <MemberSignature Language="C#" Value="Namespace" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Management.Automation.Language.TokenKind Namespace = int32(162)" />
      <MemberSignature Language="DocId" Value="F:System.Management.Automation.Language.TokenKind.Namespace" />
      <MemberSignature Language="VB.NET" Value="Namespace" />
      <MemberSignature Language="F#" Value="Namespace = 162" Usage="System.Management.Automation.Language.TokenKind.Namespace" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Language.TokenKind</ReturnType>
      </ReturnValue>
      <MemberValue>162</MemberValue>
      <Docs>
        <summary>The 'namespace' keyword</summary>
      </Docs>
    </Member>
    <Member MemberName="NewLine">
      <MemberSignature Language="C#" Value="NewLine" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Management.Automation.Language.TokenKind NewLine = int32(8)" />
      <MemberSignature Language="DocId" Value="F:System.Management.Automation.Language.TokenKind.NewLine" />
      <MemberSignature Language="VB.NET" Value="NewLine" />
      <MemberSignature Language="F#" Value="NewLine = 8" Usage="System.Management.Automation.Language.TokenKind.NewLine" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Language.TokenKind</ReturnType>
      </ReturnValue>
      <MemberValue>8</MemberValue>
      <Docs>
        <summary>A newline (one of '\n', '\r', or '\r\n').</summary>
      </Docs>
    </Member>
    <Member MemberName="Not">
      <MemberSignature Language="C#" Value="Not" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Management.Automation.Language.TokenKind Not = int32(51)" />
      <MemberSignature Language="DocId" Value="F:System.Management.Automation.Language.TokenKind.Not" />
      <MemberSignature Language="VB.NET" Value="Not" />
      <MemberSignature Language="F#" Value="Not = 51" Usage="System.Management.Automation.Language.TokenKind.Not" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Language.TokenKind</ReturnType>
      </ReturnValue>
      <MemberValue>51</MemberValue>
      <Docs>
        <summary>The logical not operator '-not'.</summary>
      </Docs>
    </Member>
    <Member MemberName="Number">
      <MemberSignature Language="C#" Value="Number" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Management.Automation.Language.TokenKind Number = int32(4)" />
      <MemberSignature Language="DocId" Value="F:System.Management.Automation.Language.TokenKind.Number" />
      <MemberSignature Language="VB.NET" Value="Number" />
      <MemberSignature Language="F#" Value="Number = 4" Usage="System.Management.Automation.Language.TokenKind.Number" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Language.TokenKind</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary>
            Any numerical literal token.
            Tokens with this kind are always instances of <see cref="T:System.Management.Automation.Language.NumberToken" />.
            </summary>
      </Docs>
    </Member>
    <Member MemberName="Or">
      <MemberSignature Language="C#" Value="Or" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Management.Automation.Language.TokenKind Or = int32(54)" />
      <MemberSignature Language="DocId" Value="F:System.Management.Automation.Language.TokenKind.Or" />
      <MemberSignature Language="VB.NET" Value="Or" />
      <MemberSignature Language="F#" Value="Or = 54" Usage="System.Management.Automation.Language.TokenKind.Or" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Language.TokenKind</ReturnType>
      </ReturnValue>
      <MemberValue>54</MemberValue>
      <Docs>
        <summary>The logical or operator '-or'.</summary>
      </Docs>
    </Member>
    <Member MemberName="OrOr">
      <MemberSignature Language="C#" Value="OrOr" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Management.Automation.Language.TokenKind OrOr = int32(27)" />
      <MemberSignature Language="DocId" Value="F:System.Management.Automation.Language.TokenKind.OrOr" />
      <MemberSignature Language="VB.NET" Value="OrOr" />
      <MemberSignature Language="F#" Value="OrOr = 27" Usage="System.Management.Automation.Language.TokenKind.OrOr" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Language.TokenKind</ReturnType>
      </ReturnValue>
      <MemberValue>27</MemberValue>
      <Docs>
        <summary>The (unimplemented) operator '||'.</summary>
      </Docs>
    </Member>
    <Member MemberName="Parallel">
      <MemberSignature Language="C#" Value="Parallel" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Management.Automation.Language.TokenKind Parallel = int32(152)" />
      <MemberSignature Language="DocId" Value="F:System.Management.Automation.Language.TokenKind.Parallel" />
      <MemberSignature Language="VB.NET" Value="Parallel" />
      <MemberSignature Language="F#" Value="Parallel = 152" Usage="System.Management.Automation.Language.TokenKind.Parallel" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Language.TokenKind</ReturnType>
      </ReturnValue>
      <MemberValue>152</MemberValue>
      <Docs>
        <summary>The 'parallel' keyword.</summary>
      </Docs>
    </Member>
    <Member MemberName="Param">
      <MemberSignature Language="C#" Value="Param" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Management.Automation.Language.TokenKind Param = int32(140)" />
      <MemberSignature Language="DocId" Value="F:System.Management.Automation.Language.TokenKind.Param" />
      <MemberSignature Language="VB.NET" Value="Param" />
      <MemberSignature Language="F#" Value="Param = 140" Usage="System.Management.Automation.Language.TokenKind.Param" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Language.TokenKind</ReturnType>
      </ReturnValue>
      <MemberValue>140</MemberValue>
      <Docs>
        <summary>The 'param' keyword.</summary>
      </Docs>
    </Member>
    <Member MemberName="Parameter">
      <MemberSignature Language="C#" Value="Parameter" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Management.Automation.Language.TokenKind Parameter = int32(3)" />
      <MemberSignature Language="DocId" Value="F:System.Management.Automation.Language.TokenKind.Parameter" />
      <MemberSignature Language="VB.NET" Value="Parameter" />
      <MemberSignature Language="F#" Value="Parameter = 3" Usage="System.Management.Automation.Language.TokenKind.Parameter" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Language.TokenKind</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary>
            A parameter to a command, always begins with a dash ('-'), followed by the parameter name.
            Tokens with this kind are always instances of <see cref="T:System.Management.Automation.Language.ParameterToken" />.
            </summary>
      </Docs>
    </Member>
    <Member MemberName="Pipe">
      <MemberSignature Language="C#" Value="Pipe" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Management.Automation.Language.TokenKind Pipe = int32(29)" />
      <MemberSignature Language="DocId" Value="F:System.Management.Automation.Language.TokenKind.Pipe" />
      <MemberSignature Language="VB.NET" Value="Pipe" />
      <MemberSignature Language="F#" Value="Pipe = 29" Usage="System.Management.Automation.Language.TokenKind.Pipe" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Language.TokenKind</ReturnType>
      </ReturnValue>
      <MemberValue>29</MemberValue>
      <Docs>
        <summary>The pipe operator '|'.</summary>
      </Docs>
    </Member>
    <Member MemberName="Plus">
      <MemberSignature Language="C#" Value="Plus" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Management.Automation.Language.TokenKind Plus = int32(40)" />
      <MemberSignature Language="DocId" Value="F:System.Management.Automation.Language.TokenKind.Plus" />
      <MemberSignature Language="VB.NET" Value="Plus" />
      <MemberSignature Language="F#" Value="Plus = 40" Usage="System.Management.Automation.Language.TokenKind.Plus" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Language.TokenKind</ReturnType>
      </ReturnValue>
      <MemberValue>40</MemberValue>
      <Docs>
        <summary>The addition operator '+'.</summary>
      </Docs>
    </Member>
    <Member MemberName="PlusEquals">
      <MemberSignature Language="C#" Value="PlusEquals" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Management.Automation.Language.TokenKind PlusEquals = int32(43)" />
      <MemberSignature Language="DocId" Value="F:System.Management.Automation.Language.TokenKind.PlusEquals" />
      <MemberSignature Language="VB.NET" Value="PlusEquals" />
      <MemberSignature Language="F#" Value="PlusEquals = 43" Usage="System.Management.Automation.Language.TokenKind.PlusEquals" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Language.TokenKind</ReturnType>
      </ReturnValue>
      <MemberValue>43</MemberValue>
      <Docs>
        <summary>The addition assignment operator '+='.</summary>
      </Docs>
    </Member>
    <Member MemberName="PlusPlus">
      <MemberSignature Language="C#" Value="PlusPlus" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Management.Automation.Language.TokenKind PlusPlus = int32(32)" />
      <MemberSignature Language="DocId" Value="F:System.Management.Automation.Language.TokenKind.PlusPlus" />
      <MemberSignature Language="VB.NET" Value="PlusPlus" />
      <MemberSignature Language="F#" Value="PlusPlus = 32" Usage="System.Management.Automation.Language.TokenKind.PlusPlus" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Language.TokenKind</ReturnType>
      </ReturnValue>
      <MemberValue>32</MemberValue>
      <Docs>
        <summary>The pre-increment operator '++'.</summary>
      </Docs>
    </Member>
    <Member MemberName="PostfixMinusMinus">
      <MemberSignature Language="C#" Value="PostfixMinusMinus" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Management.Automation.Language.TokenKind PostfixMinusMinus = int32(96)" />
      <MemberSignature Language="DocId" Value="F:System.Management.Automation.Language.TokenKind.PostfixMinusMinus" />
      <MemberSignature Language="VB.NET" Value="PostfixMinusMinus" />
      <MemberSignature Language="F#" Value="PostfixMinusMinus = 96" Usage="System.Management.Automation.Language.TokenKind.PostfixMinusMinus" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Language.TokenKind</ReturnType>
      </ReturnValue>
      <MemberValue>96</MemberValue>
      <Docs>
        <summary>The post-decrement operator '--'.</summary>
      </Docs>
    </Member>
    <Member MemberName="PostfixPlusPlus">
      <MemberSignature Language="C#" Value="PostfixPlusPlus" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Management.Automation.Language.TokenKind PostfixPlusPlus = int32(95)" />
      <MemberSignature Language="DocId" Value="F:System.Management.Automation.Language.TokenKind.PostfixPlusPlus" />
      <MemberSignature Language="VB.NET" Value="PostfixPlusPlus" />
      <MemberSignature Language="F#" Value="PostfixPlusPlus = 95" Usage="System.Management.Automation.Language.TokenKind.PostfixPlusPlus" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Language.TokenKind</ReturnType>
      </ReturnValue>
      <MemberValue>95</MemberValue>
      <Docs>
        <summary>The post-increment operator '++'.</summary>
      </Docs>
    </Member>
    <Member MemberName="Private">
      <MemberSignature Language="C#" Value="Private" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Management.Automation.Language.TokenKind Private = int32(158)" />
      <MemberSignature Language="DocId" Value="F:System.Management.Automation.Language.TokenKind.Private" />
      <MemberSignature Language="VB.NET" Value="Private" />
      <MemberSignature Language="F#" Value="Private = 158" Usage="System.Management.Automation.Language.TokenKind.Private" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Language.TokenKind</ReturnType>
      </ReturnValue>
      <MemberValue>158</MemberValue>
      <Docs>
        <summary>The 'private' keyword</summary>
      </Docs>
    </Member>
    <Member MemberName="Process">
      <MemberSignature Language="C#" Value="Process" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Management.Automation.Language.TokenKind Process = int32(141)" />
      <MemberSignature Language="DocId" Value="F:System.Management.Automation.Language.TokenKind.Process" />
      <MemberSignature Language="VB.NET" Value="Process" />
      <MemberSignature Language="F#" Value="Process = 141" Usage="System.Management.Automation.Language.TokenKind.Process" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Language.TokenKind</ReturnType>
      </ReturnValue>
      <MemberValue>141</MemberValue>
      <Docs>
        <summary>The 'process' keyword.</summary>
      </Docs>
    </Member>
    <Member MemberName="Public">
      <MemberSignature Language="C#" Value="Public" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Management.Automation.Language.TokenKind Public = int32(157)" />
      <MemberSignature Language="DocId" Value="F:System.Management.Automation.Language.TokenKind.Public" />
      <MemberSignature Language="VB.NET" Value="Public" />
      <MemberSignature Language="F#" Value="Public = 157" Usage="System.Management.Automation.Language.TokenKind.Public" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Language.TokenKind</ReturnType>
      </ReturnValue>
      <MemberValue>157</MemberValue>
      <Docs>
        <summary>The 'public' keyword</summary>
      </Docs>
    </Member>
    <Member MemberName="RBracket">
      <MemberSignature Language="C#" Value="RBracket" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Management.Automation.Language.TokenKind RBracket = int32(21)" />
      <MemberSignature Language="DocId" Value="F:System.Management.Automation.Language.TokenKind.RBracket" />
      <MemberSignature Language="VB.NET" Value="RBracket" />
      <MemberSignature Language="F#" Value="RBracket = 21" Usage="System.Management.Automation.Language.TokenKind.RBracket" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Language.TokenKind</ReturnType>
      </ReturnValue>
      <MemberValue>21</MemberValue>
      <Docs>
        <summary>The closing square brace token ']'.</summary>
      </Docs>
    </Member>
    <Member MemberName="RCurly">
      <MemberSignature Language="C#" Value="RCurly" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Management.Automation.Language.TokenKind RCurly = int32(19)" />
      <MemberSignature Language="DocId" Value="F:System.Management.Automation.Language.TokenKind.RCurly" />
      <MemberSignature Language="VB.NET" Value="RCurly" />
      <MemberSignature Language="F#" Value="RCurly = 19" Usage="System.Management.Automation.Language.TokenKind.RCurly" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Language.TokenKind</ReturnType>
      </ReturnValue>
      <MemberValue>19</MemberValue>
      <Docs>
        <summary>The closing curly brace token '}'.</summary>
      </Docs>
    </Member>
    <Member MemberName="RedirectInStd">
      <MemberSignature Language="C#" Value="RedirectInStd" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Management.Automation.Language.TokenKind RedirectInStd = int32(49)" />
      <MemberSignature Language="DocId" Value="F:System.Management.Automation.Language.TokenKind.RedirectInStd" />
      <MemberSignature Language="VB.NET" Value="RedirectInStd" />
      <MemberSignature Language="F#" Value="RedirectInStd = 49" Usage="System.Management.Automation.Language.TokenKind.RedirectInStd" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Language.TokenKind</ReturnType>
      </ReturnValue>
      <MemberValue>49</MemberValue>
      <Docs>
        <summary>The (unimplemented) stdin redirection operator '&lt;'.</summary>
      </Docs>
    </Member>
    <Member MemberName="Redirection">
      <MemberSignature Language="C#" Value="Redirection" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Management.Automation.Language.TokenKind Redirection = int32(48)" />
      <MemberSignature Language="DocId" Value="F:System.Management.Automation.Language.TokenKind.Redirection" />
      <MemberSignature Language="VB.NET" Value="Redirection" />
      <MemberSignature Language="F#" Value="Redirection = 48" Usage="System.Management.Automation.Language.TokenKind.Redirection" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Language.TokenKind</ReturnType>
      </ReturnValue>
      <MemberValue>48</MemberValue>
      <Docs>
        <summary>A redirection operator such as '2&gt;&amp;1' or '&gt;&gt;'.</summary>
      </Docs>
    </Member>
    <Member MemberName="Rem">
      <MemberSignature Language="C#" Value="Rem" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Management.Automation.Language.TokenKind Rem = int32(39)" />
      <MemberSignature Language="DocId" Value="F:System.Management.Automation.Language.TokenKind.Rem" />
      <MemberSignature Language="VB.NET" Value="Rem" />
      <MemberSignature Language="F#" Value="Rem = 39" Usage="System.Management.Automation.Language.TokenKind.Rem" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Language.TokenKind</ReturnType>
      </ReturnValue>
      <MemberValue>39</MemberValue>
      <Docs>
        <summary>The modulo division (remainder) operator '%'.</summary>
      </Docs>
    </Member>
    <Member MemberName="RemainderEquals">
      <MemberSignature Language="C#" Value="RemainderEquals" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Management.Automation.Language.TokenKind RemainderEquals = int32(47)" />
      <MemberSignature Language="DocId" Value="F:System.Management.Automation.Language.TokenKind.RemainderEquals" />
      <MemberSignature Language="VB.NET" Value="RemainderEquals" />
      <MemberSignature Language="F#" Value="RemainderEquals = 47" Usage="System.Management.Automation.Language.TokenKind.RemainderEquals" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Language.TokenKind</ReturnType>
      </ReturnValue>
      <MemberValue>47</MemberValue>
      <Docs>
        <summary>The modulo division (remainder) assignment operator '%='.</summary>
      </Docs>
    </Member>
    <Member MemberName="Return">
      <MemberSignature Language="C#" Value="Return" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Management.Automation.Language.TokenKind Return = int32(142)" />
      <MemberSignature Language="DocId" Value="F:System.Management.Automation.Language.TokenKind.Return" />
      <MemberSignature Language="VB.NET" Value="Return" />
      <MemberSignature Language="F#" Value="Return = 142" Usage="System.Management.Automation.Language.TokenKind.Return" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Language.TokenKind</ReturnType>
      </ReturnValue>
      <MemberValue>142</MemberValue>
      <Docs>
        <summary>The 'return' keyword.</summary>
      </Docs>
    </Member>
    <Member MemberName="RParen">
      <MemberSignature Language="C#" Value="RParen" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Management.Automation.Language.TokenKind RParen = int32(17)" />
      <MemberSignature Language="DocId" Value="F:System.Management.Automation.Language.TokenKind.RParen" />
      <MemberSignature Language="VB.NET" Value="RParen" />
      <MemberSignature Language="F#" Value="RParen = 17" Usage="System.Management.Automation.Language.TokenKind.RParen" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Language.TokenKind</ReturnType>
      </ReturnValue>
      <MemberValue>17</MemberValue>
      <Docs>
        <summary>The closing parenthesis token ')'.</summary>
      </Docs>
    </Member>
    <Member MemberName="Semi">
      <MemberSignature Language="C#" Value="Semi" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Management.Automation.Language.TokenKind Semi = int32(25)" />
      <MemberSignature Language="DocId" Value="F:System.Management.Automation.Language.TokenKind.Semi" />
      <MemberSignature Language="VB.NET" Value="Semi" />
      <MemberSignature Language="F#" Value="Semi = 25" Usage="System.Management.Automation.Language.TokenKind.Semi" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Language.TokenKind</ReturnType>
      </ReturnValue>
      <MemberValue>25</MemberValue>
      <Docs>
        <summary>The statement terminator ';'.</summary>
      </Docs>
    </Member>
    <Member MemberName="Sequence">
      <MemberSignature Language="C#" Value="Sequence" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Management.Automation.Language.TokenKind Sequence = int32(153)" />
      <MemberSignature Language="DocId" Value="F:System.Management.Automation.Language.TokenKind.Sequence" />
      <MemberSignature Language="VB.NET" Value="Sequence" />
      <MemberSignature Language="F#" Value="Sequence = 153" Usage="System.Management.Automation.Language.TokenKind.Sequence" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Language.TokenKind</ReturnType>
      </ReturnValue>
      <MemberValue>153</MemberValue>
      <Docs>
        <summary>The 'sequence' keyword.</summary>
      </Docs>
    </Member>
    <Member MemberName="Shl">
      <MemberSignature Language="C#" Value="Shl" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Management.Automation.Language.TokenKind Shl = int32(97)" />
      <MemberSignature Language="DocId" Value="F:System.Management.Automation.Language.TokenKind.Shl" />
      <MemberSignature Language="VB.NET" Value="Shl" />
      <MemberSignature Language="F#" Value="Shl = 97" Usage="System.Management.Automation.Language.TokenKind.Shl" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Language.TokenKind</ReturnType>
      </ReturnValue>
      <MemberValue>97</MemberValue>
      <Docs>
        <summary>The shift left operator.</summary>
      </Docs>
    </Member>
    <Member MemberName="Shr">
      <MemberSignature Language="C#" Value="Shr" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Management.Automation.Language.TokenKind Shr = int32(98)" />
      <MemberSignature Language="DocId" Value="F:System.Management.Automation.Language.TokenKind.Shr" />
      <MemberSignature Language="VB.NET" Value="Shr" />
      <MemberSignature Language="F#" Value="Shr = 98" Usage="System.Management.Automation.Language.TokenKind.Shr" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Language.TokenKind</ReturnType>
      </ReturnValue>
      <MemberValue>98</MemberValue>
      <Docs>
        <summary>The shift right operator.</summary>
      </Docs>
    </Member>
    <Member MemberName="SplattedVariable">
      <MemberSignature Language="C#" Value="SplattedVariable" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Management.Automation.Language.TokenKind SplattedVariable = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Management.Automation.Language.TokenKind.SplattedVariable" />
      <MemberSignature Language="VB.NET" Value="SplattedVariable" />
      <MemberSignature Language="F#" Value="SplattedVariable = 2" Usage="System.Management.Automation.Language.TokenKind.SplattedVariable" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Language.TokenKind</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>
            A splatted variable token, always begins with '@' and followed by the variable name.
            Tokens with this kind are always instances of <see cref="T:System.Management.Automation.Language.VariableToken" />.
            </summary>
      </Docs>
    </Member>
    <Member MemberName="Static">
      <MemberSignature Language="C#" Value="Static" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Management.Automation.Language.TokenKind Static = int32(159)" />
      <MemberSignature Language="DocId" Value="F:System.Management.Automation.Language.TokenKind.Static" />
      <MemberSignature Language="VB.NET" Value="Static" />
      <MemberSignature Language="F#" Value="Static = 159" Usage="System.Management.Automation.Language.TokenKind.Static" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Language.TokenKind</ReturnType>
      </ReturnValue>
      <MemberValue>159</MemberValue>
      <Docs>
        <summary>The 'static' keyword</summary>
      </Docs>
    </Member>
    <Member MemberName="StringExpandable">
      <MemberSignature Language="C#" Value="StringExpandable" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Management.Automation.Language.TokenKind StringExpandable = int32(13)" />
      <MemberSignature Language="DocId" Value="F:System.Management.Automation.Language.TokenKind.StringExpandable" />
      <MemberSignature Language="VB.NET" Value="StringExpandable" />
      <MemberSignature Language="F#" Value="StringExpandable = 13" Usage="System.Management.Automation.Language.TokenKind.StringExpandable" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Language.TokenKind</ReturnType>
      </ReturnValue>
      <MemberValue>13</MemberValue>
      <Docs>
        <summary>
            A double quoted string literal.
            Tokens with this kind are always instances of <see cref="T:System.Management.Automation.Language.StringExpandableToken" />
            even if there are no nested tokens to expand.
            </summary>
      </Docs>
    </Member>
    <Member MemberName="StringLiteral">
      <MemberSignature Language="C#" Value="StringLiteral" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Management.Automation.Language.TokenKind StringLiteral = int32(12)" />
      <MemberSignature Language="DocId" Value="F:System.Management.Automation.Language.TokenKind.StringLiteral" />
      <MemberSignature Language="VB.NET" Value="StringLiteral" />
      <MemberSignature Language="F#" Value="StringLiteral = 12" Usage="System.Management.Automation.Language.TokenKind.StringLiteral" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Language.TokenKind</ReturnType>
      </ReturnValue>
      <MemberValue>12</MemberValue>
      <Docs>
        <summary>
            A single quoted string literal.
            Tokens with this kind are always instances of <see cref="T:System.Management.Automation.Language.StringLiteralToken" />.
            </summary>
      </Docs>
    </Member>
    <Member MemberName="Switch">
      <MemberSignature Language="C#" Value="Switch" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Management.Automation.Language.TokenKind Switch = int32(143)" />
      <MemberSignature Language="DocId" Value="F:System.Management.Automation.Language.TokenKind.Switch" />
      <MemberSignature Language="VB.NET" Value="Switch" />
      <MemberSignature Language="F#" Value="Switch = 143" Usage="System.Management.Automation.Language.TokenKind.Switch" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Language.TokenKind</ReturnType>
      </ReturnValue>
      <MemberValue>143</MemberValue>
      <Docs>
        <summary>The 'switch' keyword.</summary>
      </Docs>
    </Member>
    <Member MemberName="Throw">
      <MemberSignature Language="C#" Value="Throw" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Management.Automation.Language.TokenKind Throw = int32(144)" />
      <MemberSignature Language="DocId" Value="F:System.Management.Automation.Language.TokenKind.Throw" />
      <MemberSignature Language="VB.NET" Value="Throw" />
      <MemberSignature Language="F#" Value="Throw = 144" Usage="System.Management.Automation.Language.TokenKind.Throw" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Language.TokenKind</ReturnType>
      </ReturnValue>
      <MemberValue>144</MemberValue>
      <Docs>
        <summary>The 'throw' keyword.</summary>
      </Docs>
    </Member>
    <Member MemberName="Trap">
      <MemberSignature Language="C#" Value="Trap" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Management.Automation.Language.TokenKind Trap = int32(145)" />
      <MemberSignature Language="DocId" Value="F:System.Management.Automation.Language.TokenKind.Trap" />
      <MemberSignature Language="VB.NET" Value="Trap" />
      <MemberSignature Language="F#" Value="Trap = 145" Usage="System.Management.Automation.Language.TokenKind.Trap" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Language.TokenKind</ReturnType>
      </ReturnValue>
      <MemberValue>145</MemberValue>
      <Docs>
        <summary>The 'trap' keyword.</summary>
      </Docs>
    </Member>
    <Member MemberName="Try">
      <MemberSignature Language="C#" Value="Try" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Management.Automation.Language.TokenKind Try = int32(146)" />
      <MemberSignature Language="DocId" Value="F:System.Management.Automation.Language.TokenKind.Try" />
      <MemberSignature Language="VB.NET" Value="Try" />
      <MemberSignature Language="F#" Value="Try = 146" Usage="System.Management.Automation.Language.TokenKind.Try" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Language.TokenKind</ReturnType>
      </ReturnValue>
      <MemberValue>146</MemberValue>
      <Docs>
        <summary>The 'try' keyword.</summary>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="Type" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Management.Automation.Language.TokenKind Type = int32(164)" />
      <MemberSignature Language="DocId" Value="F:System.Management.Automation.Language.TokenKind.Type" />
      <MemberSignature Language="VB.NET" Value="Type" />
      <MemberSignature Language="F#" Value="Type = 164" Usage="System.Management.Automation.Language.TokenKind.Type" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Language.TokenKind</ReturnType>
      </ReturnValue>
      <MemberValue>164</MemberValue>
      <Docs>
        <summary>The 'type' keyword</summary>
      </Docs>
    </Member>
    <Member MemberName="Unknown">
      <MemberSignature Language="C#" Value="Unknown" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Management.Automation.Language.TokenKind Unknown = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Management.Automation.Language.TokenKind.Unknown" />
      <MemberSignature Language="VB.NET" Value="Unknown" />
      <MemberSignature Language="F#" Value="Unknown = 0" Usage="System.Management.Automation.Language.TokenKind.Unknown" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Language.TokenKind</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>An unknown token, signifies an error condition.</summary>
      </Docs>
    </Member>
    <Member MemberName="Until">
      <MemberSignature Language="C#" Value="Until" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Management.Automation.Language.TokenKind Until = int32(147)" />
      <MemberSignature Language="DocId" Value="F:System.Management.Automation.Language.TokenKind.Until" />
      <MemberSignature Language="VB.NET" Value="Until" />
      <MemberSignature Language="F#" Value="Until = 147" Usage="System.Management.Automation.Language.TokenKind.Until" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Language.TokenKind</ReturnType>
      </ReturnValue>
      <MemberValue>147</MemberValue>
      <Docs>
        <summary>The 'until' keyword.</summary>
      </Docs>
    </Member>
    <Member MemberName="Using">
      <MemberSignature Language="C#" Value="Using" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Management.Automation.Language.TokenKind Using = int32(148)" />
      <MemberSignature Language="DocId" Value="F:System.Management.Automation.Language.TokenKind.Using" />
      <MemberSignature Language="VB.NET" Value="Using" />
      <MemberSignature Language="F#" Value="Using = 148" Usage="System.Management.Automation.Language.TokenKind.Using" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Language.TokenKind</ReturnType>
      </ReturnValue>
      <MemberValue>148</MemberValue>
      <Docs>
        <summary>The (unimplemented) 'using' keyword.</summary>
      </Docs>
    </Member>
    <Member MemberName="Var">
      <MemberSignature Language="C#" Value="Var" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Management.Automation.Language.TokenKind Var = int32(149)" />
      <MemberSignature Language="DocId" Value="F:System.Management.Automation.Language.TokenKind.Var" />
      <MemberSignature Language="VB.NET" Value="Var" />
      <MemberSignature Language="F#" Value="Var = 149" Usage="System.Management.Automation.Language.TokenKind.Var" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Language.TokenKind</ReturnType>
      </ReturnValue>
      <MemberValue>149</MemberValue>
      <Docs>
        <summary>The (unimplemented) 'var' keyword.</summary>
      </Docs>
    </Member>
    <Member MemberName="Variable">
      <MemberSignature Language="C#" Value="Variable" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Management.Automation.Language.TokenKind Variable = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Management.Automation.Language.TokenKind.Variable" />
      <MemberSignature Language="VB.NET" Value="Variable" />
      <MemberSignature Language="F#" Value="Variable = 1" Usage="System.Management.Automation.Language.TokenKind.Variable" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Language.TokenKind</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>
            A variable token, always begins with '$' and followed by the variable name, possibly enclose in curly braces.
            Tokens with this kind are always instances of <see cref="T:System.Management.Automation.Language.VariableToken" />.
            </summary>
      </Docs>
    </Member>
    <Member MemberName="While">
      <MemberSignature Language="C#" Value="While" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Management.Automation.Language.TokenKind While = int32(150)" />
      <MemberSignature Language="DocId" Value="F:System.Management.Automation.Language.TokenKind.While" />
      <MemberSignature Language="VB.NET" Value="While" />
      <MemberSignature Language="F#" Value="While = 150" Usage="System.Management.Automation.Language.TokenKind.While" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Language.TokenKind</ReturnType>
      </ReturnValue>
      <MemberValue>150</MemberValue>
      <Docs>
        <summary>The 'while' keyword.</summary>
      </Docs>
    </Member>
    <Member MemberName="Workflow">
      <MemberSignature Language="C#" Value="Workflow" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Management.Automation.Language.TokenKind Workflow = int32(151)" />
      <MemberSignature Language="DocId" Value="F:System.Management.Automation.Language.TokenKind.Workflow" />
      <MemberSignature Language="VB.NET" Value="Workflow" />
      <MemberSignature Language="F#" Value="Workflow = 151" Usage="System.Management.Automation.Language.TokenKind.Workflow" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Language.TokenKind</ReturnType>
      </ReturnValue>
      <MemberValue>151</MemberValue>
      <Docs>
        <summary>The 'workflow' keyword.</summary>
      </Docs>
    </Member>
    <Member MemberName="Xor">
      <MemberSignature Language="C#" Value="Xor" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Management.Automation.Language.TokenKind Xor = int32(55)" />
      <MemberSignature Language="DocId" Value="F:System.Management.Automation.Language.TokenKind.Xor" />
      <MemberSignature Language="VB.NET" Value="Xor" />
      <MemberSignature Language="F#" Value="Xor = 55" Usage="System.Management.Automation.Language.TokenKind.Xor" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Language.TokenKind</ReturnType>
      </ReturnValue>
      <MemberValue>55</MemberValue>
      <Docs>
        <summary>The logical exclusive or operator '-xor'.</summary>
      </Docs>
    </Member>
  </Members>
</Type>