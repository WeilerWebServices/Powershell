<Type Name="MemberExpressionAst" FullName="System.Management.Automation.Language.MemberExpressionAst">
  <TypeSignature Language="C#" Value="public class MemberExpressionAst : System.Management.Automation.Language.ExpressionAst" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MemberExpressionAst extends System.Management.Automation.Language.ExpressionAst" />
  <TypeSignature Language="DocId" Value="T:System.Management.Automation.Language.MemberExpressionAst" />
  <TypeSignature Language="VB.NET" Value="Public Class MemberExpressionAst&#xA;Inherits ExpressionAst" />
  <TypeSignature Language="F#" Value="type MemberExpressionAst = class&#xA;    inherit ExpressionAst&#xA;    interface ISupportsAssignment" />
  <AssemblyInfo>
    <AssemblyName>System.Management.Automation</AssemblyName>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Management.Automation.Language.ExpressionAst</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            The ast that represents accessing a member as a property, e.g. <c>$x.Length</c> or <c>[int]::MaxValue</c>.
            Most often this is a simple property access, but methods can also be access in this manner, returning an object
            that supports invoking that member.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MemberExpressionAst (System.Management.Automation.Language.IScriptExtent extent, System.Management.Automation.Language.ExpressionAst expression, System.Management.Automation.Language.CommandElementAst member, bool static);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Management.Automation.Language.IScriptExtent extent, class System.Management.Automation.Language.ExpressionAst expression, class System.Management.Automation.Language.CommandElementAst member, bool static) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Automation.Language.MemberExpressionAst.#ctor(System.Management.Automation.Language.IScriptExtent,System.Management.Automation.Language.ExpressionAst,System.Management.Automation.Language.CommandElementAst,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (extent As IScriptExtent, expression As ExpressionAst, member As CommandElementAst, static As Boolean)" />
      <MemberSignature Language="F#" Value="new System.Management.Automation.Language.MemberExpressionAst : System.Management.Automation.Language.IScriptExtent * System.Management.Automation.Language.ExpressionAst * System.Management.Automation.Language.CommandElementAst * bool -&gt; System.Management.Automation.Language.MemberExpressionAst" Usage="new System.Management.Automation.Language.MemberExpressionAst (extent, expression, member, static)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="extent" Type="System.Management.Automation.Language.IScriptExtent" />
        <Parameter Name="expression" Type="System.Management.Automation.Language.ExpressionAst" />
        <Parameter Name="member" Type="System.Management.Automation.Language.CommandElementAst" />
        <Parameter Name="static" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="extent">
            The extent of the expression, starting with the expression before the operator '.' or '::' and ending after
            membername or expression naming the member.
            </param>
        <param name="expression">The expression before the member access operator '.' or '::'.</param>
        <param name="member">The name or expression naming the member to access.</param>
        <param name="static">True if the '::' operator was used, false if '.' is used.
            True if the member access is for a static member, using '::', false if accessing a member on an instance using '.'.
            </param>
        <summary>
            Construct an ast to reference a property.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Management.Automation.PSArgumentNullException">
            If <paramref name="extent" />, <paramref name="expression" />, or <paramref name="member" /> is null.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public override System.Management.Automation.Language.Ast Copy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Management.Automation.Language.Ast Copy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Automation.Language.MemberExpressionAst.Copy" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Copy () As Ast" />
      <MemberSignature Language="F#" Value="override this.Copy : unit -&gt; System.Management.Automation.Language.Ast" Usage="memberExpressionAst.Copy " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Language.Ast</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Copy the MemberExpressionAst instance
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Expression">
      <MemberSignature Language="C#" Value="public System.Management.Automation.Language.ExpressionAst Expression { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Management.Automation.Language.ExpressionAst Expression" />
      <MemberSignature Language="DocId" Value="P:System.Management.Automation.Language.MemberExpressionAst.Expression" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Expression As ExpressionAst" />
      <MemberSignature Language="F#" Value="member this.Expression : System.Management.Automation.Language.ExpressionAst" Usage="System.Management.Automation.Language.MemberExpressionAst.Expression" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Language.ExpressionAst</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The expression that produces the value to retrieve the member from.  This property is never null.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Member">
      <MemberSignature Language="C#" Value="public System.Management.Automation.Language.CommandElementAst Member { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Management.Automation.Language.CommandElementAst Member" />
      <MemberSignature Language="DocId" Value="P:System.Management.Automation.Language.MemberExpressionAst.Member" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Member As CommandElementAst" />
      <MemberSignature Language="F#" Value="member this.Member : System.Management.Automation.Language.CommandElementAst" Usage="System.Management.Automation.Language.MemberExpressionAst.Member" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Language.CommandElementAst</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The name of the member to retrieve.  This property is never null.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Static">
      <MemberSignature Language="C#" Value="public bool Static { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Static" />
      <MemberSignature Language="DocId" Value="P:System.Management.Automation.Language.MemberExpressionAst.Static" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Static As Boolean" />
      <MemberSignature Language="F#" Value="member this.Static : bool" Usage="System.Management.Automation.Language.MemberExpressionAst.Static" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            True if the member to return is static, false if the member is an instance member.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>