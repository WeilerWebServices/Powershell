<Type Name="CommandExpressionAst" FullName="System.Management.Automation.Language.CommandExpressionAst">
  <TypeSignature Language="C#" Value="public class CommandExpressionAst : System.Management.Automation.Language.CommandBaseAst" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CommandExpressionAst extends System.Management.Automation.Language.CommandBaseAst" />
  <TypeSignature Language="DocId" Value="T:System.Management.Automation.Language.CommandExpressionAst" />
  <TypeSignature Language="VB.NET" Value="Public Class CommandExpressionAst&#xA;Inherits CommandBaseAst" />
  <TypeSignature Language="F#" Value="type CommandExpressionAst = class&#xA;    inherit CommandBaseAst" />
  <AssemblyInfo>
    <AssemblyName>System.Management.Automation</AssemblyName>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Management.Automation.Language.CommandBaseAst</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            The ast representing an expression when the expression is used as the first command of a pipeline.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CommandExpressionAst (System.Management.Automation.Language.IScriptExtent extent, System.Management.Automation.Language.ExpressionAst expression, System.Collections.Generic.IEnumerable&lt;System.Management.Automation.Language.RedirectionAst&gt; redirections);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Management.Automation.Language.IScriptExtent extent, class System.Management.Automation.Language.ExpressionAst expression, class System.Collections.Generic.IEnumerable`1&lt;class System.Management.Automation.Language.RedirectionAst&gt; redirections) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Automation.Language.CommandExpressionAst.#ctor(System.Management.Automation.Language.IScriptExtent,System.Management.Automation.Language.ExpressionAst,System.Collections.Generic.IEnumerable{System.Management.Automation.Language.RedirectionAst})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (extent As IScriptExtent, expression As ExpressionAst, redirections As IEnumerable(Of RedirectionAst))" />
      <MemberSignature Language="F#" Value="new System.Management.Automation.Language.CommandExpressionAst : System.Management.Automation.Language.IScriptExtent * System.Management.Automation.Language.ExpressionAst * seq&lt;System.Management.Automation.Language.RedirectionAst&gt; -&gt; System.Management.Automation.Language.CommandExpressionAst" Usage="new System.Management.Automation.Language.CommandExpressionAst (extent, expression, redirections)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="extent" Type="System.Management.Automation.Language.IScriptExtent" />
        <Parameter Name="expression" Type="System.Management.Automation.Language.ExpressionAst" />
        <Parameter Name="redirections" Type="System.Collections.Generic.IEnumerable&lt;System.Management.Automation.Language.RedirectionAst&gt;" />
      </Parameters>
      <Docs>
        <param name="extent">The extent of the expression.</param>
        <param name="expression">The expression being wrapped.</param>
        <param name="redirections">The redirections for the command, may be null.</param>
        <summary>
            Construct a command that wraps an expression.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Management.Automation.PSArgumentNullException">
            If <paramref name="extent" /> or <paramref name="expression" /> is null.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public override System.Management.Automation.Language.Ast Copy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Management.Automation.Language.Ast Copy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Automation.Language.CommandExpressionAst.Copy" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Copy () As Ast" />
      <MemberSignature Language="F#" Value="override this.Copy : unit -&gt; System.Management.Automation.Language.Ast" Usage="commandExpressionAst.Copy " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Language.Ast</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Copy the CommandExpressionAst instance
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Expression">
      <MemberSignature Language="C#" Value="public System.Management.Automation.Language.ExpressionAst Expression { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Management.Automation.Language.ExpressionAst Expression" />
      <MemberSignature Language="DocId" Value="P:System.Management.Automation.Language.CommandExpressionAst.Expression" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Expression As ExpressionAst" />
      <MemberSignature Language="F#" Value="member this.Expression : System.Management.Automation.Language.ExpressionAst" Usage="System.Management.Automation.Language.CommandExpressionAst.Expression" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Language.ExpressionAst</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The ast for the expression that is or starts a pipeline.  This property is never null.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>