<Type Name="DefaultCustomAstVisitor" FullName="System.Management.Automation.Language.DefaultCustomAstVisitor">
  <TypeSignature Language="C#" Value="public abstract class DefaultCustomAstVisitor : System.Management.Automation.Language.ICustomAstVisitor" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit DefaultCustomAstVisitor extends System.Object implements class System.Management.Automation.Language.ICustomAstVisitor" />
  <TypeSignature Language="DocId" Value="T:System.Management.Automation.Language.DefaultCustomAstVisitor" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class DefaultCustomAstVisitor&#xA;Implements ICustomAstVisitor" />
  <TypeSignature Language="F#" Value="type DefaultCustomAstVisitor = class&#xA;    interface ICustomAstVisitor" />
  <AssemblyInfo>
    <AssemblyName>System.Management.Automation</AssemblyName>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Management.Automation.Language.ICustomAstVisitor</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            Default implementation of <see cref="T:System.Management.Automation.Language.ICustomAstVisitor" /> interface
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DefaultCustomAstVisitor ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Automation.Language.DefaultCustomAstVisitor.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitArrayExpression">
      <MemberSignature Language="C#" Value="public virtual object VisitArrayExpression (System.Management.Automation.Language.ArrayExpressionAst arrayExpressionAst);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object VisitArrayExpression(class System.Management.Automation.Language.ArrayExpressionAst arrayExpressionAst) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Automation.Language.DefaultCustomAstVisitor.VisitArrayExpression(System.Management.Automation.Language.ArrayExpressionAst)" />
      <MemberSignature Language="F#" Value="abstract member VisitArrayExpression : System.Management.Automation.Language.ArrayExpressionAst -&gt; obj&#xA;override this.VisitArrayExpression : System.Management.Automation.Language.ArrayExpressionAst -&gt; obj" Usage="defaultCustomAstVisitor.VisitArrayExpression arrayExpressionAst" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Management.Automation.Language.ICustomAstVisitor.VisitArrayExpression(System.Management.Automation.Language.ArrayExpressionAst)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arrayExpressionAst" Type="System.Management.Automation.Language.ArrayExpressionAst" />
      </Parameters>
      <Docs>
        <param name="arrayExpressionAst">To be added.</param>
        <summary />
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitArrayLiteral">
      <MemberSignature Language="C#" Value="public virtual object VisitArrayLiteral (System.Management.Automation.Language.ArrayLiteralAst arrayLiteralAst);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object VisitArrayLiteral(class System.Management.Automation.Language.ArrayLiteralAst arrayLiteralAst) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Automation.Language.DefaultCustomAstVisitor.VisitArrayLiteral(System.Management.Automation.Language.ArrayLiteralAst)" />
      <MemberSignature Language="F#" Value="abstract member VisitArrayLiteral : System.Management.Automation.Language.ArrayLiteralAst -&gt; obj&#xA;override this.VisitArrayLiteral : System.Management.Automation.Language.ArrayLiteralAst -&gt; obj" Usage="defaultCustomAstVisitor.VisitArrayLiteral arrayLiteralAst" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Management.Automation.Language.ICustomAstVisitor.VisitArrayLiteral(System.Management.Automation.Language.ArrayLiteralAst)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arrayLiteralAst" Type="System.Management.Automation.Language.ArrayLiteralAst" />
      </Parameters>
      <Docs>
        <param name="arrayLiteralAst">To be added.</param>
        <summary />
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitAssignmentStatement">
      <MemberSignature Language="C#" Value="public virtual object VisitAssignmentStatement (System.Management.Automation.Language.AssignmentStatementAst assignmentStatementAst);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object VisitAssignmentStatement(class System.Management.Automation.Language.AssignmentStatementAst assignmentStatementAst) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Automation.Language.DefaultCustomAstVisitor.VisitAssignmentStatement(System.Management.Automation.Language.AssignmentStatementAst)" />
      <MemberSignature Language="F#" Value="abstract member VisitAssignmentStatement : System.Management.Automation.Language.AssignmentStatementAst -&gt; obj&#xA;override this.VisitAssignmentStatement : System.Management.Automation.Language.AssignmentStatementAst -&gt; obj" Usage="defaultCustomAstVisitor.VisitAssignmentStatement assignmentStatementAst" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Management.Automation.Language.ICustomAstVisitor.VisitAssignmentStatement(System.Management.Automation.Language.AssignmentStatementAst)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assignmentStatementAst" Type="System.Management.Automation.Language.AssignmentStatementAst" />
      </Parameters>
      <Docs>
        <param name="assignmentStatementAst">To be added.</param>
        <summary />
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitAttribute">
      <MemberSignature Language="C#" Value="public virtual object VisitAttribute (System.Management.Automation.Language.AttributeAst attributeAst);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object VisitAttribute(class System.Management.Automation.Language.AttributeAst attributeAst) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Automation.Language.DefaultCustomAstVisitor.VisitAttribute(System.Management.Automation.Language.AttributeAst)" />
      <MemberSignature Language="F#" Value="abstract member VisitAttribute : System.Management.Automation.Language.AttributeAst -&gt; obj&#xA;override this.VisitAttribute : System.Management.Automation.Language.AttributeAst -&gt; obj" Usage="defaultCustomAstVisitor.VisitAttribute attributeAst" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Management.Automation.Language.ICustomAstVisitor.VisitAttribute(System.Management.Automation.Language.AttributeAst)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributeAst" Type="System.Management.Automation.Language.AttributeAst" />
      </Parameters>
      <Docs>
        <param name="attributeAst">To be added.</param>
        <summary />
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitAttributedExpression">
      <MemberSignature Language="C#" Value="public virtual object VisitAttributedExpression (System.Management.Automation.Language.AttributedExpressionAst attributedExpressionAst);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object VisitAttributedExpression(class System.Management.Automation.Language.AttributedExpressionAst attributedExpressionAst) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Automation.Language.DefaultCustomAstVisitor.VisitAttributedExpression(System.Management.Automation.Language.AttributedExpressionAst)" />
      <MemberSignature Language="F#" Value="abstract member VisitAttributedExpression : System.Management.Automation.Language.AttributedExpressionAst -&gt; obj&#xA;override this.VisitAttributedExpression : System.Management.Automation.Language.AttributedExpressionAst -&gt; obj" Usage="defaultCustomAstVisitor.VisitAttributedExpression attributedExpressionAst" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Management.Automation.Language.ICustomAstVisitor.VisitAttributedExpression(System.Management.Automation.Language.AttributedExpressionAst)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributedExpressionAst" Type="System.Management.Automation.Language.AttributedExpressionAst" />
      </Parameters>
      <Docs>
        <param name="attributedExpressionAst">To be added.</param>
        <summary />
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitBinaryExpression">
      <MemberSignature Language="C#" Value="public virtual object VisitBinaryExpression (System.Management.Automation.Language.BinaryExpressionAst binaryExpressionAst);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object VisitBinaryExpression(class System.Management.Automation.Language.BinaryExpressionAst binaryExpressionAst) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Automation.Language.DefaultCustomAstVisitor.VisitBinaryExpression(System.Management.Automation.Language.BinaryExpressionAst)" />
      <MemberSignature Language="F#" Value="abstract member VisitBinaryExpression : System.Management.Automation.Language.BinaryExpressionAst -&gt; obj&#xA;override this.VisitBinaryExpression : System.Management.Automation.Language.BinaryExpressionAst -&gt; obj" Usage="defaultCustomAstVisitor.VisitBinaryExpression binaryExpressionAst" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Management.Automation.Language.ICustomAstVisitor.VisitBinaryExpression(System.Management.Automation.Language.BinaryExpressionAst)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="binaryExpressionAst" Type="System.Management.Automation.Language.BinaryExpressionAst" />
      </Parameters>
      <Docs>
        <param name="binaryExpressionAst">To be added.</param>
        <summary />
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitBlockStatement">
      <MemberSignature Language="C#" Value="public virtual object VisitBlockStatement (System.Management.Automation.Language.BlockStatementAst blockStatementAst);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object VisitBlockStatement(class System.Management.Automation.Language.BlockStatementAst blockStatementAst) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Automation.Language.DefaultCustomAstVisitor.VisitBlockStatement(System.Management.Automation.Language.BlockStatementAst)" />
      <MemberSignature Language="F#" Value="abstract member VisitBlockStatement : System.Management.Automation.Language.BlockStatementAst -&gt; obj&#xA;override this.VisitBlockStatement : System.Management.Automation.Language.BlockStatementAst -&gt; obj" Usage="defaultCustomAstVisitor.VisitBlockStatement blockStatementAst" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Management.Automation.Language.ICustomAstVisitor.VisitBlockStatement(System.Management.Automation.Language.BlockStatementAst)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="blockStatementAst" Type="System.Management.Automation.Language.BlockStatementAst" />
      </Parameters>
      <Docs>
        <param name="blockStatementAst">To be added.</param>
        <summary />
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitBreakStatement">
      <MemberSignature Language="C#" Value="public virtual object VisitBreakStatement (System.Management.Automation.Language.BreakStatementAst breakStatementAst);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object VisitBreakStatement(class System.Management.Automation.Language.BreakStatementAst breakStatementAst) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Automation.Language.DefaultCustomAstVisitor.VisitBreakStatement(System.Management.Automation.Language.BreakStatementAst)" />
      <MemberSignature Language="F#" Value="abstract member VisitBreakStatement : System.Management.Automation.Language.BreakStatementAst -&gt; obj&#xA;override this.VisitBreakStatement : System.Management.Automation.Language.BreakStatementAst -&gt; obj" Usage="defaultCustomAstVisitor.VisitBreakStatement breakStatementAst" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Management.Automation.Language.ICustomAstVisitor.VisitBreakStatement(System.Management.Automation.Language.BreakStatementAst)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="breakStatementAst" Type="System.Management.Automation.Language.BreakStatementAst" />
      </Parameters>
      <Docs>
        <param name="breakStatementAst">To be added.</param>
        <summary />
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitCatchClause">
      <MemberSignature Language="C#" Value="public virtual object VisitCatchClause (System.Management.Automation.Language.CatchClauseAst catchClauseAst);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object VisitCatchClause(class System.Management.Automation.Language.CatchClauseAst catchClauseAst) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Automation.Language.DefaultCustomAstVisitor.VisitCatchClause(System.Management.Automation.Language.CatchClauseAst)" />
      <MemberSignature Language="F#" Value="abstract member VisitCatchClause : System.Management.Automation.Language.CatchClauseAst -&gt; obj&#xA;override this.VisitCatchClause : System.Management.Automation.Language.CatchClauseAst -&gt; obj" Usage="defaultCustomAstVisitor.VisitCatchClause catchClauseAst" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Management.Automation.Language.ICustomAstVisitor.VisitCatchClause(System.Management.Automation.Language.CatchClauseAst)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="catchClauseAst" Type="System.Management.Automation.Language.CatchClauseAst" />
      </Parameters>
      <Docs>
        <param name="catchClauseAst">To be added.</param>
        <summary />
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitCommand">
      <MemberSignature Language="C#" Value="public virtual object VisitCommand (System.Management.Automation.Language.CommandAst commandAst);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object VisitCommand(class System.Management.Automation.Language.CommandAst commandAst) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Automation.Language.DefaultCustomAstVisitor.VisitCommand(System.Management.Automation.Language.CommandAst)" />
      <MemberSignature Language="F#" Value="abstract member VisitCommand : System.Management.Automation.Language.CommandAst -&gt; obj&#xA;override this.VisitCommand : System.Management.Automation.Language.CommandAst -&gt; obj" Usage="defaultCustomAstVisitor.VisitCommand commandAst" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Management.Automation.Language.ICustomAstVisitor.VisitCommand(System.Management.Automation.Language.CommandAst)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandAst" Type="System.Management.Automation.Language.CommandAst" />
      </Parameters>
      <Docs>
        <param name="commandAst">To be added.</param>
        <summary />
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitCommandExpression">
      <MemberSignature Language="C#" Value="public virtual object VisitCommandExpression (System.Management.Automation.Language.CommandExpressionAst commandExpressionAst);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object VisitCommandExpression(class System.Management.Automation.Language.CommandExpressionAst commandExpressionAst) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Automation.Language.DefaultCustomAstVisitor.VisitCommandExpression(System.Management.Automation.Language.CommandExpressionAst)" />
      <MemberSignature Language="F#" Value="abstract member VisitCommandExpression : System.Management.Automation.Language.CommandExpressionAst -&gt; obj&#xA;override this.VisitCommandExpression : System.Management.Automation.Language.CommandExpressionAst -&gt; obj" Usage="defaultCustomAstVisitor.VisitCommandExpression commandExpressionAst" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Management.Automation.Language.ICustomAstVisitor.VisitCommandExpression(System.Management.Automation.Language.CommandExpressionAst)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandExpressionAst" Type="System.Management.Automation.Language.CommandExpressionAst" />
      </Parameters>
      <Docs>
        <param name="commandExpressionAst">To be added.</param>
        <summary />
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitCommandParameter">
      <MemberSignature Language="C#" Value="public virtual object VisitCommandParameter (System.Management.Automation.Language.CommandParameterAst commandParameterAst);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object VisitCommandParameter(class System.Management.Automation.Language.CommandParameterAst commandParameterAst) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Automation.Language.DefaultCustomAstVisitor.VisitCommandParameter(System.Management.Automation.Language.CommandParameterAst)" />
      <MemberSignature Language="F#" Value="abstract member VisitCommandParameter : System.Management.Automation.Language.CommandParameterAst -&gt; obj&#xA;override this.VisitCommandParameter : System.Management.Automation.Language.CommandParameterAst -&gt; obj" Usage="defaultCustomAstVisitor.VisitCommandParameter commandParameterAst" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Management.Automation.Language.ICustomAstVisitor.VisitCommandParameter(System.Management.Automation.Language.CommandParameterAst)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandParameterAst" Type="System.Management.Automation.Language.CommandParameterAst" />
      </Parameters>
      <Docs>
        <param name="commandParameterAst">To be added.</param>
        <summary />
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitConstantExpression">
      <MemberSignature Language="C#" Value="public virtual object VisitConstantExpression (System.Management.Automation.Language.ConstantExpressionAst constantExpressionAst);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object VisitConstantExpression(class System.Management.Automation.Language.ConstantExpressionAst constantExpressionAst) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Automation.Language.DefaultCustomAstVisitor.VisitConstantExpression(System.Management.Automation.Language.ConstantExpressionAst)" />
      <MemberSignature Language="F#" Value="abstract member VisitConstantExpression : System.Management.Automation.Language.ConstantExpressionAst -&gt; obj&#xA;override this.VisitConstantExpression : System.Management.Automation.Language.ConstantExpressionAst -&gt; obj" Usage="defaultCustomAstVisitor.VisitConstantExpression constantExpressionAst" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Management.Automation.Language.ICustomAstVisitor.VisitConstantExpression(System.Management.Automation.Language.ConstantExpressionAst)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="constantExpressionAst" Type="System.Management.Automation.Language.ConstantExpressionAst" />
      </Parameters>
      <Docs>
        <param name="constantExpressionAst">To be added.</param>
        <summary />
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitContinueStatement">
      <MemberSignature Language="C#" Value="public virtual object VisitContinueStatement (System.Management.Automation.Language.ContinueStatementAst continueStatementAst);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object VisitContinueStatement(class System.Management.Automation.Language.ContinueStatementAst continueStatementAst) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Automation.Language.DefaultCustomAstVisitor.VisitContinueStatement(System.Management.Automation.Language.ContinueStatementAst)" />
      <MemberSignature Language="F#" Value="abstract member VisitContinueStatement : System.Management.Automation.Language.ContinueStatementAst -&gt; obj&#xA;override this.VisitContinueStatement : System.Management.Automation.Language.ContinueStatementAst -&gt; obj" Usage="defaultCustomAstVisitor.VisitContinueStatement continueStatementAst" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Management.Automation.Language.ICustomAstVisitor.VisitContinueStatement(System.Management.Automation.Language.ContinueStatementAst)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="continueStatementAst" Type="System.Management.Automation.Language.ContinueStatementAst" />
      </Parameters>
      <Docs>
        <param name="continueStatementAst">To be added.</param>
        <summary />
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitConvertExpression">
      <MemberSignature Language="C#" Value="public virtual object VisitConvertExpression (System.Management.Automation.Language.ConvertExpressionAst convertExpressionAst);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object VisitConvertExpression(class System.Management.Automation.Language.ConvertExpressionAst convertExpressionAst) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Automation.Language.DefaultCustomAstVisitor.VisitConvertExpression(System.Management.Automation.Language.ConvertExpressionAst)" />
      <MemberSignature Language="F#" Value="abstract member VisitConvertExpression : System.Management.Automation.Language.ConvertExpressionAst -&gt; obj&#xA;override this.VisitConvertExpression : System.Management.Automation.Language.ConvertExpressionAst -&gt; obj" Usage="defaultCustomAstVisitor.VisitConvertExpression convertExpressionAst" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Management.Automation.Language.ICustomAstVisitor.VisitConvertExpression(System.Management.Automation.Language.ConvertExpressionAst)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="convertExpressionAst" Type="System.Management.Automation.Language.ConvertExpressionAst" />
      </Parameters>
      <Docs>
        <param name="convertExpressionAst">To be added.</param>
        <summary />
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitDataStatement">
      <MemberSignature Language="C#" Value="public virtual object VisitDataStatement (System.Management.Automation.Language.DataStatementAst dataStatementAst);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object VisitDataStatement(class System.Management.Automation.Language.DataStatementAst dataStatementAst) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Automation.Language.DefaultCustomAstVisitor.VisitDataStatement(System.Management.Automation.Language.DataStatementAst)" />
      <MemberSignature Language="F#" Value="abstract member VisitDataStatement : System.Management.Automation.Language.DataStatementAst -&gt; obj&#xA;override this.VisitDataStatement : System.Management.Automation.Language.DataStatementAst -&gt; obj" Usage="defaultCustomAstVisitor.VisitDataStatement dataStatementAst" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Management.Automation.Language.ICustomAstVisitor.VisitDataStatement(System.Management.Automation.Language.DataStatementAst)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataStatementAst" Type="System.Management.Automation.Language.DataStatementAst" />
      </Parameters>
      <Docs>
        <param name="dataStatementAst">To be added.</param>
        <summary />
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitDoUntilStatement">
      <MemberSignature Language="C#" Value="public virtual object VisitDoUntilStatement (System.Management.Automation.Language.DoUntilStatementAst doUntilStatementAst);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object VisitDoUntilStatement(class System.Management.Automation.Language.DoUntilStatementAst doUntilStatementAst) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Automation.Language.DefaultCustomAstVisitor.VisitDoUntilStatement(System.Management.Automation.Language.DoUntilStatementAst)" />
      <MemberSignature Language="F#" Value="abstract member VisitDoUntilStatement : System.Management.Automation.Language.DoUntilStatementAst -&gt; obj&#xA;override this.VisitDoUntilStatement : System.Management.Automation.Language.DoUntilStatementAst -&gt; obj" Usage="defaultCustomAstVisitor.VisitDoUntilStatement doUntilStatementAst" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Management.Automation.Language.ICustomAstVisitor.VisitDoUntilStatement(System.Management.Automation.Language.DoUntilStatementAst)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="doUntilStatementAst" Type="System.Management.Automation.Language.DoUntilStatementAst" />
      </Parameters>
      <Docs>
        <param name="doUntilStatementAst">To be added.</param>
        <summary />
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitDoWhileStatement">
      <MemberSignature Language="C#" Value="public virtual object VisitDoWhileStatement (System.Management.Automation.Language.DoWhileStatementAst doWhileStatementAst);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object VisitDoWhileStatement(class System.Management.Automation.Language.DoWhileStatementAst doWhileStatementAst) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Automation.Language.DefaultCustomAstVisitor.VisitDoWhileStatement(System.Management.Automation.Language.DoWhileStatementAst)" />
      <MemberSignature Language="F#" Value="abstract member VisitDoWhileStatement : System.Management.Automation.Language.DoWhileStatementAst -&gt; obj&#xA;override this.VisitDoWhileStatement : System.Management.Automation.Language.DoWhileStatementAst -&gt; obj" Usage="defaultCustomAstVisitor.VisitDoWhileStatement doWhileStatementAst" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Management.Automation.Language.ICustomAstVisitor.VisitDoWhileStatement(System.Management.Automation.Language.DoWhileStatementAst)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="doWhileStatementAst" Type="System.Management.Automation.Language.DoWhileStatementAst" />
      </Parameters>
      <Docs>
        <param name="doWhileStatementAst">To be added.</param>
        <summary />
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitErrorExpression">
      <MemberSignature Language="C#" Value="public virtual object VisitErrorExpression (System.Management.Automation.Language.ErrorExpressionAst errorExpressionAst);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object VisitErrorExpression(class System.Management.Automation.Language.ErrorExpressionAst errorExpressionAst) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Automation.Language.DefaultCustomAstVisitor.VisitErrorExpression(System.Management.Automation.Language.ErrorExpressionAst)" />
      <MemberSignature Language="F#" Value="abstract member VisitErrorExpression : System.Management.Automation.Language.ErrorExpressionAst -&gt; obj&#xA;override this.VisitErrorExpression : System.Management.Automation.Language.ErrorExpressionAst -&gt; obj" Usage="defaultCustomAstVisitor.VisitErrorExpression errorExpressionAst" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Management.Automation.Language.ICustomAstVisitor.VisitErrorExpression(System.Management.Automation.Language.ErrorExpressionAst)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="errorExpressionAst" Type="System.Management.Automation.Language.ErrorExpressionAst" />
      </Parameters>
      <Docs>
        <param name="errorExpressionAst">To be added.</param>
        <summary />
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitErrorStatement">
      <MemberSignature Language="C#" Value="public virtual object VisitErrorStatement (System.Management.Automation.Language.ErrorStatementAst errorStatementAst);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object VisitErrorStatement(class System.Management.Automation.Language.ErrorStatementAst errorStatementAst) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Automation.Language.DefaultCustomAstVisitor.VisitErrorStatement(System.Management.Automation.Language.ErrorStatementAst)" />
      <MemberSignature Language="F#" Value="abstract member VisitErrorStatement : System.Management.Automation.Language.ErrorStatementAst -&gt; obj&#xA;override this.VisitErrorStatement : System.Management.Automation.Language.ErrorStatementAst -&gt; obj" Usage="defaultCustomAstVisitor.VisitErrorStatement errorStatementAst" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Management.Automation.Language.ICustomAstVisitor.VisitErrorStatement(System.Management.Automation.Language.ErrorStatementAst)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="errorStatementAst" Type="System.Management.Automation.Language.ErrorStatementAst" />
      </Parameters>
      <Docs>
        <param name="errorStatementAst">To be added.</param>
        <summary />
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitExitStatement">
      <MemberSignature Language="C#" Value="public virtual object VisitExitStatement (System.Management.Automation.Language.ExitStatementAst exitStatementAst);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object VisitExitStatement(class System.Management.Automation.Language.ExitStatementAst exitStatementAst) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Automation.Language.DefaultCustomAstVisitor.VisitExitStatement(System.Management.Automation.Language.ExitStatementAst)" />
      <MemberSignature Language="F#" Value="abstract member VisitExitStatement : System.Management.Automation.Language.ExitStatementAst -&gt; obj&#xA;override this.VisitExitStatement : System.Management.Automation.Language.ExitStatementAst -&gt; obj" Usage="defaultCustomAstVisitor.VisitExitStatement exitStatementAst" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Management.Automation.Language.ICustomAstVisitor.VisitExitStatement(System.Management.Automation.Language.ExitStatementAst)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exitStatementAst" Type="System.Management.Automation.Language.ExitStatementAst" />
      </Parameters>
      <Docs>
        <param name="exitStatementAst">To be added.</param>
        <summary />
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitExpandableStringExpression">
      <MemberSignature Language="C#" Value="public virtual object VisitExpandableStringExpression (System.Management.Automation.Language.ExpandableStringExpressionAst expandableStringExpressionAst);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object VisitExpandableStringExpression(class System.Management.Automation.Language.ExpandableStringExpressionAst expandableStringExpressionAst) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Automation.Language.DefaultCustomAstVisitor.VisitExpandableStringExpression(System.Management.Automation.Language.ExpandableStringExpressionAst)" />
      <MemberSignature Language="F#" Value="abstract member VisitExpandableStringExpression : System.Management.Automation.Language.ExpandableStringExpressionAst -&gt; obj&#xA;override this.VisitExpandableStringExpression : System.Management.Automation.Language.ExpandableStringExpressionAst -&gt; obj" Usage="defaultCustomAstVisitor.VisitExpandableStringExpression expandableStringExpressionAst" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Management.Automation.Language.ICustomAstVisitor.VisitExpandableStringExpression(System.Management.Automation.Language.ExpandableStringExpressionAst)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expandableStringExpressionAst" Type="System.Management.Automation.Language.ExpandableStringExpressionAst" />
      </Parameters>
      <Docs>
        <param name="expandableStringExpressionAst">To be added.</param>
        <summary />
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitFileRedirection">
      <MemberSignature Language="C#" Value="public virtual object VisitFileRedirection (System.Management.Automation.Language.FileRedirectionAst fileRedirectionAst);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object VisitFileRedirection(class System.Management.Automation.Language.FileRedirectionAst fileRedirectionAst) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Automation.Language.DefaultCustomAstVisitor.VisitFileRedirection(System.Management.Automation.Language.FileRedirectionAst)" />
      <MemberSignature Language="F#" Value="abstract member VisitFileRedirection : System.Management.Automation.Language.FileRedirectionAst -&gt; obj&#xA;override this.VisitFileRedirection : System.Management.Automation.Language.FileRedirectionAst -&gt; obj" Usage="defaultCustomAstVisitor.VisitFileRedirection fileRedirectionAst" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Management.Automation.Language.ICustomAstVisitor.VisitFileRedirection(System.Management.Automation.Language.FileRedirectionAst)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileRedirectionAst" Type="System.Management.Automation.Language.FileRedirectionAst" />
      </Parameters>
      <Docs>
        <param name="fileRedirectionAst">To be added.</param>
        <summary />
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitForEachStatement">
      <MemberSignature Language="C#" Value="public virtual object VisitForEachStatement (System.Management.Automation.Language.ForEachStatementAst forEachStatementAst);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object VisitForEachStatement(class System.Management.Automation.Language.ForEachStatementAst forEachStatementAst) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Automation.Language.DefaultCustomAstVisitor.VisitForEachStatement(System.Management.Automation.Language.ForEachStatementAst)" />
      <MemberSignature Language="F#" Value="abstract member VisitForEachStatement : System.Management.Automation.Language.ForEachStatementAst -&gt; obj&#xA;override this.VisitForEachStatement : System.Management.Automation.Language.ForEachStatementAst -&gt; obj" Usage="defaultCustomAstVisitor.VisitForEachStatement forEachStatementAst" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Management.Automation.Language.ICustomAstVisitor.VisitForEachStatement(System.Management.Automation.Language.ForEachStatementAst)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="forEachStatementAst" Type="System.Management.Automation.Language.ForEachStatementAst" />
      </Parameters>
      <Docs>
        <param name="forEachStatementAst">To be added.</param>
        <summary />
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitForStatement">
      <MemberSignature Language="C#" Value="public virtual object VisitForStatement (System.Management.Automation.Language.ForStatementAst forStatementAst);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object VisitForStatement(class System.Management.Automation.Language.ForStatementAst forStatementAst) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Automation.Language.DefaultCustomAstVisitor.VisitForStatement(System.Management.Automation.Language.ForStatementAst)" />
      <MemberSignature Language="F#" Value="abstract member VisitForStatement : System.Management.Automation.Language.ForStatementAst -&gt; obj&#xA;override this.VisitForStatement : System.Management.Automation.Language.ForStatementAst -&gt; obj" Usage="defaultCustomAstVisitor.VisitForStatement forStatementAst" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Management.Automation.Language.ICustomAstVisitor.VisitForStatement(System.Management.Automation.Language.ForStatementAst)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="forStatementAst" Type="System.Management.Automation.Language.ForStatementAst" />
      </Parameters>
      <Docs>
        <param name="forStatementAst">To be added.</param>
        <summary />
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitFunctionDefinition">
      <MemberSignature Language="C#" Value="public virtual object VisitFunctionDefinition (System.Management.Automation.Language.FunctionDefinitionAst functionDefinitionAst);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object VisitFunctionDefinition(class System.Management.Automation.Language.FunctionDefinitionAst functionDefinitionAst) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Automation.Language.DefaultCustomAstVisitor.VisitFunctionDefinition(System.Management.Automation.Language.FunctionDefinitionAst)" />
      <MemberSignature Language="F#" Value="abstract member VisitFunctionDefinition : System.Management.Automation.Language.FunctionDefinitionAst -&gt; obj&#xA;override this.VisitFunctionDefinition : System.Management.Automation.Language.FunctionDefinitionAst -&gt; obj" Usage="defaultCustomAstVisitor.VisitFunctionDefinition functionDefinitionAst" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Management.Automation.Language.ICustomAstVisitor.VisitFunctionDefinition(System.Management.Automation.Language.FunctionDefinitionAst)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="functionDefinitionAst" Type="System.Management.Automation.Language.FunctionDefinitionAst" />
      </Parameters>
      <Docs>
        <param name="functionDefinitionAst">To be added.</param>
        <summary />
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitHashtable">
      <MemberSignature Language="C#" Value="public virtual object VisitHashtable (System.Management.Automation.Language.HashtableAst hashtableAst);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object VisitHashtable(class System.Management.Automation.Language.HashtableAst hashtableAst) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Automation.Language.DefaultCustomAstVisitor.VisitHashtable(System.Management.Automation.Language.HashtableAst)" />
      <MemberSignature Language="F#" Value="abstract member VisitHashtable : System.Management.Automation.Language.HashtableAst -&gt; obj&#xA;override this.VisitHashtable : System.Management.Automation.Language.HashtableAst -&gt; obj" Usage="defaultCustomAstVisitor.VisitHashtable hashtableAst" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Management.Automation.Language.ICustomAstVisitor.VisitHashtable(System.Management.Automation.Language.HashtableAst)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hashtableAst" Type="System.Management.Automation.Language.HashtableAst" />
      </Parameters>
      <Docs>
        <param name="hashtableAst">To be added.</param>
        <summary />
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitIfStatement">
      <MemberSignature Language="C#" Value="public virtual object VisitIfStatement (System.Management.Automation.Language.IfStatementAst ifStmtAst);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object VisitIfStatement(class System.Management.Automation.Language.IfStatementAst ifStmtAst) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Automation.Language.DefaultCustomAstVisitor.VisitIfStatement(System.Management.Automation.Language.IfStatementAst)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitIfStatement (ifStmtAst As IfStatementAst) As Object" />
      <MemberSignature Language="F#" Value="abstract member VisitIfStatement : System.Management.Automation.Language.IfStatementAst -&gt; obj&#xA;override this.VisitIfStatement : System.Management.Automation.Language.IfStatementAst -&gt; obj" Usage="defaultCustomAstVisitor.VisitIfStatement ifStmtAst" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Management.Automation.Language.ICustomAstVisitor.VisitIfStatement(System.Management.Automation.Language.IfStatementAst)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ifStmtAst" Type="System.Management.Automation.Language.IfStatementAst" />
      </Parameters>
      <Docs>
        <param name="ifStmtAst">To be added.</param>
        <summary />
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitIndexExpression">
      <MemberSignature Language="C#" Value="public virtual object VisitIndexExpression (System.Management.Automation.Language.IndexExpressionAst indexExpressionAst);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object VisitIndexExpression(class System.Management.Automation.Language.IndexExpressionAst indexExpressionAst) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Automation.Language.DefaultCustomAstVisitor.VisitIndexExpression(System.Management.Automation.Language.IndexExpressionAst)" />
      <MemberSignature Language="F#" Value="abstract member VisitIndexExpression : System.Management.Automation.Language.IndexExpressionAst -&gt; obj&#xA;override this.VisitIndexExpression : System.Management.Automation.Language.IndexExpressionAst -&gt; obj" Usage="defaultCustomAstVisitor.VisitIndexExpression indexExpressionAst" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Management.Automation.Language.ICustomAstVisitor.VisitIndexExpression(System.Management.Automation.Language.IndexExpressionAst)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indexExpressionAst" Type="System.Management.Automation.Language.IndexExpressionAst" />
      </Parameters>
      <Docs>
        <param name="indexExpressionAst">To be added.</param>
        <summary />
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitInvokeMemberExpression">
      <MemberSignature Language="C#" Value="public virtual object VisitInvokeMemberExpression (System.Management.Automation.Language.InvokeMemberExpressionAst invokeMemberExpressionAst);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object VisitInvokeMemberExpression(class System.Management.Automation.Language.InvokeMemberExpressionAst invokeMemberExpressionAst) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Automation.Language.DefaultCustomAstVisitor.VisitInvokeMemberExpression(System.Management.Automation.Language.InvokeMemberExpressionAst)" />
      <MemberSignature Language="F#" Value="abstract member VisitInvokeMemberExpression : System.Management.Automation.Language.InvokeMemberExpressionAst -&gt; obj&#xA;override this.VisitInvokeMemberExpression : System.Management.Automation.Language.InvokeMemberExpressionAst -&gt; obj" Usage="defaultCustomAstVisitor.VisitInvokeMemberExpression invokeMemberExpressionAst" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Management.Automation.Language.ICustomAstVisitor.VisitInvokeMemberExpression(System.Management.Automation.Language.InvokeMemberExpressionAst)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="invokeMemberExpressionAst" Type="System.Management.Automation.Language.InvokeMemberExpressionAst" />
      </Parameters>
      <Docs>
        <param name="invokeMemberExpressionAst">To be added.</param>
        <summary />
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitMemberExpression">
      <MemberSignature Language="C#" Value="public virtual object VisitMemberExpression (System.Management.Automation.Language.MemberExpressionAst memberExpressionAst);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object VisitMemberExpression(class System.Management.Automation.Language.MemberExpressionAst memberExpressionAst) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Automation.Language.DefaultCustomAstVisitor.VisitMemberExpression(System.Management.Automation.Language.MemberExpressionAst)" />
      <MemberSignature Language="F#" Value="abstract member VisitMemberExpression : System.Management.Automation.Language.MemberExpressionAst -&gt; obj&#xA;override this.VisitMemberExpression : System.Management.Automation.Language.MemberExpressionAst -&gt; obj" Usage="defaultCustomAstVisitor.VisitMemberExpression memberExpressionAst" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Management.Automation.Language.ICustomAstVisitor.VisitMemberExpression(System.Management.Automation.Language.MemberExpressionAst)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="memberExpressionAst" Type="System.Management.Automation.Language.MemberExpressionAst" />
      </Parameters>
      <Docs>
        <param name="memberExpressionAst">To be added.</param>
        <summary />
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitMergingRedirection">
      <MemberSignature Language="C#" Value="public virtual object VisitMergingRedirection (System.Management.Automation.Language.MergingRedirectionAst mergingRedirectionAst);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object VisitMergingRedirection(class System.Management.Automation.Language.MergingRedirectionAst mergingRedirectionAst) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Automation.Language.DefaultCustomAstVisitor.VisitMergingRedirection(System.Management.Automation.Language.MergingRedirectionAst)" />
      <MemberSignature Language="F#" Value="abstract member VisitMergingRedirection : System.Management.Automation.Language.MergingRedirectionAst -&gt; obj&#xA;override this.VisitMergingRedirection : System.Management.Automation.Language.MergingRedirectionAst -&gt; obj" Usage="defaultCustomAstVisitor.VisitMergingRedirection mergingRedirectionAst" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Management.Automation.Language.ICustomAstVisitor.VisitMergingRedirection(System.Management.Automation.Language.MergingRedirectionAst)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mergingRedirectionAst" Type="System.Management.Automation.Language.MergingRedirectionAst" />
      </Parameters>
      <Docs>
        <param name="mergingRedirectionAst">To be added.</param>
        <summary />
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitNamedAttributeArgument">
      <MemberSignature Language="C#" Value="public virtual object VisitNamedAttributeArgument (System.Management.Automation.Language.NamedAttributeArgumentAst namedAttributeArgumentAst);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object VisitNamedAttributeArgument(class System.Management.Automation.Language.NamedAttributeArgumentAst namedAttributeArgumentAst) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Automation.Language.DefaultCustomAstVisitor.VisitNamedAttributeArgument(System.Management.Automation.Language.NamedAttributeArgumentAst)" />
      <MemberSignature Language="F#" Value="abstract member VisitNamedAttributeArgument : System.Management.Automation.Language.NamedAttributeArgumentAst -&gt; obj&#xA;override this.VisitNamedAttributeArgument : System.Management.Automation.Language.NamedAttributeArgumentAst -&gt; obj" Usage="defaultCustomAstVisitor.VisitNamedAttributeArgument namedAttributeArgumentAst" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Management.Automation.Language.ICustomAstVisitor.VisitNamedAttributeArgument(System.Management.Automation.Language.NamedAttributeArgumentAst)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="namedAttributeArgumentAst" Type="System.Management.Automation.Language.NamedAttributeArgumentAst" />
      </Parameters>
      <Docs>
        <param name="namedAttributeArgumentAst">To be added.</param>
        <summary />
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitNamedBlock">
      <MemberSignature Language="C#" Value="public virtual object VisitNamedBlock (System.Management.Automation.Language.NamedBlockAst namedBlockAst);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object VisitNamedBlock(class System.Management.Automation.Language.NamedBlockAst namedBlockAst) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Automation.Language.DefaultCustomAstVisitor.VisitNamedBlock(System.Management.Automation.Language.NamedBlockAst)" />
      <MemberSignature Language="F#" Value="abstract member VisitNamedBlock : System.Management.Automation.Language.NamedBlockAst -&gt; obj&#xA;override this.VisitNamedBlock : System.Management.Automation.Language.NamedBlockAst -&gt; obj" Usage="defaultCustomAstVisitor.VisitNamedBlock namedBlockAst" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Management.Automation.Language.ICustomAstVisitor.VisitNamedBlock(System.Management.Automation.Language.NamedBlockAst)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="namedBlockAst" Type="System.Management.Automation.Language.NamedBlockAst" />
      </Parameters>
      <Docs>
        <param name="namedBlockAst">To be added.</param>
        <summary />
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitParamBlock">
      <MemberSignature Language="C#" Value="public virtual object VisitParamBlock (System.Management.Automation.Language.ParamBlockAst paramBlockAst);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object VisitParamBlock(class System.Management.Automation.Language.ParamBlockAst paramBlockAst) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Automation.Language.DefaultCustomAstVisitor.VisitParamBlock(System.Management.Automation.Language.ParamBlockAst)" />
      <MemberSignature Language="F#" Value="abstract member VisitParamBlock : System.Management.Automation.Language.ParamBlockAst -&gt; obj&#xA;override this.VisitParamBlock : System.Management.Automation.Language.ParamBlockAst -&gt; obj" Usage="defaultCustomAstVisitor.VisitParamBlock paramBlockAst" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Management.Automation.Language.ICustomAstVisitor.VisitParamBlock(System.Management.Automation.Language.ParamBlockAst)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="paramBlockAst" Type="System.Management.Automation.Language.ParamBlockAst" />
      </Parameters>
      <Docs>
        <param name="paramBlockAst">To be added.</param>
        <summary />
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitParameter">
      <MemberSignature Language="C#" Value="public virtual object VisitParameter (System.Management.Automation.Language.ParameterAst parameterAst);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object VisitParameter(class System.Management.Automation.Language.ParameterAst parameterAst) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Automation.Language.DefaultCustomAstVisitor.VisitParameter(System.Management.Automation.Language.ParameterAst)" />
      <MemberSignature Language="F#" Value="abstract member VisitParameter : System.Management.Automation.Language.ParameterAst -&gt; obj&#xA;override this.VisitParameter : System.Management.Automation.Language.ParameterAst -&gt; obj" Usage="defaultCustomAstVisitor.VisitParameter parameterAst" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Management.Automation.Language.ICustomAstVisitor.VisitParameter(System.Management.Automation.Language.ParameterAst)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameterAst" Type="System.Management.Automation.Language.ParameterAst" />
      </Parameters>
      <Docs>
        <param name="parameterAst">To be added.</param>
        <summary />
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitParenExpression">
      <MemberSignature Language="C#" Value="public virtual object VisitParenExpression (System.Management.Automation.Language.ParenExpressionAst parenExpressionAst);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object VisitParenExpression(class System.Management.Automation.Language.ParenExpressionAst parenExpressionAst) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Automation.Language.DefaultCustomAstVisitor.VisitParenExpression(System.Management.Automation.Language.ParenExpressionAst)" />
      <MemberSignature Language="F#" Value="abstract member VisitParenExpression : System.Management.Automation.Language.ParenExpressionAst -&gt; obj&#xA;override this.VisitParenExpression : System.Management.Automation.Language.ParenExpressionAst -&gt; obj" Usage="defaultCustomAstVisitor.VisitParenExpression parenExpressionAst" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Management.Automation.Language.ICustomAstVisitor.VisitParenExpression(System.Management.Automation.Language.ParenExpressionAst)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parenExpressionAst" Type="System.Management.Automation.Language.ParenExpressionAst" />
      </Parameters>
      <Docs>
        <param name="parenExpressionAst">To be added.</param>
        <summary />
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitPipeline">
      <MemberSignature Language="C#" Value="public virtual object VisitPipeline (System.Management.Automation.Language.PipelineAst pipelineAst);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object VisitPipeline(class System.Management.Automation.Language.PipelineAst pipelineAst) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Automation.Language.DefaultCustomAstVisitor.VisitPipeline(System.Management.Automation.Language.PipelineAst)" />
      <MemberSignature Language="F#" Value="abstract member VisitPipeline : System.Management.Automation.Language.PipelineAst -&gt; obj&#xA;override this.VisitPipeline : System.Management.Automation.Language.PipelineAst -&gt; obj" Usage="defaultCustomAstVisitor.VisitPipeline pipelineAst" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Management.Automation.Language.ICustomAstVisitor.VisitPipeline(System.Management.Automation.Language.PipelineAst)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pipelineAst" Type="System.Management.Automation.Language.PipelineAst" />
      </Parameters>
      <Docs>
        <param name="pipelineAst">To be added.</param>
        <summary />
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitReturnStatement">
      <MemberSignature Language="C#" Value="public virtual object VisitReturnStatement (System.Management.Automation.Language.ReturnStatementAst returnStatementAst);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object VisitReturnStatement(class System.Management.Automation.Language.ReturnStatementAst returnStatementAst) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Automation.Language.DefaultCustomAstVisitor.VisitReturnStatement(System.Management.Automation.Language.ReturnStatementAst)" />
      <MemberSignature Language="F#" Value="abstract member VisitReturnStatement : System.Management.Automation.Language.ReturnStatementAst -&gt; obj&#xA;override this.VisitReturnStatement : System.Management.Automation.Language.ReturnStatementAst -&gt; obj" Usage="defaultCustomAstVisitor.VisitReturnStatement returnStatementAst" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Management.Automation.Language.ICustomAstVisitor.VisitReturnStatement(System.Management.Automation.Language.ReturnStatementAst)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="returnStatementAst" Type="System.Management.Automation.Language.ReturnStatementAst" />
      </Parameters>
      <Docs>
        <param name="returnStatementAst">To be added.</param>
        <summary />
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitScriptBlock">
      <MemberSignature Language="C#" Value="public virtual object VisitScriptBlock (System.Management.Automation.Language.ScriptBlockAst scriptBlockAst);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object VisitScriptBlock(class System.Management.Automation.Language.ScriptBlockAst scriptBlockAst) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Automation.Language.DefaultCustomAstVisitor.VisitScriptBlock(System.Management.Automation.Language.ScriptBlockAst)" />
      <MemberSignature Language="F#" Value="abstract member VisitScriptBlock : System.Management.Automation.Language.ScriptBlockAst -&gt; obj&#xA;override this.VisitScriptBlock : System.Management.Automation.Language.ScriptBlockAst -&gt; obj" Usage="defaultCustomAstVisitor.VisitScriptBlock scriptBlockAst" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Management.Automation.Language.ICustomAstVisitor.VisitScriptBlock(System.Management.Automation.Language.ScriptBlockAst)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scriptBlockAst" Type="System.Management.Automation.Language.ScriptBlockAst" />
      </Parameters>
      <Docs>
        <param name="scriptBlockAst">To be added.</param>
        <summary />
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitScriptBlockExpression">
      <MemberSignature Language="C#" Value="public virtual object VisitScriptBlockExpression (System.Management.Automation.Language.ScriptBlockExpressionAst scriptBlockExpressionAst);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object VisitScriptBlockExpression(class System.Management.Automation.Language.ScriptBlockExpressionAst scriptBlockExpressionAst) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Automation.Language.DefaultCustomAstVisitor.VisitScriptBlockExpression(System.Management.Automation.Language.ScriptBlockExpressionAst)" />
      <MemberSignature Language="F#" Value="abstract member VisitScriptBlockExpression : System.Management.Automation.Language.ScriptBlockExpressionAst -&gt; obj&#xA;override this.VisitScriptBlockExpression : System.Management.Automation.Language.ScriptBlockExpressionAst -&gt; obj" Usage="defaultCustomAstVisitor.VisitScriptBlockExpression scriptBlockExpressionAst" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Management.Automation.Language.ICustomAstVisitor.VisitScriptBlockExpression(System.Management.Automation.Language.ScriptBlockExpressionAst)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scriptBlockExpressionAst" Type="System.Management.Automation.Language.ScriptBlockExpressionAst" />
      </Parameters>
      <Docs>
        <param name="scriptBlockExpressionAst">To be added.</param>
        <summary />
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitStatementBlock">
      <MemberSignature Language="C#" Value="public virtual object VisitStatementBlock (System.Management.Automation.Language.StatementBlockAst statementBlockAst);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object VisitStatementBlock(class System.Management.Automation.Language.StatementBlockAst statementBlockAst) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Automation.Language.DefaultCustomAstVisitor.VisitStatementBlock(System.Management.Automation.Language.StatementBlockAst)" />
      <MemberSignature Language="F#" Value="abstract member VisitStatementBlock : System.Management.Automation.Language.StatementBlockAst -&gt; obj&#xA;override this.VisitStatementBlock : System.Management.Automation.Language.StatementBlockAst -&gt; obj" Usage="defaultCustomAstVisitor.VisitStatementBlock statementBlockAst" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Management.Automation.Language.ICustomAstVisitor.VisitStatementBlock(System.Management.Automation.Language.StatementBlockAst)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="statementBlockAst" Type="System.Management.Automation.Language.StatementBlockAst" />
      </Parameters>
      <Docs>
        <param name="statementBlockAst">To be added.</param>
        <summary />
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitStringConstantExpression">
      <MemberSignature Language="C#" Value="public virtual object VisitStringConstantExpression (System.Management.Automation.Language.StringConstantExpressionAst stringConstantExpressionAst);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object VisitStringConstantExpression(class System.Management.Automation.Language.StringConstantExpressionAst stringConstantExpressionAst) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Automation.Language.DefaultCustomAstVisitor.VisitStringConstantExpression(System.Management.Automation.Language.StringConstantExpressionAst)" />
      <MemberSignature Language="F#" Value="abstract member VisitStringConstantExpression : System.Management.Automation.Language.StringConstantExpressionAst -&gt; obj&#xA;override this.VisitStringConstantExpression : System.Management.Automation.Language.StringConstantExpressionAst -&gt; obj" Usage="defaultCustomAstVisitor.VisitStringConstantExpression stringConstantExpressionAst" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Management.Automation.Language.ICustomAstVisitor.VisitStringConstantExpression(System.Management.Automation.Language.StringConstantExpressionAst)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stringConstantExpressionAst" Type="System.Management.Automation.Language.StringConstantExpressionAst" />
      </Parameters>
      <Docs>
        <param name="stringConstantExpressionAst">To be added.</param>
        <summary />
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitSubExpression">
      <MemberSignature Language="C#" Value="public virtual object VisitSubExpression (System.Management.Automation.Language.SubExpressionAst subExpressionAst);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object VisitSubExpression(class System.Management.Automation.Language.SubExpressionAst subExpressionAst) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Automation.Language.DefaultCustomAstVisitor.VisitSubExpression(System.Management.Automation.Language.SubExpressionAst)" />
      <MemberSignature Language="F#" Value="abstract member VisitSubExpression : System.Management.Automation.Language.SubExpressionAst -&gt; obj&#xA;override this.VisitSubExpression : System.Management.Automation.Language.SubExpressionAst -&gt; obj" Usage="defaultCustomAstVisitor.VisitSubExpression subExpressionAst" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Management.Automation.Language.ICustomAstVisitor.VisitSubExpression(System.Management.Automation.Language.SubExpressionAst)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subExpressionAst" Type="System.Management.Automation.Language.SubExpressionAst" />
      </Parameters>
      <Docs>
        <param name="subExpressionAst">To be added.</param>
        <summary />
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitSwitchStatement">
      <MemberSignature Language="C#" Value="public virtual object VisitSwitchStatement (System.Management.Automation.Language.SwitchStatementAst switchStatementAst);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object VisitSwitchStatement(class System.Management.Automation.Language.SwitchStatementAst switchStatementAst) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Automation.Language.DefaultCustomAstVisitor.VisitSwitchStatement(System.Management.Automation.Language.SwitchStatementAst)" />
      <MemberSignature Language="F#" Value="abstract member VisitSwitchStatement : System.Management.Automation.Language.SwitchStatementAst -&gt; obj&#xA;override this.VisitSwitchStatement : System.Management.Automation.Language.SwitchStatementAst -&gt; obj" Usage="defaultCustomAstVisitor.VisitSwitchStatement switchStatementAst" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Management.Automation.Language.ICustomAstVisitor.VisitSwitchStatement(System.Management.Automation.Language.SwitchStatementAst)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="switchStatementAst" Type="System.Management.Automation.Language.SwitchStatementAst" />
      </Parameters>
      <Docs>
        <param name="switchStatementAst">To be added.</param>
        <summary />
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitThrowStatement">
      <MemberSignature Language="C#" Value="public virtual object VisitThrowStatement (System.Management.Automation.Language.ThrowStatementAst throwStatementAst);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object VisitThrowStatement(class System.Management.Automation.Language.ThrowStatementAst throwStatementAst) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Automation.Language.DefaultCustomAstVisitor.VisitThrowStatement(System.Management.Automation.Language.ThrowStatementAst)" />
      <MemberSignature Language="F#" Value="abstract member VisitThrowStatement : System.Management.Automation.Language.ThrowStatementAst -&gt; obj&#xA;override this.VisitThrowStatement : System.Management.Automation.Language.ThrowStatementAst -&gt; obj" Usage="defaultCustomAstVisitor.VisitThrowStatement throwStatementAst" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Management.Automation.Language.ICustomAstVisitor.VisitThrowStatement(System.Management.Automation.Language.ThrowStatementAst)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="throwStatementAst" Type="System.Management.Automation.Language.ThrowStatementAst" />
      </Parameters>
      <Docs>
        <param name="throwStatementAst">To be added.</param>
        <summary />
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitTrap">
      <MemberSignature Language="C#" Value="public virtual object VisitTrap (System.Management.Automation.Language.TrapStatementAst trapStatementAst);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object VisitTrap(class System.Management.Automation.Language.TrapStatementAst trapStatementAst) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Automation.Language.DefaultCustomAstVisitor.VisitTrap(System.Management.Automation.Language.TrapStatementAst)" />
      <MemberSignature Language="F#" Value="abstract member VisitTrap : System.Management.Automation.Language.TrapStatementAst -&gt; obj&#xA;override this.VisitTrap : System.Management.Automation.Language.TrapStatementAst -&gt; obj" Usage="defaultCustomAstVisitor.VisitTrap trapStatementAst" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Management.Automation.Language.ICustomAstVisitor.VisitTrap(System.Management.Automation.Language.TrapStatementAst)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="trapStatementAst" Type="System.Management.Automation.Language.TrapStatementAst" />
      </Parameters>
      <Docs>
        <param name="trapStatementAst">To be added.</param>
        <summary />
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitTryStatement">
      <MemberSignature Language="C#" Value="public virtual object VisitTryStatement (System.Management.Automation.Language.TryStatementAst tryStatementAst);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object VisitTryStatement(class System.Management.Automation.Language.TryStatementAst tryStatementAst) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Automation.Language.DefaultCustomAstVisitor.VisitTryStatement(System.Management.Automation.Language.TryStatementAst)" />
      <MemberSignature Language="F#" Value="abstract member VisitTryStatement : System.Management.Automation.Language.TryStatementAst -&gt; obj&#xA;override this.VisitTryStatement : System.Management.Automation.Language.TryStatementAst -&gt; obj" Usage="defaultCustomAstVisitor.VisitTryStatement tryStatementAst" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Management.Automation.Language.ICustomAstVisitor.VisitTryStatement(System.Management.Automation.Language.TryStatementAst)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tryStatementAst" Type="System.Management.Automation.Language.TryStatementAst" />
      </Parameters>
      <Docs>
        <param name="tryStatementAst">To be added.</param>
        <summary />
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitTypeConstraint">
      <MemberSignature Language="C#" Value="public virtual object VisitTypeConstraint (System.Management.Automation.Language.TypeConstraintAst typeConstraintAst);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object VisitTypeConstraint(class System.Management.Automation.Language.TypeConstraintAst typeConstraintAst) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Automation.Language.DefaultCustomAstVisitor.VisitTypeConstraint(System.Management.Automation.Language.TypeConstraintAst)" />
      <MemberSignature Language="F#" Value="abstract member VisitTypeConstraint : System.Management.Automation.Language.TypeConstraintAst -&gt; obj&#xA;override this.VisitTypeConstraint : System.Management.Automation.Language.TypeConstraintAst -&gt; obj" Usage="defaultCustomAstVisitor.VisitTypeConstraint typeConstraintAst" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Management.Automation.Language.ICustomAstVisitor.VisitTypeConstraint(System.Management.Automation.Language.TypeConstraintAst)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeConstraintAst" Type="System.Management.Automation.Language.TypeConstraintAst" />
      </Parameters>
      <Docs>
        <param name="typeConstraintAst">To be added.</param>
        <summary />
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitTypeExpression">
      <MemberSignature Language="C#" Value="public virtual object VisitTypeExpression (System.Management.Automation.Language.TypeExpressionAst typeExpressionAst);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object VisitTypeExpression(class System.Management.Automation.Language.TypeExpressionAst typeExpressionAst) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Automation.Language.DefaultCustomAstVisitor.VisitTypeExpression(System.Management.Automation.Language.TypeExpressionAst)" />
      <MemberSignature Language="F#" Value="abstract member VisitTypeExpression : System.Management.Automation.Language.TypeExpressionAst -&gt; obj&#xA;override this.VisitTypeExpression : System.Management.Automation.Language.TypeExpressionAst -&gt; obj" Usage="defaultCustomAstVisitor.VisitTypeExpression typeExpressionAst" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Management.Automation.Language.ICustomAstVisitor.VisitTypeExpression(System.Management.Automation.Language.TypeExpressionAst)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeExpressionAst" Type="System.Management.Automation.Language.TypeExpressionAst" />
      </Parameters>
      <Docs>
        <param name="typeExpressionAst">To be added.</param>
        <summary />
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitUnaryExpression">
      <MemberSignature Language="C#" Value="public virtual object VisitUnaryExpression (System.Management.Automation.Language.UnaryExpressionAst unaryExpressionAst);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object VisitUnaryExpression(class System.Management.Automation.Language.UnaryExpressionAst unaryExpressionAst) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Automation.Language.DefaultCustomAstVisitor.VisitUnaryExpression(System.Management.Automation.Language.UnaryExpressionAst)" />
      <MemberSignature Language="F#" Value="abstract member VisitUnaryExpression : System.Management.Automation.Language.UnaryExpressionAst -&gt; obj&#xA;override this.VisitUnaryExpression : System.Management.Automation.Language.UnaryExpressionAst -&gt; obj" Usage="defaultCustomAstVisitor.VisitUnaryExpression unaryExpressionAst" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Management.Automation.Language.ICustomAstVisitor.VisitUnaryExpression(System.Management.Automation.Language.UnaryExpressionAst)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unaryExpressionAst" Type="System.Management.Automation.Language.UnaryExpressionAst" />
      </Parameters>
      <Docs>
        <param name="unaryExpressionAst">To be added.</param>
        <summary />
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitUsingExpression">
      <MemberSignature Language="C#" Value="public virtual object VisitUsingExpression (System.Management.Automation.Language.UsingExpressionAst usingExpressionAst);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object VisitUsingExpression(class System.Management.Automation.Language.UsingExpressionAst usingExpressionAst) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Automation.Language.DefaultCustomAstVisitor.VisitUsingExpression(System.Management.Automation.Language.UsingExpressionAst)" />
      <MemberSignature Language="F#" Value="abstract member VisitUsingExpression : System.Management.Automation.Language.UsingExpressionAst -&gt; obj&#xA;override this.VisitUsingExpression : System.Management.Automation.Language.UsingExpressionAst -&gt; obj" Usage="defaultCustomAstVisitor.VisitUsingExpression usingExpressionAst" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Management.Automation.Language.ICustomAstVisitor.VisitUsingExpression(System.Management.Automation.Language.UsingExpressionAst)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="usingExpressionAst" Type="System.Management.Automation.Language.UsingExpressionAst" />
      </Parameters>
      <Docs>
        <param name="usingExpressionAst">To be added.</param>
        <summary />
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitVariableExpression">
      <MemberSignature Language="C#" Value="public virtual object VisitVariableExpression (System.Management.Automation.Language.VariableExpressionAst variableExpressionAst);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object VisitVariableExpression(class System.Management.Automation.Language.VariableExpressionAst variableExpressionAst) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Automation.Language.DefaultCustomAstVisitor.VisitVariableExpression(System.Management.Automation.Language.VariableExpressionAst)" />
      <MemberSignature Language="F#" Value="abstract member VisitVariableExpression : System.Management.Automation.Language.VariableExpressionAst -&gt; obj&#xA;override this.VisitVariableExpression : System.Management.Automation.Language.VariableExpressionAst -&gt; obj" Usage="defaultCustomAstVisitor.VisitVariableExpression variableExpressionAst" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Management.Automation.Language.ICustomAstVisitor.VisitVariableExpression(System.Management.Automation.Language.VariableExpressionAst)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="variableExpressionAst" Type="System.Management.Automation.Language.VariableExpressionAst" />
      </Parameters>
      <Docs>
        <param name="variableExpressionAst">To be added.</param>
        <summary />
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitWhileStatement">
      <MemberSignature Language="C#" Value="public virtual object VisitWhileStatement (System.Management.Automation.Language.WhileStatementAst whileStatementAst);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object VisitWhileStatement(class System.Management.Automation.Language.WhileStatementAst whileStatementAst) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Automation.Language.DefaultCustomAstVisitor.VisitWhileStatement(System.Management.Automation.Language.WhileStatementAst)" />
      <MemberSignature Language="F#" Value="abstract member VisitWhileStatement : System.Management.Automation.Language.WhileStatementAst -&gt; obj&#xA;override this.VisitWhileStatement : System.Management.Automation.Language.WhileStatementAst -&gt; obj" Usage="defaultCustomAstVisitor.VisitWhileStatement whileStatementAst" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Management.Automation.Language.ICustomAstVisitor.VisitWhileStatement(System.Management.Automation.Language.WhileStatementAst)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="whileStatementAst" Type="System.Management.Automation.Language.WhileStatementAst" />
      </Parameters>
      <Docs>
        <param name="whileStatementAst">To be added.</param>
        <summary />
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>