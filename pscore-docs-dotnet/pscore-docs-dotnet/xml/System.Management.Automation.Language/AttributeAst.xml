<Type Name="AttributeAst" FullName="System.Management.Automation.Language.AttributeAst">
  <TypeSignature Language="C#" Value="public class AttributeAst : System.Management.Automation.Language.AttributeBaseAst" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AttributeAst extends System.Management.Automation.Language.AttributeBaseAst" />
  <TypeSignature Language="DocId" Value="T:System.Management.Automation.Language.AttributeAst" />
  <TypeSignature Language="VB.NET" Value="Public Class AttributeAst&#xA;Inherits AttributeBaseAst" />
  <TypeSignature Language="F#" Value="type AttributeAst = class&#xA;    inherit AttributeBaseAst" />
  <AssemblyInfo>
    <AssemblyName>System.Management.Automation</AssemblyName>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Management.Automation.Language.AttributeBaseAst</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            The ast representing an attribute with optional positional and named arguments.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AttributeAst (System.Management.Automation.Language.IScriptExtent extent, System.Management.Automation.Language.ITypeName typeName, System.Collections.Generic.IEnumerable&lt;System.Management.Automation.Language.ExpressionAst&gt; positionalArguments, System.Collections.Generic.IEnumerable&lt;System.Management.Automation.Language.NamedAttributeArgumentAst&gt; namedArguments);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Management.Automation.Language.IScriptExtent extent, class System.Management.Automation.Language.ITypeName typeName, class System.Collections.Generic.IEnumerable`1&lt;class System.Management.Automation.Language.ExpressionAst&gt; positionalArguments, class System.Collections.Generic.IEnumerable`1&lt;class System.Management.Automation.Language.NamedAttributeArgumentAst&gt; namedArguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Automation.Language.AttributeAst.#ctor(System.Management.Automation.Language.IScriptExtent,System.Management.Automation.Language.ITypeName,System.Collections.Generic.IEnumerable{System.Management.Automation.Language.ExpressionAst},System.Collections.Generic.IEnumerable{System.Management.Automation.Language.NamedAttributeArgumentAst})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (extent As IScriptExtent, typeName As ITypeName, positionalArguments As IEnumerable(Of ExpressionAst), namedArguments As IEnumerable(Of NamedAttributeArgumentAst))" />
      <MemberSignature Language="F#" Value="new System.Management.Automation.Language.AttributeAst : System.Management.Automation.Language.IScriptExtent * System.Management.Automation.Language.ITypeName * seq&lt;System.Management.Automation.Language.ExpressionAst&gt; * seq&lt;System.Management.Automation.Language.NamedAttributeArgumentAst&gt; -&gt; System.Management.Automation.Language.AttributeAst" Usage="new System.Management.Automation.Language.AttributeAst (extent, typeName, positionalArguments, namedArguments)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="extent" Type="System.Management.Automation.Language.IScriptExtent" />
        <Parameter Name="typeName" Type="System.Management.Automation.Language.ITypeName" />
        <Parameter Name="positionalArguments" Type="System.Collections.Generic.IEnumerable&lt;System.Management.Automation.Language.ExpressionAst&gt;" />
        <Parameter Name="namedArguments" Type="System.Collections.Generic.IEnumerable&lt;System.Management.Automation.Language.NamedAttributeArgumentAst&gt;" />
      </Parameters>
      <Docs>
        <param name="extent">The extent of the attribute from opening '[' to closing ']'.</param>
        <param name="typeName">The attribute name.</param>
        <param name="positionalArguments">The positional arguments, may be null.</param>
        <param name="namedArguments">The named arguments, may be null.</param>
        <summary>
            Construct an attribute ast.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Management.Automation.PSArgumentNullException">
            If <paramref name="extent" /> or <paramref name="typeName" /> is null.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public override System.Management.Automation.Language.Ast Copy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Management.Automation.Language.Ast Copy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Automation.Language.AttributeAst.Copy" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Copy () As Ast" />
      <MemberSignature Language="F#" Value="override this.Copy : unit -&gt; System.Management.Automation.Language.Ast" Usage="attributeAst.Copy " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Language.Ast</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Copy the AttributeAst instance
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NamedArguments">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Management.Automation.Language.NamedAttributeArgumentAst&gt; NamedArguments { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Management.Automation.Language.NamedAttributeArgumentAst&gt; NamedArguments" />
      <MemberSignature Language="DocId" Value="P:System.Management.Automation.Language.AttributeAst.NamedArguments" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NamedArguments As ReadOnlyCollection(Of NamedAttributeArgumentAst)" />
      <MemberSignature Language="F#" Value="member this.NamedArguments : System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Management.Automation.Language.NamedAttributeArgumentAst&gt;" Usage="System.Management.Automation.Language.AttributeAst.NamedArguments" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Management.Automation.Language.NamedAttributeArgumentAst&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The asts for the named attribute arguments.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PositionalArguments">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Management.Automation.Language.ExpressionAst&gt; PositionalArguments { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Management.Automation.Language.ExpressionAst&gt; PositionalArguments" />
      <MemberSignature Language="DocId" Value="P:System.Management.Automation.Language.AttributeAst.PositionalArguments" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PositionalArguments As ReadOnlyCollection(Of ExpressionAst)" />
      <MemberSignature Language="F#" Value="member this.PositionalArguments : System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Management.Automation.Language.ExpressionAst&gt;" Usage="System.Management.Automation.Language.AttributeAst.PositionalArguments" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Management.Automation.Language.ExpressionAst&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The asts for the attribute arguments specified positionally.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>