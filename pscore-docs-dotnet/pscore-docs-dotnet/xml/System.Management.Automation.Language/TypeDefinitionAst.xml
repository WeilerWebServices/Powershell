<Type Name="TypeDefinitionAst" FullName="System.Management.Automation.Language.TypeDefinitionAst">
  <TypeSignature Language="C#" Value="public class TypeDefinitionAst : System.Management.Automation.Language.StatementAst" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TypeDefinitionAst extends System.Management.Automation.Language.StatementAst" />
  <TypeSignature Language="DocId" Value="T:System.Management.Automation.Language.TypeDefinitionAst" />
  <TypeSignature Language="VB.NET" Value="Public Class TypeDefinitionAst&#xA;Inherits StatementAst" />
  <TypeSignature Language="F#" Value="type TypeDefinitionAst = class&#xA;    inherit StatementAst" />
  <AssemblyInfo>
    <AssemblyName>System.Management.Automation</AssemblyName>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Management.Automation.Language.StatementAst</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            The ast representing a type definition including attributes, base class and
            implemented interfaces, plus it's members.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TypeDefinitionAst (System.Management.Automation.Language.IScriptExtent extent, string name, System.Collections.Generic.IEnumerable&lt;System.Management.Automation.Language.AttributeAst&gt; attributes, System.Collections.Generic.IEnumerable&lt;System.Management.Automation.Language.MemberAst&gt; members, System.Management.Automation.Language.TypeAttributes typeAttributes, System.Collections.Generic.IEnumerable&lt;System.Management.Automation.Language.TypeConstraintAst&gt; baseTypes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Management.Automation.Language.IScriptExtent extent, string name, class System.Collections.Generic.IEnumerable`1&lt;class System.Management.Automation.Language.AttributeAst&gt; attributes, class System.Collections.Generic.IEnumerable`1&lt;class System.Management.Automation.Language.MemberAst&gt; members, valuetype System.Management.Automation.Language.TypeAttributes typeAttributes, class System.Collections.Generic.IEnumerable`1&lt;class System.Management.Automation.Language.TypeConstraintAst&gt; baseTypes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Automation.Language.TypeDefinitionAst.#ctor(System.Management.Automation.Language.IScriptExtent,System.String,System.Collections.Generic.IEnumerable{System.Management.Automation.Language.AttributeAst},System.Collections.Generic.IEnumerable{System.Management.Automation.Language.MemberAst},System.Management.Automation.Language.TypeAttributes,System.Collections.Generic.IEnumerable{System.Management.Automation.Language.TypeConstraintAst})" />
      <MemberSignature Language="F#" Value="new System.Management.Automation.Language.TypeDefinitionAst : System.Management.Automation.Language.IScriptExtent * string * seq&lt;System.Management.Automation.Language.AttributeAst&gt; * seq&lt;System.Management.Automation.Language.MemberAst&gt; * System.Management.Automation.Language.TypeAttributes * seq&lt;System.Management.Automation.Language.TypeConstraintAst&gt; -&gt; System.Management.Automation.Language.TypeDefinitionAst" Usage="new System.Management.Automation.Language.TypeDefinitionAst (extent, name, attributes, members, typeAttributes, baseTypes)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="extent" Type="System.Management.Automation.Language.IScriptExtent" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="attributes" Type="System.Collections.Generic.IEnumerable&lt;System.Management.Automation.Language.AttributeAst&gt;" />
        <Parameter Name="members" Type="System.Collections.Generic.IEnumerable&lt;System.Management.Automation.Language.MemberAst&gt;" />
        <Parameter Name="typeAttributes" Type="System.Management.Automation.Language.TypeAttributes" />
        <Parameter Name="baseTypes" Type="System.Collections.Generic.IEnumerable&lt;System.Management.Automation.Language.TypeConstraintAst&gt;" />
      </Parameters>
      <Docs>
        <param name="extent">The extent of the type definition, from any attributes to the closing curly brace.</param>
        <param name="name">The name of the type</param>
        <param name="attributes">The attributes, or null if no attributes were specified.</param>
        <param name="members">The members, or null if no members were specified.</param>
        <param name="typeAttributes">The attributes (like class or interface) of the type.</param>
        <param name="baseTypes">Base class and implemented interfaces for the type.</param>
        <summary>
            Construct a type definition.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Attributes">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Management.Automation.Language.AttributeAst&gt; Attributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Management.Automation.Language.AttributeAst&gt; Attributes" />
      <MemberSignature Language="DocId" Value="P:System.Management.Automation.Language.TypeDefinitionAst.Attributes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Attributes As ReadOnlyCollection(Of AttributeAst)" />
      <MemberSignature Language="F#" Value="member this.Attributes : System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Management.Automation.Language.AttributeAst&gt;" Usage="System.Management.Automation.Language.TypeDefinitionAst.Attributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Management.Automation.Language.AttributeAst&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The asts for the custom attributes specified on the type.  This property is never null.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BaseTypes">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Management.Automation.Language.TypeConstraintAst&gt; BaseTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Management.Automation.Language.TypeConstraintAst&gt; BaseTypes" />
      <MemberSignature Language="DocId" Value="P:System.Management.Automation.Language.TypeDefinitionAst.BaseTypes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BaseTypes As ReadOnlyCollection(Of TypeConstraintAst)" />
      <MemberSignature Language="F#" Value="member this.BaseTypes : System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Management.Automation.Language.TypeConstraintAst&gt;" Usage="System.Management.Automation.Language.TypeDefinitionAst.BaseTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Management.Automation.Language.TypeConstraintAst&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The asts for the base types. This property is never null.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public override System.Management.Automation.Language.Ast Copy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Management.Automation.Language.Ast Copy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Automation.Language.TypeDefinitionAst.Copy" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Copy () As Ast" />
      <MemberSignature Language="F#" Value="override this.Copy : unit -&gt; System.Management.Automation.Language.Ast" Usage="typeDefinitionAst.Copy " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Language.Ast</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Copy the TypeDefinitionAst
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsClass">
      <MemberSignature Language="C#" Value="public bool IsClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsClass" />
      <MemberSignature Language="DocId" Value="P:System.Management.Automation.Language.TypeDefinitionAst.IsClass" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsClass As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsClass : bool" Usage="System.Management.Automation.Language.TypeDefinitionAst.IsClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Returns true if the type defines a class.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEnum">
      <MemberSignature Language="C#" Value="public bool IsEnum { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEnum" />
      <MemberSignature Language="DocId" Value="P:System.Management.Automation.Language.TypeDefinitionAst.IsEnum" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsEnum As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsEnum : bool" Usage="System.Management.Automation.Language.TypeDefinitionAst.IsEnum" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Returns true if the type defines an enum.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInterface">
      <MemberSignature Language="C#" Value="public bool IsInterface { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsInterface" />
      <MemberSignature Language="DocId" Value="P:System.Management.Automation.Language.TypeDefinitionAst.IsInterface" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsInterface As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsInterface : bool" Usage="System.Management.Automation.Language.TypeDefinitionAst.IsInterface" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Returns true if the type defines an interface.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Members">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Management.Automation.Language.MemberAst&gt; Members { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Management.Automation.Language.MemberAst&gt; Members" />
      <MemberSignature Language="DocId" Value="P:System.Management.Automation.Language.TypeDefinitionAst.Members" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Members As ReadOnlyCollection(Of MemberAst)" />
      <MemberSignature Language="F#" Value="member this.Members : System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Management.Automation.Language.MemberAst&gt;" Usage="System.Management.Automation.Language.TypeDefinitionAst.Members" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Management.Automation.Language.MemberAst&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The asts for the members of the type.  This property is never null.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Management.Automation.Language.TypeDefinitionAst.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Management.Automation.Language.TypeDefinitionAst.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The name of the type.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeAttributes">
      <MemberSignature Language="C#" Value="public System.Management.Automation.Language.TypeAttributes TypeAttributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Management.Automation.Language.TypeAttributes TypeAttributes" />
      <MemberSignature Language="DocId" Value="P:System.Management.Automation.Language.TypeDefinitionAst.TypeAttributes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TypeAttributes As TypeAttributes" />
      <MemberSignature Language="F#" Value="member this.TypeAttributes : System.Management.Automation.Language.TypeAttributes" Usage="System.Management.Automation.Language.TypeDefinitionAst.TypeAttributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Language.TypeAttributes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The type attributes (like class or interface) of the type.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>