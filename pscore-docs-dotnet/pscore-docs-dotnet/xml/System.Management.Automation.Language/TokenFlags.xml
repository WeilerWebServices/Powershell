<Type Name="TokenFlags" FullName="System.Management.Automation.Language.TokenFlags">
  <TypeSignature Language="C#" Value="public enum TokenFlags" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed TokenFlags extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Management.Automation.Language.TokenFlags" />
  <TypeSignature Language="VB.NET" Value="Public Enum TokenFlags" />
  <TypeSignature Language="F#" Value="type TokenFlags = " />
  <AssemblyInfo>
    <AssemblyName>System.Management.Automation</AssemblyName>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName>System.Flags</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            Flags that specify additional information about a given token.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AssignmentOperator">
      <MemberSignature Language="C#" Value="AssignmentOperator" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Management.Automation.Language.TokenFlags AssignmentOperator = int32(8192)" />
      <MemberSignature Language="DocId" Value="F:System.Management.Automation.Language.TokenFlags.AssignmentOperator" />
      <MemberSignature Language="VB.NET" Value="AssignmentOperator" />
      <MemberSignature Language="F#" Value="AssignmentOperator = 8192" Usage="System.Management.Automation.Language.TokenFlags.AssignmentOperator" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Language.TokenFlags</ReturnType>
      </ReturnValue>
      <MemberValue>8192</MemberValue>
      <Docs>
        <summary>
            The token is one of the assignment operators: '=', '+=', '-=', '*=', '/=', or '%='
            </summary>
      </Docs>
    </Member>
    <Member MemberName="AttributeName">
      <MemberSignature Language="C#" Value="AttributeName" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Management.Automation.Language.TokenFlags AttributeName = int32(4194304)" />
      <MemberSignature Language="DocId" Value="F:System.Management.Automation.Language.TokenFlags.AttributeName" />
      <MemberSignature Language="VB.NET" Value="AttributeName" />
      <MemberSignature Language="F#" Value="AttributeName = 4194304" Usage="System.Management.Automation.Language.TokenFlags.AttributeName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Language.TokenFlags</ReturnType>
      </ReturnValue>
      <MemberValue>4194304</MemberValue>
      <Docs>
        <summary>
            The token names an attribute.
            </summary>
      </Docs>
    </Member>
    <Member MemberName="BinaryOperator">
      <MemberSignature Language="C#" Value="BinaryOperator" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Management.Automation.Language.TokenFlags BinaryOperator = int32(256)" />
      <MemberSignature Language="DocId" Value="F:System.Management.Automation.Language.TokenFlags.BinaryOperator" />
      <MemberSignature Language="VB.NET" Value="BinaryOperator" />
      <MemberSignature Language="F#" Value="BinaryOperator = 256" Usage="System.Management.Automation.Language.TokenFlags.BinaryOperator" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Language.TokenFlags</ReturnType>
      </ReturnValue>
      <MemberValue>256</MemberValue>
      <Docs>
        <summary>
            The token is a binary operator.
            </summary>
      </Docs>
    </Member>
    <Member MemberName="BinaryPrecedenceAdd">
      <MemberSignature Language="C#" Value="BinaryPrecedenceAdd" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Management.Automation.Language.TokenFlags BinaryPrecedenceAdd = int32(4)" />
      <MemberSignature Language="DocId" Value="F:System.Management.Automation.Language.TokenFlags.BinaryPrecedenceAdd" />
      <MemberSignature Language="VB.NET" Value="BinaryPrecedenceAdd" />
      <MemberSignature Language="F#" Value="BinaryPrecedenceAdd = 4" Usage="System.Management.Automation.Language.TokenFlags.BinaryPrecedenceAdd" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Language.TokenFlags</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary>
            The precedence of the binary operators '+' and '-'.
            </summary>
      </Docs>
    </Member>
    <Member MemberName="BinaryPrecedenceBitwise">
      <MemberSignature Language="C#" Value="BinaryPrecedenceBitwise" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Management.Automation.Language.TokenFlags BinaryPrecedenceBitwise = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Management.Automation.Language.TokenFlags.BinaryPrecedenceBitwise" />
      <MemberSignature Language="VB.NET" Value="BinaryPrecedenceBitwise" />
      <MemberSignature Language="F#" Value="BinaryPrecedenceBitwise = 2" Usage="System.Management.Automation.Language.TokenFlags.BinaryPrecedenceBitwise" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Language.TokenFlags</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>
            The precedence of the bitwise operators '-band', '-bor', and '-bxor'
            </summary>
      </Docs>
    </Member>
    <Member MemberName="BinaryPrecedenceComparison">
      <MemberSignature Language="C#" Value="BinaryPrecedenceComparison" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Management.Automation.Language.TokenFlags BinaryPrecedenceComparison = int32(3)" />
      <MemberSignature Language="DocId" Value="F:System.Management.Automation.Language.TokenFlags.BinaryPrecedenceComparison" />
      <MemberSignature Language="VB.NET" Value="BinaryPrecedenceComparison" />
      <MemberSignature Language="F#" Value="BinaryPrecedenceComparison = 3" Usage="System.Management.Automation.Language.TokenFlags.BinaryPrecedenceComparison" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Language.TokenFlags</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary>
            The precedence of comparison operators including: '-eq', '-ne', '-ge', '-gt', '-lt', '-le', '-like', '-notlike',
            '-match', '-notmatch', '-replace', '-contains', '-notcontains', '-in', '-notin', '-split', '-join', '-is', '-isnot', '-as',
            and all of the case sensitive variants of these operators, if they exists.
            </summary>
      </Docs>
    </Member>
    <Member MemberName="BinaryPrecedenceFormat">
      <MemberSignature Language="C#" Value="BinaryPrecedenceFormat" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Management.Automation.Language.TokenFlags BinaryPrecedenceFormat = int32(6)" />
      <MemberSignature Language="DocId" Value="F:System.Management.Automation.Language.TokenFlags.BinaryPrecedenceFormat" />
      <MemberSignature Language="VB.NET" Value="BinaryPrecedenceFormat" />
      <MemberSignature Language="F#" Value="BinaryPrecedenceFormat = 6" Usage="System.Management.Automation.Language.TokenFlags.BinaryPrecedenceFormat" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Language.TokenFlags</ReturnType>
      </ReturnValue>
      <MemberValue>6</MemberValue>
      <Docs>
        <summary>
            The precedence of the '-f' operator.
            </summary>
      </Docs>
    </Member>
    <Member MemberName="BinaryPrecedenceLogical">
      <MemberSignature Language="C#" Value="BinaryPrecedenceLogical" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Management.Automation.Language.TokenFlags BinaryPrecedenceLogical = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Management.Automation.Language.TokenFlags.BinaryPrecedenceLogical" />
      <MemberSignature Language="VB.NET" Value="BinaryPrecedenceLogical" />
      <MemberSignature Language="F#" Value="BinaryPrecedenceLogical = 1" Usage="System.Management.Automation.Language.TokenFlags.BinaryPrecedenceLogical" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Language.TokenFlags</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>
            The precedence of the logical operators '-and', '-or', and '-xor'.
            </summary>
      </Docs>
    </Member>
    <Member MemberName="BinaryPrecedenceMask">
      <MemberSignature Language="C#" Value="BinaryPrecedenceMask" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Management.Automation.Language.TokenFlags BinaryPrecedenceMask = int32(7)" />
      <MemberSignature Language="DocId" Value="F:System.Management.Automation.Language.TokenFlags.BinaryPrecedenceMask" />
      <MemberSignature Language="VB.NET" Value="BinaryPrecedenceMask" />
      <MemberSignature Language="F#" Value="BinaryPrecedenceMask = 7" Usage="System.Management.Automation.Language.TokenFlags.BinaryPrecedenceMask" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Language.TokenFlags</ReturnType>
      </ReturnValue>
      <MemberValue>7</MemberValue>
      <Docs>
        <summary>
            A bitmask to get the precedence of binary operators.
            </summary>
      </Docs>
    </Member>
    <Member MemberName="BinaryPrecedenceMultiply">
      <MemberSignature Language="C#" Value="BinaryPrecedenceMultiply" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Management.Automation.Language.TokenFlags BinaryPrecedenceMultiply = int32(5)" />
      <MemberSignature Language="DocId" Value="F:System.Management.Automation.Language.TokenFlags.BinaryPrecedenceMultiply" />
      <MemberSignature Language="VB.NET" Value="BinaryPrecedenceMultiply" />
      <MemberSignature Language="F#" Value="BinaryPrecedenceMultiply = 5" Usage="System.Management.Automation.Language.TokenFlags.BinaryPrecedenceMultiply" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Language.TokenFlags</ReturnType>
      </ReturnValue>
      <MemberValue>5</MemberValue>
      <Docs>
        <summary>
            The precedence of the operators '*', '/', and '%'.
            </summary>
      </Docs>
    </Member>
    <Member MemberName="BinaryPrecedenceRange">
      <MemberSignature Language="C#" Value="BinaryPrecedenceRange" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Management.Automation.Language.TokenFlags BinaryPrecedenceRange = int32(7)" />
      <MemberSignature Language="DocId" Value="F:System.Management.Automation.Language.TokenFlags.BinaryPrecedenceRange" />
      <MemberSignature Language="VB.NET" Value="BinaryPrecedenceRange" />
      <MemberSignature Language="F#" Value="BinaryPrecedenceRange = 7" Usage="System.Management.Automation.Language.TokenFlags.BinaryPrecedenceRange" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Language.TokenFlags</ReturnType>
      </ReturnValue>
      <MemberValue>7</MemberValue>
      <Docs>
        <summary>
            The precedence of the '..' operator.
            </summary>
      </Docs>
    </Member>
    <Member MemberName="CanConstantFold">
      <MemberSignature Language="C#" Value="CanConstantFold" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Management.Automation.Language.TokenFlags CanConstantFold = int32(8388608)" />
      <MemberSignature Language="DocId" Value="F:System.Management.Automation.Language.TokenFlags.CanConstantFold" />
      <MemberSignature Language="VB.NET" Value="CanConstantFold" />
      <MemberSignature Language="F#" Value="CanConstantFold = 8388608" Usage="System.Management.Automation.Language.TokenFlags.CanConstantFold" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Language.TokenFlags</ReturnType>
      </ReturnValue>
      <MemberValue>8388608</MemberValue>
      <Docs>
        <summary>
            The token is a valid operator to use when doing constant folding.
            </summary>
      </Docs>
    </Member>
    <Member MemberName="CaseSensitiveOperator">
      <MemberSignature Language="C#" Value="CaseSensitiveOperator" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Management.Automation.Language.TokenFlags CaseSensitiveOperator = int32(1024)" />
      <MemberSignature Language="DocId" Value="F:System.Management.Automation.Language.TokenFlags.CaseSensitiveOperator" />
      <MemberSignature Language="VB.NET" Value="CaseSensitiveOperator" />
      <MemberSignature Language="F#" Value="CaseSensitiveOperator = 1024" Usage="System.Management.Automation.Language.TokenFlags.CaseSensitiveOperator" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Language.TokenFlags</ReturnType>
      </ReturnValue>
      <MemberValue>1024</MemberValue>
      <Docs>
        <summary>
            The token is a case sensitive operator such as '-ceq' or '-ccontains'.
            </summary>
      </Docs>
    </Member>
    <Member MemberName="CommandName">
      <MemberSignature Language="C#" Value="CommandName" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Management.Automation.Language.TokenFlags CommandName = int32(524288)" />
      <MemberSignature Language="DocId" Value="F:System.Management.Automation.Language.TokenFlags.CommandName" />
      <MemberSignature Language="VB.NET" Value="CommandName" />
      <MemberSignature Language="F#" Value="CommandName = 524288" Usage="System.Management.Automation.Language.TokenFlags.CommandName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Language.TokenFlags</ReturnType>
      </ReturnValue>
      <MemberValue>524288</MemberValue>
      <Docs>
        <summary>
            The token names a command in a pipeline.
            </summary>
      </Docs>
    </Member>
    <Member MemberName="DisallowedInRestrictedMode">
      <MemberSignature Language="C#" Value="DisallowedInRestrictedMode" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Management.Automation.Language.TokenFlags DisallowedInRestrictedMode = int32(131072)" />
      <MemberSignature Language="DocId" Value="F:System.Management.Automation.Language.TokenFlags.DisallowedInRestrictedMode" />
      <MemberSignature Language="VB.NET" Value="DisallowedInRestrictedMode" />
      <MemberSignature Language="F#" Value="DisallowedInRestrictedMode = 131072" Usage="System.Management.Automation.Language.TokenFlags.DisallowedInRestrictedMode" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Language.TokenFlags</ReturnType>
      </ReturnValue>
      <MemberValue>131072</MemberValue>
      <Docs>
        <summary>
            The operator is not allowed in restricted language mode or in the data language.
            </summary>
      </Docs>
    </Member>
    <Member MemberName="Keyword">
      <MemberSignature Language="C#" Value="Keyword" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Management.Automation.Language.TokenFlags Keyword = int32(16)" />
      <MemberSignature Language="DocId" Value="F:System.Management.Automation.Language.TokenFlags.Keyword" />
      <MemberSignature Language="VB.NET" Value="Keyword" />
      <MemberSignature Language="F#" Value="Keyword = 16" Usage="System.Management.Automation.Language.TokenFlags.Keyword" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Language.TokenFlags</ReturnType>
      </ReturnValue>
      <MemberValue>16</MemberValue>
      <Docs>
        <summary>
            The token is a keyword.
            </summary>
      </Docs>
    </Member>
    <Member MemberName="MemberName">
      <MemberSignature Language="C#" Value="MemberName" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Management.Automation.Language.TokenFlags MemberName = int32(1048576)" />
      <MemberSignature Language="DocId" Value="F:System.Management.Automation.Language.TokenFlags.MemberName" />
      <MemberSignature Language="VB.NET" Value="MemberName" />
      <MemberSignature Language="F#" Value="MemberName = 1048576" Usage="System.Management.Automation.Language.TokenFlags.MemberName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Language.TokenFlags</ReturnType>
      </ReturnValue>
      <MemberValue>1048576</MemberValue>
      <Docs>
        <summary>
            The token names a member of a class.
            </summary>
      </Docs>
    </Member>
    <Member MemberName="None">
      <MemberSignature Language="C#" Value="None" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Management.Automation.Language.TokenFlags None = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Management.Automation.Language.TokenFlags.None" />
      <MemberSignature Language="VB.NET" Value="None" />
      <MemberSignature Language="F#" Value="None = 0" Usage="System.Management.Automation.Language.TokenFlags.None" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Language.TokenFlags</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>
            The token has no flags.
            </summary>
      </Docs>
    </Member>
    <Member MemberName="ParseModeInvariant">
      <MemberSignature Language="C#" Value="ParseModeInvariant" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Management.Automation.Language.TokenFlags ParseModeInvariant = int32(32768)" />
      <MemberSignature Language="DocId" Value="F:System.Management.Automation.Language.TokenFlags.ParseModeInvariant" />
      <MemberSignature Language="VB.NET" Value="ParseModeInvariant" />
      <MemberSignature Language="F#" Value="ParseModeInvariant = 32768" Usage="System.Management.Automation.Language.TokenFlags.ParseModeInvariant" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Language.TokenFlags</ReturnType>
      </ReturnValue>
      <MemberValue>32768</MemberValue>
      <Docs>
        <summary>
            The token is scanned identically in expression mode or command mode.
            </summary>
      </Docs>
    </Member>
    <Member MemberName="PrefixOrPostfixOperator">
      <MemberSignature Language="C#" Value="PrefixOrPostfixOperator" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Management.Automation.Language.TokenFlags PrefixOrPostfixOperator = int32(262144)" />
      <MemberSignature Language="DocId" Value="F:System.Management.Automation.Language.TokenFlags.PrefixOrPostfixOperator" />
      <MemberSignature Language="VB.NET" Value="PrefixOrPostfixOperator" />
      <MemberSignature Language="F#" Value="PrefixOrPostfixOperator = 262144" Usage="System.Management.Automation.Language.TokenFlags.PrefixOrPostfixOperator" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Language.TokenFlags</ReturnType>
      </ReturnValue>
      <MemberValue>262144</MemberValue>
      <Docs>
        <summary>
            The token is either a prefix or postfix '++' or '--'.
            </summary>
      </Docs>
    </Member>
    <Member MemberName="ScriptBlockBlockName">
      <MemberSignature Language="C#" Value="ScriptBlockBlockName" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Management.Automation.Language.TokenFlags ScriptBlockBlockName = int32(32)" />
      <MemberSignature Language="DocId" Value="F:System.Management.Automation.Language.TokenFlags.ScriptBlockBlockName" />
      <MemberSignature Language="VB.NET" Value="ScriptBlockBlockName" />
      <MemberSignature Language="F#" Value="ScriptBlockBlockName = 32" Usage="System.Management.Automation.Language.TokenFlags.ScriptBlockBlockName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Language.TokenFlags</ReturnType>
      </ReturnValue>
      <MemberValue>32</MemberValue>
      <Docs>
        <summary>
            The token one of the keywords that is a part of a script block: 'begin', 'process', 'end', or 'dynamicparam'.
            </summary>
      </Docs>
    </Member>
    <Member MemberName="SpecialOperator">
      <MemberSignature Language="C#" Value="SpecialOperator" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Management.Automation.Language.TokenFlags SpecialOperator = int32(4096)" />
      <MemberSignature Language="DocId" Value="F:System.Management.Automation.Language.TokenFlags.SpecialOperator" />
      <MemberSignature Language="VB.NET" Value="SpecialOperator" />
      <MemberSignature Language="F#" Value="SpecialOperator = 4096" Usage="System.Management.Automation.Language.TokenFlags.SpecialOperator" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Language.TokenFlags</ReturnType>
      </ReturnValue>
      <MemberValue>4096</MemberValue>
      <Docs>
        <summary>
            The operators '&amp;', '|', and the member access operators ':' and '::'.
            </summary>
      </Docs>
    </Member>
    <Member MemberName="StatementDoesntSupportAttributes">
      <MemberSignature Language="C#" Value="StatementDoesntSupportAttributes" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Management.Automation.Language.TokenFlags StatementDoesntSupportAttributes = int32(16777216)" />
      <MemberSignature Language="DocId" Value="F:System.Management.Automation.Language.TokenFlags.StatementDoesntSupportAttributes" />
      <MemberSignature Language="VB.NET" Value="StatementDoesntSupportAttributes" />
      <MemberSignature Language="F#" Value="StatementDoesntSupportAttributes = 16777216" Usage="System.Management.Automation.Language.TokenFlags.StatementDoesntSupportAttributes" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Language.TokenFlags</ReturnType>
      </ReturnValue>
      <MemberValue>16777216</MemberValue>
      <Docs>
        <summary>
            The token is a statement but does not support attributes.
            </summary>
      </Docs>
    </Member>
    <Member MemberName="TokenInError">
      <MemberSignature Language="C#" Value="TokenInError" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Management.Automation.Language.TokenFlags TokenInError = int32(65536)" />
      <MemberSignature Language="DocId" Value="F:System.Management.Automation.Language.TokenFlags.TokenInError" />
      <MemberSignature Language="VB.NET" Value="TokenInError" />
      <MemberSignature Language="F#" Value="TokenInError = 65536" Usage="System.Management.Automation.Language.TokenFlags.TokenInError" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Language.TokenFlags</ReturnType>
      </ReturnValue>
      <MemberValue>65536</MemberValue>
      <Docs>
        <summary>
            The token has some error associated with it.  For example, it may be a string missing it's terminator.
            </summary>
      </Docs>
    </Member>
    <Member MemberName="TypeName">
      <MemberSignature Language="C#" Value="TypeName" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Management.Automation.Language.TokenFlags TypeName = int32(2097152)" />
      <MemberSignature Language="DocId" Value="F:System.Management.Automation.Language.TokenFlags.TypeName" />
      <MemberSignature Language="VB.NET" Value="TypeName" />
      <MemberSignature Language="F#" Value="TypeName = 2097152" Usage="System.Management.Automation.Language.TokenFlags.TypeName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Language.TokenFlags</ReturnType>
      </ReturnValue>
      <MemberValue>2097152</MemberValue>
      <Docs>
        <summary>
            The token names a type.
            </summary>
      </Docs>
    </Member>
    <Member MemberName="UnaryOperator">
      <MemberSignature Language="C#" Value="UnaryOperator" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Management.Automation.Language.TokenFlags UnaryOperator = int32(512)" />
      <MemberSignature Language="DocId" Value="F:System.Management.Automation.Language.TokenFlags.UnaryOperator" />
      <MemberSignature Language="VB.NET" Value="UnaryOperator" />
      <MemberSignature Language="F#" Value="UnaryOperator = 512" Usage="System.Management.Automation.Language.TokenFlags.UnaryOperator" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Language.TokenFlags</ReturnType>
      </ReturnValue>
      <MemberValue>512</MemberValue>
      <Docs>
        <summary>
            The token is a unary operator.
            </summary>
      </Docs>
    </Member>
  </Members>
</Type>