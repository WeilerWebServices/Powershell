<Type Name="DynamicKeywordStatementAst" FullName="System.Management.Automation.Language.DynamicKeywordStatementAst">
  <TypeSignature Language="C#" Value="public class DynamicKeywordStatementAst : System.Management.Automation.Language.StatementAst" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DynamicKeywordStatementAst extends System.Management.Automation.Language.StatementAst" />
  <TypeSignature Language="DocId" Value="T:System.Management.Automation.Language.DynamicKeywordStatementAst" />
  <TypeSignature Language="VB.NET" Value="Public Class DynamicKeywordStatementAst&#xA;Inherits StatementAst" />
  <TypeSignature Language="F#" Value="type DynamicKeywordStatementAst = class&#xA;    inherit StatementAst" />
  <AssemblyInfo>
    <AssemblyName>System.Management.Automation</AssemblyName>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Management.Automation.Language.StatementAst</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            The ast represents the DynamicKeyword statement
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DynamicKeywordStatementAst (System.Management.Automation.Language.IScriptExtent extent, System.Collections.Generic.IEnumerable&lt;System.Management.Automation.Language.CommandElementAst&gt; commandElements);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Management.Automation.Language.IScriptExtent extent, class System.Collections.Generic.IEnumerable`1&lt;class System.Management.Automation.Language.CommandElementAst&gt; commandElements) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Automation.Language.DynamicKeywordStatementAst.#ctor(System.Management.Automation.Language.IScriptExtent,System.Collections.Generic.IEnumerable{System.Management.Automation.Language.CommandElementAst})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (extent As IScriptExtent, commandElements As IEnumerable(Of CommandElementAst))" />
      <MemberSignature Language="F#" Value="new System.Management.Automation.Language.DynamicKeywordStatementAst : System.Management.Automation.Language.IScriptExtent * seq&lt;System.Management.Automation.Language.CommandElementAst&gt; -&gt; System.Management.Automation.Language.DynamicKeywordStatementAst" Usage="new System.Management.Automation.Language.DynamicKeywordStatementAst (extent, commandElements)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="extent" Type="System.Management.Automation.Language.IScriptExtent" />
        <Parameter Name="commandElements" Type="System.Collections.Generic.IEnumerable&lt;System.Management.Automation.Language.CommandElementAst&gt;" />
      </Parameters>
      <Docs>
        <param name="extent">
            The extent of the expression, starting with the attribute and ending after the expression being attributed.
            </param>
        <param name="commandElements">A collection of <see cref="T:System.Management.Automation.Language.CommandElementAst" /> used to invoke <see cref="T:System.Management.Automation.Language.DynamicKeyword" /> specific command</param>
        <summary>
            Construct a DynamicKeyword statement
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Management.Automation.PSArgumentException">
            If <paramref name="commandElements" /> is null or empty.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="CommandElements">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Management.Automation.Language.CommandElementAst&gt; CommandElements { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Management.Automation.Language.CommandElementAst&gt; CommandElements" />
      <MemberSignature Language="DocId" Value="P:System.Management.Automation.Language.DynamicKeywordStatementAst.CommandElements" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CommandElements As ReadOnlyCollection(Of CommandElementAst)" />
      <MemberSignature Language="F#" Value="member this.CommandElements : System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Management.Automation.Language.CommandElementAst&gt;" Usage="System.Management.Automation.Language.DynamicKeywordStatementAst.CommandElements" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Management.Automation.Language.CommandElementAst&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
             A non-empty collection of command elements represent the content of the
             DynamicKeyword.
             It may represents a command, such as “Import-DSCResource”,
             or DSC resources, then CommandElements includes:
               (1) Keyword Name
               (2) InstanceName
               (3) Body, could be ScriptBlockExpressionAst (for Node keyword) or a HashtableAst (remaining)
            
             This property is never null and never empty
             </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public override System.Management.Automation.Language.Ast Copy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Management.Automation.Language.Ast Copy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Automation.Language.DynamicKeywordStatementAst.Copy" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Copy () As Ast" />
      <MemberSignature Language="F#" Value="override this.Copy : unit -&gt; System.Management.Automation.Language.Ast" Usage="dynamicKeywordStatementAst.Copy " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Language.Ast</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Duplicates the <see cref="T:System.Management.Automation.Language.DynamicKeywordStatementAst" />, allowing it to be composed into other ASTs.
            </summary>
        <returns>A copy of the <see cref="T:System.Management.Automation.Language.DynamicKeywordStatementAst" />, with the link to the previous parent removed.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>