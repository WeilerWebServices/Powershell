<Type Name="DataStatementAst" FullName="System.Management.Automation.Language.DataStatementAst">
  <TypeSignature Language="C#" Value="public class DataStatementAst : System.Management.Automation.Language.StatementAst" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataStatementAst extends System.Management.Automation.Language.StatementAst" />
  <TypeSignature Language="DocId" Value="T:System.Management.Automation.Language.DataStatementAst" />
  <TypeSignature Language="VB.NET" Value="Public Class DataStatementAst&#xA;Inherits StatementAst" />
  <TypeSignature Language="F#" Value="type DataStatementAst = class&#xA;    inherit StatementAst" />
  <AssemblyInfo>
    <AssemblyName>System.Management.Automation</AssemblyName>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Management.Automation.Language.StatementAst</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            The ast representing the data statement.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataStatementAst (System.Management.Automation.Language.IScriptExtent extent, string variableName, System.Collections.Generic.IEnumerable&lt;System.Management.Automation.Language.ExpressionAst&gt; commandsAllowed, System.Management.Automation.Language.StatementBlockAst body);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Management.Automation.Language.IScriptExtent extent, string variableName, class System.Collections.Generic.IEnumerable`1&lt;class System.Management.Automation.Language.ExpressionAst&gt; commandsAllowed, class System.Management.Automation.Language.StatementBlockAst body) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Automation.Language.DataStatementAst.#ctor(System.Management.Automation.Language.IScriptExtent,System.String,System.Collections.Generic.IEnumerable{System.Management.Automation.Language.ExpressionAst},System.Management.Automation.Language.StatementBlockAst)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (extent As IScriptExtent, variableName As String, commandsAllowed As IEnumerable(Of ExpressionAst), body As StatementBlockAst)" />
      <MemberSignature Language="F#" Value="new System.Management.Automation.Language.DataStatementAst : System.Management.Automation.Language.IScriptExtent * string * seq&lt;System.Management.Automation.Language.ExpressionAst&gt; * System.Management.Automation.Language.StatementBlockAst -&gt; System.Management.Automation.Language.DataStatementAst" Usage="new System.Management.Automation.Language.DataStatementAst (extent, variableName, commandsAllowed, body)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="extent" Type="System.Management.Automation.Language.IScriptExtent" />
        <Parameter Name="variableName" Type="System.String" />
        <Parameter Name="commandsAllowed" Type="System.Collections.Generic.IEnumerable&lt;System.Management.Automation.Language.ExpressionAst&gt;" />
        <Parameter Name="body" Type="System.Management.Automation.Language.StatementBlockAst" />
      </Parameters>
      <Docs>
        <param name="extent">The extent of the data statement, extending from the data keyword to the closing curly brace.</param>
        <param name="variableName">The name of the variable, if specified, otherwise null.</param>
        <param name="commandsAllowed">The list of commands allowed in the data statement, if specified, otherwise null.</param>
        <param name="body">The body of the data statement.</param>
        <summary>
            Construct a data statement.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Management.Automation.PSArgumentNullException">
            If <paramref name="extent" /> or <paramref name="body" /> is null.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Body">
      <MemberSignature Language="C#" Value="public System.Management.Automation.Language.StatementBlockAst Body { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Management.Automation.Language.StatementBlockAst Body" />
      <MemberSignature Language="DocId" Value="P:System.Management.Automation.Language.DataStatementAst.Body" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Body As StatementBlockAst" />
      <MemberSignature Language="F#" Value="member this.Body : System.Management.Automation.Language.StatementBlockAst" Usage="System.Management.Automation.Language.DataStatementAst.Body" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Language.StatementBlockAst</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The ast for the body of the data statement.  This property is never null.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandsAllowed">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Management.Automation.Language.ExpressionAst&gt; CommandsAllowed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Management.Automation.Language.ExpressionAst&gt; CommandsAllowed" />
      <MemberSignature Language="DocId" Value="P:System.Management.Automation.Language.DataStatementAst.CommandsAllowed" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CommandsAllowed As ReadOnlyCollection(Of ExpressionAst)" />
      <MemberSignature Language="F#" Value="member this.CommandsAllowed : System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Management.Automation.Language.ExpressionAst&gt;" Usage="System.Management.Automation.Language.DataStatementAst.CommandsAllowed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Management.Automation.Language.ExpressionAst&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The asts naming the commands allowed to execute in this data statement.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public override System.Management.Automation.Language.Ast Copy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Management.Automation.Language.Ast Copy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Automation.Language.DataStatementAst.Copy" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Copy () As Ast" />
      <MemberSignature Language="F#" Value="override this.Copy : unit -&gt; System.Management.Automation.Language.Ast" Usage="dataStatementAst.Copy " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Language.Ast</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Copy the DataStatementAst instance
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Variable">
      <MemberSignature Language="C#" Value="public string Variable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Variable" />
      <MemberSignature Language="DocId" Value="P:System.Management.Automation.Language.DataStatementAst.Variable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Variable As String" />
      <MemberSignature Language="F#" Value="member this.Variable : string" Usage="System.Management.Automation.Language.DataStatementAst.Variable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The name of the variable this data statement sets, or null if no variable name was specified.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>