<Type Name="ErrorStatementAst" FullName="System.Management.Automation.Language.ErrorStatementAst">
  <TypeSignature Language="C#" Value="public class ErrorStatementAst : System.Management.Automation.Language.PipelineBaseAst" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ErrorStatementAst extends System.Management.Automation.Language.PipelineBaseAst" />
  <TypeSignature Language="DocId" Value="T:System.Management.Automation.Language.ErrorStatementAst" />
  <TypeSignature Language="VB.NET" Value="Public Class ErrorStatementAst&#xA;Inherits PipelineBaseAst" />
  <TypeSignature Language="F#" Value="type ErrorStatementAst = class&#xA;    inherit PipelineBaseAst" />
  <AssemblyInfo>
    <AssemblyName>System.Management.Automation</AssemblyName>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Management.Automation.Language.PipelineBaseAst</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            A placeholder statement used when there are syntactic errors in the source script.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Bodies">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Management.Automation.Language.Ast&gt; Bodies { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Management.Automation.Language.Ast&gt; Bodies" />
      <MemberSignature Language="DocId" Value="P:System.Management.Automation.Language.ErrorStatementAst.Bodies" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Bodies As ReadOnlyCollection(Of Ast)" />
      <MemberSignature Language="F#" Value="member this.Bodies : System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Management.Automation.Language.Ast&gt;" Usage="System.Management.Automation.Language.ErrorStatementAst.Bodies" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Management.Automation.Language.Ast&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The bodies specified.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Conditions">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Management.Automation.Language.Ast&gt; Conditions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Management.Automation.Language.Ast&gt; Conditions" />
      <MemberSignature Language="DocId" Value="P:System.Management.Automation.Language.ErrorStatementAst.Conditions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Conditions As ReadOnlyCollection(Of Ast)" />
      <MemberSignature Language="F#" Value="member this.Conditions : System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Management.Automation.Language.Ast&gt;" Usage="System.Management.Automation.Language.ErrorStatementAst.Conditions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Management.Automation.Language.Ast&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The conditions specified.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public override System.Management.Automation.Language.Ast Copy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Management.Automation.Language.Ast Copy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Automation.Language.ErrorStatementAst.Copy" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Copy () As Ast" />
      <MemberSignature Language="F#" Value="override this.Copy : unit -&gt; System.Management.Automation.Language.Ast" Usage="errorStatementAst.Copy " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Language.Ast</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Copy the ErrorStatementAst instance
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Flags">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.Dictionary&lt;string,Tuple&lt;System.Management.Automation.Language.Token,System.Management.Automation.Language.Ast&gt;&gt; Flags { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.Dictionary`2&lt;string, class System.Tuple`2&lt;class System.Management.Automation.Language.Token, class System.Management.Automation.Language.Ast&gt;&gt; Flags" />
      <MemberSignature Language="DocId" Value="P:System.Management.Automation.Language.ErrorStatementAst.Flags" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Flags As Dictionary(Of String, Tuple(Of Token, Ast))" />
      <MemberSignature Language="F#" Value="member this.Flags : System.Collections.Generic.Dictionary&lt;string, System.Management.Automation.Language.Token * System.Management.Automation.Language.Ast&gt;" Usage="System.Management.Automation.Language.ErrorStatementAst.Flags" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.Dictionary&lt;System.String,System.Tuple&lt;System.Management.Automation.Language.Token,System.Management.Automation.Language.Ast&gt;&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The flags specified and their value. The value is null if it's not specified.
            e.g. switch -regex -file c:\demo.txt  ---&gt;   regex -- null
                                                         file  -- { c:\demo.txt }
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Kind">
      <MemberSignature Language="C#" Value="public System.Management.Automation.Language.Token Kind { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Management.Automation.Language.Token Kind" />
      <MemberSignature Language="DocId" Value="P:System.Management.Automation.Language.ErrorStatementAst.Kind" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Kind As Token" />
      <MemberSignature Language="F#" Value="member this.Kind : System.Management.Automation.Language.Token" Usage="System.Management.Automation.Language.ErrorStatementAst.Kind" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Language.Token</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Indicate the kind of the ErrorStatement. e.g. Kind == Switch means that this error statment is generated
            when parsing a switch statement.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NestedAst">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Management.Automation.Language.Ast&gt; NestedAst { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Management.Automation.Language.Ast&gt; NestedAst" />
      <MemberSignature Language="DocId" Value="P:System.Management.Automation.Language.ErrorStatementAst.NestedAst" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NestedAst As ReadOnlyCollection(Of Ast)" />
      <MemberSignature Language="F#" Value="member this.NestedAst : System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Management.Automation.Language.Ast&gt;" Usage="System.Management.Automation.Language.ErrorStatementAst.NestedAst" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Management.Automation.Language.Ast&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Sometimes a valid ast is parsed successfully within the extent that this error statement represents.  Those
            asts are contained in this collection.  This collection may contain other error asts.  This collection may
            be null when no asts were successfully constructed within the extent of this error ast.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>