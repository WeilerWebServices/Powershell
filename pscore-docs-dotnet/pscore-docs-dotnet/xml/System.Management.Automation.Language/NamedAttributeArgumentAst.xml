<Type Name="NamedAttributeArgumentAst" FullName="System.Management.Automation.Language.NamedAttributeArgumentAst">
  <TypeSignature Language="C#" Value="public class NamedAttributeArgumentAst : System.Management.Automation.Language.Ast" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit NamedAttributeArgumentAst extends System.Management.Automation.Language.Ast" />
  <TypeSignature Language="DocId" Value="T:System.Management.Automation.Language.NamedAttributeArgumentAst" />
  <TypeSignature Language="VB.NET" Value="Public Class NamedAttributeArgumentAst&#xA;Inherits Ast" />
  <TypeSignature Language="F#" Value="type NamedAttributeArgumentAst = class&#xA;    inherit Ast" />
  <AssemblyInfo>
    <AssemblyName>System.Management.Automation</AssemblyName>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Management.Automation.Language.Ast</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            The ast representing a named attribute argument.  For example, in <c>[Parameter(Mandatory=$true)]</c>, this ast
            represents <c>Mandatory=$true</c>.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NamedAttributeArgumentAst (System.Management.Automation.Language.IScriptExtent extent, string argumentName, System.Management.Automation.Language.ExpressionAst argument, bool expressionOmitted);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Management.Automation.Language.IScriptExtent extent, string argumentName, class System.Management.Automation.Language.ExpressionAst argument, bool expressionOmitted) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Automation.Language.NamedAttributeArgumentAst.#ctor(System.Management.Automation.Language.IScriptExtent,System.String,System.Management.Automation.Language.ExpressionAst,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (extent As IScriptExtent, argumentName As String, argument As ExpressionAst, expressionOmitted As Boolean)" />
      <MemberSignature Language="F#" Value="new System.Management.Automation.Language.NamedAttributeArgumentAst : System.Management.Automation.Language.IScriptExtent * string * System.Management.Automation.Language.ExpressionAst * bool -&gt; System.Management.Automation.Language.NamedAttributeArgumentAst" Usage="new System.Management.Automation.Language.NamedAttributeArgumentAst (extent, argumentName, argument, expressionOmitted)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="extent" Type="System.Management.Automation.Language.IScriptExtent" />
        <Parameter Name="argumentName" Type="System.String" />
        <Parameter Name="argument" Type="System.Management.Automation.Language.ExpressionAst" />
        <Parameter Name="expressionOmitted" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="extent">
            The extent of the named attribute argument, starting with the name, ending with the expression, or if the expression
            is omitted from the source, then ending at the end of the name.
            </param>
        <param name="argumentName">The name of the argument specified.  May not be null or empty.</param>
        <param name="argument">The argument expression.  May not be null even if the expression is omitted from the source.</param>
        <param name="expressionOmitted">
            True when an explicit argument is not provided in the source, e.g. <c>[Parameter(Mandatory)]</c>.  In this case,
            an ast for the argument expression must still be provided.
            </param>
        <summary>
            Construct the ast for a named attribute argument.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Management.Automation.PSArgumentNullException">
            If <paramref name="extent" />, <paramref name="argumentName" />, or <paramref name="argument" /> is null, or if
            <paramref name="argumentName" /> is an empty string.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Argument">
      <MemberSignature Language="C#" Value="public System.Management.Automation.Language.ExpressionAst Argument { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Management.Automation.Language.ExpressionAst Argument" />
      <MemberSignature Language="DocId" Value="P:System.Management.Automation.Language.NamedAttributeArgumentAst.Argument" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Argument As ExpressionAst" />
      <MemberSignature Language="F#" Value="member this.Argument : System.Management.Automation.Language.ExpressionAst" Usage="System.Management.Automation.Language.NamedAttributeArgumentAst.Argument" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Language.ExpressionAst</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The ast of the value of the argument specified by this ast.  This property is never null.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ArgumentName">
      <MemberSignature Language="C#" Value="public string ArgumentName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ArgumentName" />
      <MemberSignature Language="DocId" Value="P:System.Management.Automation.Language.NamedAttributeArgumentAst.ArgumentName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ArgumentName As String" />
      <MemberSignature Language="F#" Value="member this.ArgumentName : string" Usage="System.Management.Automation.Language.NamedAttributeArgumentAst.ArgumentName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The named argument specified by this ast, is never null or empty.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public override System.Management.Automation.Language.Ast Copy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Management.Automation.Language.Ast Copy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Automation.Language.NamedAttributeArgumentAst.Copy" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Copy () As Ast" />
      <MemberSignature Language="F#" Value="override this.Copy : unit -&gt; System.Management.Automation.Language.Ast" Usage="namedAttributeArgumentAst.Copy " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Language.Ast</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Copy the NamedAttributeArgumentAst instance
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExpressionOmitted">
      <MemberSignature Language="C#" Value="public bool ExpressionOmitted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ExpressionOmitted" />
      <MemberSignature Language="DocId" Value="P:System.Management.Automation.Language.NamedAttributeArgumentAst.ExpressionOmitted" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ExpressionOmitted As Boolean" />
      <MemberSignature Language="F#" Value="member this.ExpressionOmitted : bool" Usage="System.Management.Automation.Language.NamedAttributeArgumentAst.ExpressionOmitted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            If the source omitted an expression, this returns true, otherwise false.  This allows a caller to distinguish
            the difference between <c>[Parameter(Mandatory)]</c> and <c>[Parameter(Mandatory=$true)]</c></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>