<Type Name="StatementBlockAst" FullName="System.Management.Automation.Language.StatementBlockAst">
  <TypeSignature Language="C#" Value="public class StatementBlockAst : System.Management.Automation.Language.Ast" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit StatementBlockAst extends System.Management.Automation.Language.Ast" />
  <TypeSignature Language="DocId" Value="T:System.Management.Automation.Language.StatementBlockAst" />
  <TypeSignature Language="VB.NET" Value="Public Class StatementBlockAst&#xA;Inherits Ast" />
  <TypeSignature Language="F#" Value="type StatementBlockAst = class&#xA;    inherit Ast" />
  <AssemblyInfo>
    <AssemblyName>System.Management.Automation</AssemblyName>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Management.Automation.Language.Ast</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            The ast representing a block of statements.  The block of statements could be part of a script block or some other
            statement such as an if statement or while statement.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StatementBlockAst (System.Management.Automation.Language.IScriptExtent extent, System.Collections.Generic.IEnumerable&lt;System.Management.Automation.Language.StatementAst&gt; statements, System.Collections.Generic.IEnumerable&lt;System.Management.Automation.Language.TrapStatementAst&gt; traps);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Management.Automation.Language.IScriptExtent extent, class System.Collections.Generic.IEnumerable`1&lt;class System.Management.Automation.Language.StatementAst&gt; statements, class System.Collections.Generic.IEnumerable`1&lt;class System.Management.Automation.Language.TrapStatementAst&gt; traps) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Automation.Language.StatementBlockAst.#ctor(System.Management.Automation.Language.IScriptExtent,System.Collections.Generic.IEnumerable{System.Management.Automation.Language.StatementAst},System.Collections.Generic.IEnumerable{System.Management.Automation.Language.TrapStatementAst})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (extent As IScriptExtent, statements As IEnumerable(Of StatementAst), traps As IEnumerable(Of TrapStatementAst))" />
      <MemberSignature Language="F#" Value="new System.Management.Automation.Language.StatementBlockAst : System.Management.Automation.Language.IScriptExtent * seq&lt;System.Management.Automation.Language.StatementAst&gt; * seq&lt;System.Management.Automation.Language.TrapStatementAst&gt; -&gt; System.Management.Automation.Language.StatementBlockAst" Usage="new System.Management.Automation.Language.StatementBlockAst (extent, statements, traps)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="extent" Type="System.Management.Automation.Language.IScriptExtent" />
        <Parameter Name="statements" Type="System.Collections.Generic.IEnumerable&lt;System.Management.Automation.Language.StatementAst&gt;" />
        <Parameter Name="traps" Type="System.Collections.Generic.IEnumerable&lt;System.Management.Automation.Language.TrapStatementAst&gt;" />
      </Parameters>
      <Docs>
        <param name="extent">The extent of the statement block.  If curly braces are part of the statement block (and
            not some other ast like in a script block), then the curly braces are included in the extent, otherwise the
            extent runs from the first statement or trap to the last statement or trap.</param>
        <param name="statements">The (possibly null) collection of statements.</param>
        <param name="traps">The (possibly null) collection of trap statements.</param>
        <summary>
            Construct a statement block.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Management.Automation.PSArgumentNullException">
            If <paramref name="extent" /> is null.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public override System.Management.Automation.Language.Ast Copy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Management.Automation.Language.Ast Copy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Automation.Language.StatementBlockAst.Copy" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Copy () As Ast" />
      <MemberSignature Language="F#" Value="override this.Copy : unit -&gt; System.Management.Automation.Language.Ast" Usage="statementBlockAst.Copy " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Language.Ast</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Copy the StatementBlockAst instance
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Statements">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Management.Automation.Language.StatementAst&gt; Statements { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Management.Automation.Language.StatementAst&gt; Statements" />
      <MemberSignature Language="DocId" Value="P:System.Management.Automation.Language.StatementBlockAst.Statements" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Statements As ReadOnlyCollection(Of StatementAst)" />
      <MemberSignature Language="F#" Value="member this.Statements : System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Management.Automation.Language.StatementAst&gt;" Usage="System.Management.Automation.Language.StatementBlockAst.Statements" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Management.Automation.Language.StatementAst&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The asts for all of the statements represented by this statement block.  This property is never null.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Traps">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Management.Automation.Language.TrapStatementAst&gt; Traps { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Management.Automation.Language.TrapStatementAst&gt; Traps" />
      <MemberSignature Language="DocId" Value="P:System.Management.Automation.Language.StatementBlockAst.Traps" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Traps As ReadOnlyCollection(Of TrapStatementAst)" />
      <MemberSignature Language="F#" Value="member this.Traps : System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Management.Automation.Language.TrapStatementAst&gt;" Usage="System.Management.Automation.Language.StatementBlockAst.Traps" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Management.Automation.Language.TrapStatementAst&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The asts for all of the trap statements specified by this statement block, or null if no trap statements were
            specified in this block.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>