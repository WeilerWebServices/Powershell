<Type Name="KeyInfo" FullName="System.Management.Automation.Host.KeyInfo">
  <TypeSignature Language="C#" Value="public struct KeyInfo" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit KeyInfo extends System.ValueType" />
  <TypeSignature Language="DocId" Value="T:System.Management.Automation.Host.KeyInfo" />
  <TypeSignature Language="VB.NET" Value="Public Structure KeyInfo" />
  <TypeSignature Language="F#" Value="type KeyInfo = struct" />
  <AssemblyInfo>
    <AssemblyName>System.Management.Automation</AssemblyName>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            
             Represents information of a keystroke
            
             </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public KeyInfo (int virtualKeyCode, char ch, System.Management.Automation.Host.ControlKeyStates controlKeyState, bool keyDown);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 virtualKeyCode, char ch, valuetype System.Management.Automation.Host.ControlKeyStates controlKeyState, bool keyDown) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Automation.Host.KeyInfo.#ctor(System.Int32,System.Char,System.Management.Automation.Host.ControlKeyStates,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (virtualKeyCode As Integer, ch As Char, controlKeyState As ControlKeyStates, keyDown As Boolean)" />
      <MemberSignature Language="F#" Value="new System.Management.Automation.Host.KeyInfo : int * char * System.Management.Automation.Host.ControlKeyStates * bool -&gt; System.Management.Automation.Host.KeyInfo" Usage="new System.Management.Automation.Host.KeyInfo (virtualKeyCode, ch, controlKeyState, keyDown)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="virtualKeyCode" Type="System.Int32" />
        <Parameter Name="ch" Type="System.Char" />
        <Parameter Name="controlKeyState" Type="System.Management.Automation.Host.ControlKeyStates" />
        <Parameter Name="keyDown" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="virtualKeyCode">
            
             The virtual key code
            
             </param>
        <param name="ch">
            
             The character
            
             </param>
        <param name="controlKeyState">
            
             The control key state
            
             </param>
        <param name="keyDown">
            
             Whether the key is pressed or released
            
             </param>
        <summary>
            
             Initialize a new instance of the KeyInfo class and defines the VirtualKeyCode,
             Character, ControlKeyState and KeyDown values.
            
             </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Character">
      <MemberSignature Language="C#" Value="public char Character { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance char Character" />
      <MemberSignature Language="DocId" Value="P:System.Management.Automation.Host.KeyInfo.Character" />
      <MemberSignature Language="VB.NET" Value="Public Property Character As Char" />
      <MemberSignature Language="F#" Value="member this.Character : char with get, set" Usage="System.Management.Automation.Host.KeyInfo.Character" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets and set unicode Character of the key
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ControlKeyState">
      <MemberSignature Language="C#" Value="public System.Management.Automation.Host.ControlKeyStates ControlKeyState { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Management.Automation.Host.ControlKeyStates ControlKeyState" />
      <MemberSignature Language="DocId" Value="P:System.Management.Automation.Host.KeyInfo.ControlKeyState" />
      <MemberSignature Language="VB.NET" Value="Public Property ControlKeyState As ControlKeyStates" />
      <MemberSignature Language="F#" Value="member this.ControlKeyState : System.Management.Automation.Host.ControlKeyStates with get, set" Usage="System.Management.Automation.Host.KeyInfo.ControlKeyState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Automation.Host.ControlKeyStates</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            State of the control keys.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Automation.Host.KeyInfo.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="keyInfo.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
            
             object to be compared for equality.
            
             </param>
        <summary>
            
             Overrides <see cref="M:System.Object.Equals(System.Object)" /></summary>
        <returns>
            
             True if <paramref name="obj" /> is KeyInfo and its VirtualKeyCode, Character, ControlKeyState, and KeyDown values are the
             same as those of this instance, false if not.
            
             </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Automation.Host.KeyInfo.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="keyInfo.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            
             Overrides <see cref="M:System.Object.GetHashCode" /></summary>
        <returns>
            
             Hash code for this instance.
            
             <!--consider KeyDown (true == 1, false == 0) the highest-order nibble,
                            ControlKeyState the second to fourth highest-order nibbles
                            VirtualKeyCode the lower-order nibbles of a 32-bit int,
                   Then use the UInt32.GetHashCode.--></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyDown">
      <MemberSignature Language="C#" Value="public bool KeyDown { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool KeyDown" />
      <MemberSignature Language="DocId" Value="P:System.Management.Automation.Host.KeyInfo.KeyDown" />
      <MemberSignature Language="VB.NET" Value="Public Property KeyDown As Boolean" />
      <MemberSignature Language="F#" Value="member this.KeyDown : bool with get, set" Usage="System.Management.Automation.Host.KeyInfo.KeyDown" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets and set the status of whether this instance is generated by a key pressed or released
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Management.Automation.Host.KeyInfo first, System.Management.Automation.Host.KeyInfo second);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Management.Automation.Host.KeyInfo first, valuetype System.Management.Automation.Host.KeyInfo second) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Automation.Host.KeyInfo.op_Equality(System.Management.Automation.Host.KeyInfo,System.Management.Automation.Host.KeyInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (first As KeyInfo, second As KeyInfo) As Boolean" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.Management.Automation.Host.KeyInfo * System.Management.Automation.Host.KeyInfo -&gt; bool" Usage="first = second" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="first" Type="System.Management.Automation.Host.KeyInfo" />
        <Parameter Name="second" Type="System.Management.Automation.Host.KeyInfo" />
      </Parameters>
      <Docs>
        <param name="first">
            
             The left side operand.
            
             </param>
        <param name="second">
            
             The right side operand.
            
             </param>
        <summary>
            
             Compares two instances for equality
            
             </summary>
        <returns>
            
             true if the respective Character, ControlKeyStates , KeyDown, and VirtualKeyCode fields
             are the same, false otherwise.
            
             </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Management.Automation.Host.KeyInfo first, System.Management.Automation.Host.KeyInfo second);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Management.Automation.Host.KeyInfo first, valuetype System.Management.Automation.Host.KeyInfo second) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Automation.Host.KeyInfo.op_Inequality(System.Management.Automation.Host.KeyInfo,System.Management.Automation.Host.KeyInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (first As KeyInfo, second As KeyInfo) As Boolean" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.Management.Automation.Host.KeyInfo * System.Management.Automation.Host.KeyInfo -&gt; bool" Usage="System.Management.Automation.Host.KeyInfo.op_Inequality (first, second)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="first" Type="System.Management.Automation.Host.KeyInfo" />
        <Parameter Name="second" Type="System.Management.Automation.Host.KeyInfo" />
      </Parameters>
      <Docs>
        <param name="first">
            
             The left side operand.
            
             </param>
        <param name="second">
            
             The right side operand.
            
             </param>
        <summary>
            
             Compares two instances for inequality
            
             </summary>
        <returns>
            
             true if any of the respective Character, ControlKeyStates , KeyDown, or VirtualKeyCode fields
             are the different, false otherwise.
            
             </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Automation.Host.KeyInfo.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="keyInfo.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            
             Overloads <see cref="M:System.Object.ToString" /></summary>
        <returns>
            
             "a,b,c,d" where a, b, c, and d are the values of the VirtualKeyCode, Character, ControlKeyState, and KeyDown properties.
            
             </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VirtualKeyCode">
      <MemberSignature Language="C#" Value="public int VirtualKeyCode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 VirtualKeyCode" />
      <MemberSignature Language="DocId" Value="P:System.Management.Automation.Host.KeyInfo.VirtualKeyCode" />
      <MemberSignature Language="VB.NET" Value="Public Property VirtualKeyCode As Integer" />
      <MemberSignature Language="F#" Value="member this.VirtualKeyCode : int with get, set" Usage="System.Management.Automation.Host.KeyInfo.VirtualKeyCode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            
             Gets and set device-independent key
            
             </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>