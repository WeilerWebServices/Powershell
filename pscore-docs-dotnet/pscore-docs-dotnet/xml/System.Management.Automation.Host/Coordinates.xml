<Type Name="Coordinates" FullName="System.Management.Automation.Host.Coordinates">
  <TypeSignature Language="C#" Value="public struct Coordinates" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit Coordinates extends System.ValueType" />
  <TypeSignature Language="DocId" Value="T:System.Management.Automation.Host.Coordinates" />
  <TypeSignature Language="VB.NET" Value="Public Structure Coordinates" />
  <TypeSignature Language="F#" Value="type Coordinates = struct" />
  <AssemblyInfo>
    <AssemblyName>System.Management.Automation</AssemblyName>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            
             Represents an (x,y) coordinate pair
            
             </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Coordinates (int x, int y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 x, int32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Automation.Host.Coordinates.#ctor(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (x As Integer, y As Integer)" />
      <MemberSignature Language="F#" Value="new System.Management.Automation.Host.Coordinates : int * int -&gt; System.Management.Automation.Host.Coordinates" Usage="new System.Management.Automation.Host.Coordinates (x, y)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x">
            
             The X coordinate
            
             </param>
        <param name="y">
            
             The Y coordinate
            
             </param>
        <summary>
            
             Initializes a new instance of the Coordinates class and defines the X and Y values.
            
             </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Automation.Host.Coordinates.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="coordinates.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
            
             object to be compared for equality.
            
             </param>
        <summary>
            
             Overrides <see cref="M:System.Object.Equals(System.Object)" /></summary>
        <returns>
            
             True if <paramref name="objB" /> is Coordinates and its X and Y values are the same as those of this instance,
             false if not.
            
             </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Automation.Host.Coordinates.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="coordinates.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            
             Overrides <see cref="M:System.Object.GetHashCode" /></summary>
        <returns>
            
             Hash code for this instance.
            
             </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Management.Automation.Host.Coordinates first, System.Management.Automation.Host.Coordinates second);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Management.Automation.Host.Coordinates first, valuetype System.Management.Automation.Host.Coordinates second) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Automation.Host.Coordinates.op_Equality(System.Management.Automation.Host.Coordinates,System.Management.Automation.Host.Coordinates)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (first As Coordinates, second As Coordinates) As Boolean" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.Management.Automation.Host.Coordinates * System.Management.Automation.Host.Coordinates -&gt; bool" Usage="first = second" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="first" Type="System.Management.Automation.Host.Coordinates" />
        <Parameter Name="second" Type="System.Management.Automation.Host.Coordinates" />
      </Parameters>
      <Docs>
        <param name="first">
            
             The left side operand.
            
             </param>
        <param name="second">
            
             The right side operand.
            
             </param>
        <summary>
            
             Compares two instances for equality
            
             </summary>
        <returns>
            
             true if the respective X and Y values are the same, false otherwise.
            
             </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Management.Automation.Host.Coordinates first, System.Management.Automation.Host.Coordinates second);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Management.Automation.Host.Coordinates first, valuetype System.Management.Automation.Host.Coordinates second) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Automation.Host.Coordinates.op_Inequality(System.Management.Automation.Host.Coordinates,System.Management.Automation.Host.Coordinates)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (first As Coordinates, second As Coordinates) As Boolean" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.Management.Automation.Host.Coordinates * System.Management.Automation.Host.Coordinates -&gt; bool" Usage="System.Management.Automation.Host.Coordinates.op_Inequality (first, second)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="first" Type="System.Management.Automation.Host.Coordinates" />
        <Parameter Name="second" Type="System.Management.Automation.Host.Coordinates" />
      </Parameters>
      <Docs>
        <param name="first">
            
             The left side operand.
            
             </param>
        <param name="second">
            
             The right side operand.
            
             </param>
        <summary>
            
             Compares two instances for inequality
            
             </summary>
        <returns>
            
             true if any of the respective either X or Y field is not the same, false otherwise.
            
             </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Automation.Host.Coordinates.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="coordinates.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            
             Overrides <see cref="M:System.Object.ToString" /></summary>
        <returns>
            
             "a,b" where a and b are the values of the X and Y properties.
            
             </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="X">
      <MemberSignature Language="C#" Value="public int X { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 X" />
      <MemberSignature Language="DocId" Value="P:System.Management.Automation.Host.Coordinates.X" />
      <MemberSignature Language="VB.NET" Value="Public Property X As Integer" />
      <MemberSignature Language="F#" Value="member this.X : int with get, set" Usage="System.Management.Automation.Host.Coordinates.X" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            
             Gets and sets the X coordinate
            
             </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Y">
      <MemberSignature Language="C#" Value="public int Y { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Y" />
      <MemberSignature Language="DocId" Value="P:System.Management.Automation.Host.Coordinates.Y" />
      <MemberSignature Language="VB.NET" Value="Public Property Y As Integer" />
      <MemberSignature Language="F#" Value="member this.Y : int with get, set" Usage="System.Management.Automation.Host.Coordinates.Y" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Automation</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            
             Gets and sets the Y coordinate
            
             </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>